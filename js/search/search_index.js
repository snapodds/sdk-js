var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AccessToken.html",[0,0.358,1,1.819]],["body/interfaces/AccessToken.html",[0,0.488,1,3.032,2,1.404,3,0.23,4,0.23,5,0.23,6,4.343,7,3.873,8,0.29,9,1.038,10,6.963,11,1.316,12,6.963,13,6.963,14,6.963,15,6.963,16,6.963,17,1.752,18,0.461,19,0.019,20,2.256,21,0.26,22,0.015,23,0.015]],["title/components/AppComponent.html",[24,0.657,25,1.192]],["body/components/AppComponent.html",[1,1.135,3,0.105,4,0.105,5,0.105,8,0.133,9,0.602,11,0.635,17,1.349,18,0.42,19,0.019,21,0.119,22,0.009,23,0.009,24,0.948,25,1.59,26,1.339,27,1.726,28,0.959,29,1.726,30,0.91,31,1.989,32,2.135,33,3.365,34,0.865,35,2.692,36,2.557,37,4.337,38,1.487,39,4.393,40,1.569,41,3.588,42,2.368,43,3.395,44,1.046,45,4.249,46,3.79,47,4.948,48,4.948,49,4.948,50,2.943,51,3.446,52,2.943,53,2.943,54,3.446,55,3.63,56,3.446,57,2.973,58,3.446,59,3.172,60,3.446,61,1.273,62,1.613,63,2.346,64,5.906,65,3.365,66,2.943,67,3.28,68,1.693,69,2.316,70,1.046,71,0.744,72,2.943,73,2.316,74,2.316,75,1.944,76,2.316,77,2.316,78,2.316,79,2.316,80,2.316,81,2.316,82,3.588,83,2.316,84,2.316,85,3.588,86,2.749,87,3.588,88,3.588,89,1.993,90,2.135,91,1.869,92,1.694,93,2.407,94,2.316,95,2.749,96,3.082,97,1.759,98,3.082,99,3.446,100,3.588,101,3.588,102,2.316,103,1.412,104,3.082,105,3.082,106,2.316,107,3.588,108,2.499,109,1.993,110,3.588,111,3.588,112,2.316,113,2.499,114,3.082,115,3.082,116,2.499,117,3.447,118,3.631,119,0.822,120,1.28,121,2.316,122,3.588,123,2.749,124,2.135,125,1.869,126,3.082,127,3.588,128,2.316,129,2.316,130,1.41,131,2.749,132,2.316,133,0.611,134,4.179,135,0.479,136,1.485,137,1.613,138,1.071,139,1.613,140,1.135,141,1.774,142,1.989,143,1.613,144,1.989,145,1.774,146,1.286,147,1.485,148,1.485,149,0.389,150,1.485,151,1.135,152,1.378,153,1.989,154,2.316,155,3.588,156,2.316,157,0.822,158,1.514,159,2.316,160,2.316,161,2.316,162,2.316,163,2.316,164,2.316,165,2.316,166,2.316,167,2.316,168,2.316,169,2.316,170,2.316,171,2.316,172,2.316,173,2.316,174,2.316,175,1.774,176,1.487,177,1.206,178,1.071,179,0.959,180,1.993,181,1.759,182,1.869,183,1.135,184,1.071,185,1.869,186,1.013,187,2.44,188,3.588,189,2.104,190,2.316,191,1.206,192,2.316,193,1.485,194,1.774,195,1.485,196,1.485,197,2.316,198,0.91,199,1.41,200,1.273,201,0.91,202,0.91,203,0.91,204,0.744,205,0.91,206,0.744,207,0.91,208,0.744,209,0.91,210,0.744,211,0.91,212,0.744,213,0.91,214,0.744,215,0.91,216,0.744,217,0.91,218,0.744,219,0.865,220,1.41,221,0.744,222,0.91,223,0.744,224,0.744,225,0.612,226,0.744,227,0.91,228,0.744,229,0.782,230,0.91,231,0.91]],["title/modules/AppModule.html",[232,3.187,233,2.585]],["body/modules/AppModule.html",[3,0.154,4,0.154,5,0.154,19,0.019,21,0.174,22,0.012,23,0.012,24,1.053,25,2.188,32,2.011,37,2.589,44,0.985,68,0.811,92,0.938,93,1.199,113,3.306,133,0.774,135,0.699,136,3.516,137,2.354,149,0.567,204,2.087,206,2.087,208,2.087,210,2.087,212,2.087,214,2.087,216,2.087,218,2.087,221,2.087,223,2.087,224,2.087,225,0.894,226,1.525,228,2.087,229,1.141,233,5.307,234,2.589,235,3.042,236,2.903,237,2.903,238,3.82,239,1.877,240,2.589,241,3.38,242,4.746,243,4.746,244,5.485,245,3.38,246,4.076,247,4.076,248,4.746,249,2.589,250,4.746,251,5.948,252,4.746,253,3.38,254,2.903,255,4.746,256,2.903,257,2.011,258,4.076,259,3.38,260,4.746,261,2.589,262,4.746,263,3.306,264,3.38,265,1.563,266,4.746,267,3.38,268,3.38,269,3.38,270,3.38,271,3.38,272,3.38,273,3.38,274,3.38,275,3.38,276,3.38,277,3.38,278,2.589,279,3.38,280,2.903,281,3.38,282,3.38,283,3.38,284,2.354,285,2.903,286,3.38,287,2.011,288,1.76,289,4.746,290,3.38,291,3.38,292,3.38]],["title/injectables/AppStateStore.html",[67,2.061,293,0.89]],["body/injectables/AppStateStore.html",[3,0.182,4,0.182,5,0.182,8,0.229,9,0.893,11,0.707,18,0.338,19,0.019,21,0.273,22,0.013,23,0.013,42,2.306,44,1.55,67,2.953,68,1.593,70,1.163,71,0.6,89,2.217,92,1.476,93,1.887,103,1.709,119,2.122,120,1.743,130,1.569,133,0.55,135,0.825,146,3.934,149,0.67,157,1.416,158,2.194,293,1.276,294,1.654,295,5.232,296,2.78,297,5.136,298,5.98,299,5.989,300,4.567,301,4.884,302,4.567,303,3.991,304,4.073,305,3.991,306,4.567,307,4.073,308,3.255,309,1.985,310,4.567,311,3.991,312,5.318,313,5.318,314,3.991,315,4.073,316,5.318,317,3.704,318,4.567,319,3.991,320,2.375,321,3.428,322,1.746,323,2.78,324,3.428,325,3.428,326,2.559,327,3.428,328,4.567,329,4.567,330,4.073,331,4.567,332,4.567,333,4.567,334,4.073,335,4.073,336,1.654,337,1.654,338,3.428,339,1.49,340,3.428]],["title/interfaces/ApplicationConfig.html",[0,0.358,97,1.819]],["body/interfaces/ApplicationConfig.html",[0,0.37,1,2.871,2,1.064,3,0.174,4,0.174,5,0.174,8,0.22,9,0.869,17,1.576,18,0.452,19,0.019,21,0.197,22,0.013,23,0.013,37,5.171,43,1.996,51,4.369,52,4.016,53,3.732,54,4.369,55,4.328,56,4.369,57,4.028,58,4.369,59,4.328,72,4.175,75,2.653,89,3.484,90,3.079,93,2.079,97,2.536,117,3.267,130,2.653,131,3.963,133,0.536,138,1.772,142,3.292,143,2.669,150,2.457,151,1.878,152,2.28,341,3.292,342,3.292,343,4.328,344,5.171,345,3.963,346,6.273,347,6.273,348,4.444,349,5.175,350,5.175,351,4.444,352,2.536,353,5.175,354,5.175,355,4.444,356,3.963,357,5.175,358,2.695,359,3.963,360,3.604,361,5.175]],["title/injectables/ApplicationConfigService.html",[63,1.537,293,0.89]],["body/injectables/ApplicationConfigService.html",[1,1.102,3,0.102,4,0.102,5,0.102,8,0.129,9,0.589,11,0.935,17,1.112,18,0.403,19,0.019,20,2.04,21,0.115,22,0.009,23,0.009,42,2.371,44,1.022,51,4.07,52,2.565,53,3.141,54,1.566,55,2.764,56,1.566,57,3.593,58,1.566,59,2.764,60,2.443,63,1.453,68,1.674,70,1.539,71,0.794,75,2.296,90,2.087,91,1.827,92,2.007,93,2.145,97,2.962,103,1.127,108,1.566,109,1.948,116,3.392,117,2.914,119,2.204,120,1.81,123,2.686,125,1.827,130,1.378,133,0.547,135,0.465,138,1.04,143,1.566,149,0.378,150,2.248,151,2.588,152,1.338,157,2.204,158,2.011,225,0.928,240,2.686,284,1.566,288,1.171,293,0.841,294,0.932,322,0.983,336,0.932,337,0.932,339,2.088,343,3.586,352,1.719,358,1.827,362,5.38,363,1.723,364,4.312,365,4.312,366,4.312,367,5.594,368,4.312,369,4.87,370,3.507,371,3.507,372,4.87,373,3.507,374,4.87,375,4.87,376,4.87,377,4.87,378,4.87,379,3.507,380,3.507,381,2.249,382,3.897,383,3.012,384,3.507,385,2.249,386,1.948,387,2.087,388,3.507,389,2.249,390,3.507,391,2.897,392,3.507,393,2.249,394,2.686,395,1.827,396,3.012,397,3.507,398,3.507,399,2.249,400,3.392,401,2.686,402,0.442,403,5.28,404,2.705,405,2.686,406,3.012,407,3.012,408,3.012,409,2.087,410,2.686,411,2.249,412,2.249,413,2.249,414,3.012,415,3.507,416,3.012,417,2.249,418,3.392,419,3.012,420,2.249,421,2.686,422,1.948,423,3.507,424,6.044,425,2.249,426,3.012,427,2.686,428,4.87,429,2.764,430,3.507,431,2.249,432,3.507,433,3.507,434,2.249,435,3.507,436,2.249,437,3.507,438,2.249,439,3.73,440,2.249,441,3.507,442,2.249,443,2.249,444,2.249,445,4.183,446,1.338,447,1.723,448,2.249,449,1.723,450,1.932,451,1.932,452,1.932,453,1.932,454,2.249,455,2.249,456,2.249,457,4.312,458,3.507,459,2.249,460,2.249,461,2.249,462,2.249,463,2.249,464,2.249,465,2.249,466,2.249,467,2.249,468,2.249,469,2.249,470,2.249,471,2.249,472,2.249]],["title/injectables/AuthService.html",[293,0.89,473,2.379]],["body/injectables/AuthService.html",[1,3.611,3,0.153,4,0.153,5,0.153,8,0.193,9,0.793,11,1.148,17,1.521,18,0.397,19,0.019,20,1.133,21,0.172,22,0.012,23,0.012,42,2.432,44,1.376,61,1.191,62,2.338,63,2.685,68,1.658,70,1.376,71,0.71,75,2.33,86,3.617,92,1.848,95,3.617,109,2.623,119,1.191,120,0.978,133,0.647,135,0.694,138,1.552,140,1.645,149,0.563,157,2.3,158,1.814,287,1.997,293,1.133,294,1.391,308,2.678,309,1.763,320,1.997,322,1.468,336,1.391,337,1.391,339,1.253,343,3.028,360,3.289,402,0.659,429,3.028,446,1.997,473,3.028,474,2.883,475,5.464,476,5.464,477,5.929,478,5.929,479,5.929,480,5.929,481,4.723,482,4.723,483,3.357,484,4.723,485,3.357,486,4.056,487,3.527,488,4.723,489,5.929,490,5.364,491,3.357,492,3.617,493,4.723,494,5.929,495,4.723,496,4.723,497,3.357,498,5.929,499,3.289,500,4.723,501,4.723,502,4.723,503,4.723,504,3.357,505,4.723,506,4.056,507,4.723,508,3.617,509,4.723,510,3.357,511,3.357,512,4.056,513,3.357,514,3.357,515,2.883,516,3.357,517,3.357,518,3.357,519,3.357,520,3.357,521,3.357,522,3.357,523,3.357,524,5.464,525,3.357,526,3.357,527,3.357,528,3.357]],["title/interfaces/Competitor.html",[0,0.358,529,2.208]],["body/interfaces/Competitor.html",[0,0.51,2,1.469,3,0.241,4,0.241,5,0.241,8,0.303,9,1.067,17,1.557,18,0.404,19,0.019,20,2.301,21,0.272,22,0.016,23,0.016,71,1.104,352,3.34,402,1.039,529,4.419,530,4.544,531,4.052,532,2.755,533,4.055,534,4.37]],["title/components/ContentComponent.html",[24,0.657,204,1.192]],["body/components/ContentComponent.html",[3,0.207,4,0.207,5,0.207,19,0.019,21,0.233,22,0.014,23,0.014,24,1.127,25,1.459,26,2.159,27,2.273,28,1.881,29,1.785,30,1.785,34,1.695,35,2.98,36,2.83,38,2.396,71,0.869,103,1.459,133,0.47,135,0.939,149,0.762,179,1.881,184,2.1,185,3.315,189,2.634,198,1.785,199,2.273,200,2.053,201,1.785,202,1.785,203,1.785,204,2.153,205,1.785,206,1.459,207,1.785,208,1.459,209,1.785,210,1.459,211,1.785,212,1.459,213,1.785,214,1.459,215,1.785,216,1.459,217,1.785,218,1.459,219,1.695,220,2.273,221,1.459,222,1.785,223,1.459,224,1.459,225,1.201,226,1.459,227,1.785,228,1.459,229,1.533,230,1.785,231,1.785,535,3.901,536,3.787,537,6.365,538,4.968,539,2.911,540,2.911,541,3.479,542,3.479,543,3.163,544,3.479]],["title/classes/FileTranslateLoader.html",[149,0.623,263,2.585]],["body/classes/FileTranslateLoader.html",[3,0.195,4,0.195,5,0.195,8,0.246,9,0.936,11,0.76,17,1.415,18,0.354,19,0.019,21,0.22,22,0.014,23,0.014,32,3.318,42,2.214,44,1.625,55,4.205,68,1.338,70,1.25,71,0.645,92,1.191,98,5.321,114,6.095,119,1.522,120,1.25,133,0.704,136,2.751,137,2.988,149,0.72,157,1.522,158,1.896,258,5.321,263,3.884,265,2.865,284,3.884,308,3.036,309,2.082,320,4.146,322,1.876,339,1.602,391,3.318,402,0.843,427,5.208,545,3.286,546,5.321,547,3.685,548,5.577,549,6.196,550,5.577,551,6.196,552,4.29,553,5.577,554,5.577,555,4.79,556,3.884,557,5.577,558,5.577,559,4.79,560,5.577,561,4.29,562,4.79,563,5.577,564,5.577,565,5.577,566,3.884,567,2.988,568,4.29,569,4.29,570,4.29]],["title/components/FooterComponent.html",[24,0.657,206,1.192]],["body/components/FooterComponent.html",[3,0.206,4,0.206,5,0.206,19,0.019,21,0.233,22,0.014,23,0.014,24,1.126,25,1.457,26,2.157,27,2.271,28,1.878,29,1.782,30,1.782,34,1.692,35,2.98,36,2.83,38,2.393,71,0.868,103,1.457,133,0.469,135,0.937,149,0.761,176,1.878,178,2.096,179,1.878,184,2.096,185,3.312,189,2.632,198,1.782,199,2.271,200,2.05,201,1.782,202,1.782,203,1.782,204,1.457,205,1.782,206,2.152,207,1.782,208,1.457,209,1.782,210,1.457,211,1.782,212,1.457,213,1.782,214,1.457,215,1.782,216,1.457,217,1.782,218,1.457,219,1.692,220,2.271,221,1.457,222,1.782,223,1.457,224,1.457,225,1.199,226,1.457,227,1.782,228,1.457,229,1.53,230,1.782,231,1.782,539,2.906,540,2.906,571,3.893,572,4.024,573,6.359,574,4.533,575,2.222,576,3.157,577,2.906,578,2.518,579,3.157]],["title/injectables/GoogleAnalyticsService.html",[66,2.208,293,0.89]],["body/injectables/GoogleAnalyticsService.html",[3,0.121,4,0.121,5,0.121,8,0.153,9,0.67,11,1.098,17,1.593,18,0.414,19,0.019,20,2.306,21,0.137,22,0.01,23,0.01,42,2.445,44,1.164,61,0.946,66,2.376,68,1.687,70,1.807,71,0.932,72,3.165,75,2.091,92,1.897,93,2.424,99,3.705,109,2.218,115,3.43,119,1.417,120,1.901,133,0.413,135,0.551,149,0.447,157,1.417,158,1.898,287,1.585,288,2.08,293,0.958,294,1.104,336,1.104,337,1.104,339,1.986,352,3.256,386,2.218,402,0.524,580,5.425,581,2.041,582,4.114,583,4.114,584,5.32,585,5.32,586,5.32,587,5.32,588,5.32,589,5.32,590,3.994,591,3.994,592,3.994,593,3.994,594,3.994,595,3.994,596,2.041,597,2.931,598,3.994,599,2.665,600,5.32,601,5.982,602,5.32,603,3.795,604,2.665,605,5.982,606,2.665,607,2.665,608,2.665,609,2.665,610,3.994,611,2.665,612,5.137,613,3.994,614,2.665,615,3.994,616,2.665,617,3.994,618,2.665,619,3.994,620,3.994,621,6.745,622,6.523,623,2.289,624,3.994,625,2.665,626,4.569,627,3.994,628,2.665,629,3.994,630,2.665,631,3.994,632,1.856,633,3.994,634,3.059,635,3.059,636,2.289,637,2.665,638,2.665,639,2.665,640,2.665,641,2.665,642,2.665,643,4.789,644,2.665,645,2.665,646,2.665,647,2.665,648,2.289,649,1.847,650,2.289,651,3.43,652,2.665,653,2.665,654,2.665,655,2.665,656,2.665,657,1.856,658,3.994,659,2.289,660,2.665,661,2.665,662,2.665,663,2.665,664,2.665,665,2.665,666,2.665,667,2.665,668,2.665,669,2.665,670,2.665]],["title/components/HeaderComponent.html",[24,0.657,208,1.192]],["body/components/HeaderComponent.html",[3,0.162,4,0.162,5,0.162,8,0.204,11,0.63,18,0.226,19,0.019,21,0.183,22,0.012,23,0.012,24,0.998,25,1.144,26,1.837,27,1.399,28,1.475,29,1.399,30,1.399,34,1.329,35,2.891,36,2.746,38,2.039,40,2.152,44,1.434,61,1.263,62,2.48,63,2.857,68,1.18,70,1.038,71,0.848,92,0.988,93,1.746,103,1.144,133,0.509,135,0.736,139,2.48,140,1.745,149,0.598,158,1.089,176,2.039,177,1.854,178,1.646,179,1.475,182,1.854,183,2.764,184,1.646,185,3.168,186,2.466,187,2.733,189,2.391,191,2.563,198,1.399,199,1.934,200,1.746,201,1.399,202,1.399,203,1.399,204,1.144,205,1.399,206,1.144,207,1.399,208,1.955,209,1.399,210,1.144,211,1.399,212,1.144,213,1.399,214,1.144,215,1.399,216,1.144,217,1.399,218,1.144,219,1.329,220,1.934,221,1.144,222,1.399,223,1.144,224,1.144,225,0.942,226,1.144,227,1.399,228,1.144,229,1.202,230,1.399,231,1.399,239,1.977,265,2.276,287,2.118,315,3.769,345,3.769,383,4.226,409,3.619,542,2.727,577,2.282,578,3.132,659,3.058,671,3.058,672,4.319,673,5.639,674,4.921,675,6.083,676,3.56,677,3.56,678,4.921,679,4.226,680,3.56,681,4.226,682,2.48,683,3.56,684,2.48,685,3.058,686,2.727,687,3.058,688,3.615,689,3.9,690,3.058,691,3.058,692,3.427,693,3.155,694,3.058,695,2.733,696,2.48,697,2.48,698,2.282,699,1.854,700,3.155,701,2.927,702,3.058,703,2.282,704,3.56,705,3.56,706,3.427,707,3.56,708,2.48,709,2.282]],["title/components/HelpComponent.html",[24,0.657,210,1.192]],["body/components/HelpComponent.html",[3,0.126,4,0.126,5,0.126,8,0.159,11,0.491,18,0.176,19,0.019,21,0.143,22,0.01,23,0.01,24,0.869,25,0.892,26,1.537,27,1.091,28,1.15,29,1.091,30,1.091,34,1.036,35,2.783,36,2.678,38,1.705,40,1.8,44,1.2,61,0.985,67,3.372,68,0.987,70,0.809,71,0.738,90,2.449,92,0.771,93,1.461,103,0.892,133,0.426,135,0.574,146,2.725,147,1.779,148,1.779,149,0.466,158,0.849,175,2.126,176,1.705,177,1.446,178,1.284,179,1.15,180,1.542,181,2.017,182,2.144,183,1.36,184,1.284,185,2.555,186,1.214,187,2.725,189,2.133,191,2.144,193,1.779,194,2.126,198,1.091,199,1.618,200,1.461,201,1.091,202,1.091,203,1.091,204,0.892,205,1.091,206,0.892,207,1.091,208,0.892,209,1.091,210,1.744,211,1.091,212,0.892,213,1.091,214,0.892,215,1.091,216,0.892,217,1.091,218,0.892,219,1.036,220,1.618,221,0.892,222,1.091,223,0.892,224,0.892,225,0.734,226,0.892,227,1.091,228,0.892,229,0.937,230,1.091,231,1.091,239,1.542,265,2.808,287,1.651,387,2.449,536,1.651,539,1.779,540,1.779,572,1.933,575,1.36,578,3.219,579,2.867,657,2.867,688,3.146,689,3.716,695,1.542,699,1.446,701,2.449,708,2.867,709,1.779,710,2.384,711,3.758,712,4.907,713,4.117,714,5.428,715,2.776,716,2.776,717,2.776,718,3.153,719,3.536,720,3.536,721,2.867,722,6.455,723,6.455,724,6.455,725,6.455,726,6.455,727,5.428,728,5.428,729,5.428,730,6.455,731,6.455,732,5.428,733,5.428,734,5.428,735,5.428,736,5.428,737,5.428,738,7.131,739,5.428,740,5.428,741,5.428,742,5.428,743,5.428,744,5.428,745,5.428,746,5.428,747,5.428,748,5.428,749,5.428,750,5.428,751,5.428,752,5.428,753,5.428,754,5.428,755,5.428,756,5.428,757,5.428,758,5.428,759,5.428,760,3.536,761,2.126,762,1.779,763,2.384,764,2.776,765,1.933,766,2.126]],["title/injectables/ImageManipulationService.html",[293,0.89,767,2.585]],["body/injectables/ImageManipulationService.html",[3,0.093,4,0.304,5,0.093,8,0.118,11,0.999,17,0.746,18,0.383,19,0.019,20,2.499,21,0.105,22,0.008,23,0.008,34,0.766,42,2.335,44,0.951,61,0.729,68,1.354,70,1.645,71,0.848,75,1.283,91,3.773,92,1.494,109,1.813,119,0.729,120,0.598,133,0.479,135,0.424,149,0.345,150,2.605,157,1.793,158,0.999,186,0.898,196,2.605,200,1.158,225,1.423,287,1.221,288,2.412,293,0.783,294,0.851,309,0.766,336,0.851,337,0.851,339,2.519,360,1.43,386,1.813,402,0.91,414,3.977,418,3.225,487,1.221,575,2.27,596,1.573,597,2.27,632,1.43,636,1.763,648,1.763,649,1.51,698,2.093,762,2.605,767,2.274,768,4.486,769,4.486,770,1.763,771,3.265,772,4.064,773,3.49,774,3.265,775,3.265,776,3.265,777,4.322,778,2.053,779,2.053,780,3.265,781,3.977,782,4.631,783,2.053,784,1.573,785,5.054,786,3.52,787,2.053,788,1.763,789,1.763,790,2.053,791,4.064,792,2.053,793,2.053,794,2.053,795,2.053,796,6.034,797,6.134,798,5.182,799,6.605,800,2.053,801,2.804,802,4.631,803,3.977,804,3.265,805,4.622,806,4.122,807,4.122,808,5.03,809,5.382,810,5.382,811,1.006,812,2.053,813,6.962,814,2.053,815,3.265,816,3.977,817,3.265,818,6.866,819,2.053,820,2.804,821,4.631,822,6.605,823,6.52,824,6.681,825,3.265,826,2.053,827,3.265,828,3.265,829,2.053,830,3.265,831,3.265,832,3.265,833,1.316,834,2.053,835,1.43,836,1.763,837,2.053,838,5.382,839,5.054,840,2.053,841,3.265,842,2.053,843,2.053,844,2.053,845,2.053,846,2.053,847,3.265,848,3.265,849,2.053,850,2.053,851,2.053,852,2.053,853,4.064,854,2.053,855,2.053,856,2.053,857,2.053,858,2.053,859,2.053,860,2.053,861,2.053,862,2.053,863,2.053,864,2.053,865,3.265,866,2.053,867,3.265,868,3.265,869,2.501,870,2.053,871,2.053,872,3.265]],["title/interfaces/LineOdds.html",[0,0.358,125,1.933]],["body/interfaces/LineOdds.html",[0,0.472,2,1.358,3,0.222,4,0.222,5,0.222,8,0.281,9,1.017,11,1.219,18,0.418,19,0.019,21,0.251,22,0.015,23,0.015,124,3.606,125,3.585,130,2.382,133,0.627,138,2.263,151,2.971,402,0.961,529,4.095,873,4.202,874,4.202,875,4.222,876,4.622,877,5.522,878,5.272,879,6.192,880,4.095,881,3.585,882,4.643,883,3.408,884,2.717]],["title/interfaces/Link.html",[0,0.358,885,1.716]],["body/interfaces/Link.html",[0,0.536,2,1.543,3,0.253,4,0.253,5,0.253,8,0.319,9,1.099,11,1.159,17,1.59,18,0.416,19,0.018,21,0.286,22,0.016,23,0.016,75,2.736,885,3.028,886,4.775,887,7.187,888,7.187]],["title/injectables/LoggerService.html",[293,0.89,597,1.819]],["body/injectables/LoggerService.html",[3,0.251,4,0.155,5,0.155,8,0.196,11,1.185,18,0.425,19,0.019,21,0.175,22,0.012,23,0.012,42,2.372,44,1.393,57,4.062,61,1.696,62,2.378,63,2.7,68,1.605,70,1.95,71,1.006,75,1.878,92,1.809,93,2.494,97,2.342,109,2.654,116,4.16,133,0.618,135,0.706,140,1.673,143,2.378,149,0.573,151,3.54,152,3.741,157,1.211,158,1.462,219,1.274,293,1.146,294,1.414,336,1.414,337,1.414,339,2.058,351,5.4,418,3.329,446,2.031,487,2.031,597,2.342,649,2.21,833,2.188,889,2.932,890,3.66,891,4.779,892,3.66,893,5.124,894,3.414,895,4.779,896,3.414,897,4.779,898,3.414,899,4.779,900,3.414,901,4.779,902,3.414,903,5.13,904,4.779,905,5.13,906,5.973,907,4.779,908,3.414,909,4.779,910,4.779,911,4.779,912,4.779,913,4.779,914,4.779,915,4.779,916,3.414,917,3.414,918,3.414,919,3.414,920,3.414,921,3.414,922,3.414,923,3.414,924,5.973,925,3.414,926,3.414,927,5.973,928,3.414,929,3.414,930,3.414,931,3.414,932,3.414,933,3.414,934,3.414,935,3.414]],["title/injectables/MediaDeviceStateStore.html",[293,0.89,936,2.379]],["body/injectables/MediaDeviceStateStore.html",[3,0.179,4,0.179,5,0.179,8,0.226,9,0.886,11,0.699,18,0.378,19,0.019,21,0.271,22,0.013,23,0.013,42,2.298,44,1.538,68,1.587,70,1.15,71,0.593,92,1.465,93,1.872,103,1.696,119,2.11,120,1.733,124,2.347,130,1.551,133,0.546,135,0.816,149,0.662,157,1.4,158,2.189,225,1.043,226,1.268,229,1.781,293,1.266,294,1.635,296,2.748,297,5.107,299,5.971,300,4.532,301,4.862,302,4.532,304,4.042,306,4.532,307,4.042,308,3.407,309,1.97,310,4.532,315,4.042,318,4.532,321,3.389,322,1.725,323,2.748,327,3.389,334,4.042,335,4.042,336,1.635,337,1.635,338,3.389,339,1.473,340,3.389,358,3.546,426,3.389,936,3.383,937,5.215,938,5.946,939,4.983,940,3.946,941,3.946,942,3.946,943,3.946,944,5.277,945,5.277,946,5.277,947,5.277,948,3.946,949,4.042,950,5.277,951,3.946,952,4.532,953,4.532]],["title/injectables/NotificationService.html",[293,0.89,954,2.585]],["body/injectables/NotificationService.html",[3,0.209,4,0.209,5,0.209,8,0.264,11,0.815,18,0.292,19,0.019,21,0.236,22,0.014,23,0.014,42,2.397,44,1.7,59,3.74,61,2.07,63,2.987,68,1.536,70,1.341,71,0.692,72,2.738,75,2.293,92,1.619,93,2.07,133,0.663,135,0.951,140,2.256,149,0.773,157,1.633,158,1.785,293,1.399,294,1.907,336,1.907,337,1.907,358,3.038,418,4.063,446,2.738,487,2.738,651,3.953,833,2.95,954,4.063,955,3.953,956,6.734,957,5.784,958,4.602,959,5.438,960,4.602,961,4.602,962,5.834,963,5.834,964,5.834,965,4.602,966,5.834,967,4.602,968,4.602,969,4.602,970,4.602,971,4.602,972,4.602]],["title/components/OddsComponent.html",[24,0.657,212,1.192]],["body/components/OddsComponent.html",[3,0.074,4,0.074,5,0.074,8,0.093,9,0.454,11,0.793,17,0.792,18,0.364,19,0.019,20,1.17,21,0.084,22,0.007,23,0.007,24,0.614,25,0.523,26,1.009,27,1.362,28,0.674,29,0.64,30,0.64,32,1.608,34,0.608,35,2.485,36,2.391,38,1.12,40,1.182,42,2.104,44,0.788,45,2.977,50,1.608,61,0.578,68,1.411,70,1.305,71,0.769,92,1.243,93,2.034,103,0.523,117,2.896,118,3.411,119,1.23,120,1.01,123,3.92,125,3.589,133,0.464,134,1.733,135,0.336,138,0.753,149,0.273,158,0.827,176,1.12,177,0.848,178,0.753,179,0.674,180,3.184,181,2.725,182,3.064,183,2.195,184,2.834,185,3.524,186,1.516,187,3.558,189,1.586,191,2.896,193,3.281,195,1.733,196,1.733,198,0.64,199,1.062,200,0.959,201,0.64,202,0.64,203,0.64,204,0.523,205,0.64,206,0.523,207,0.64,208,0.523,209,0.64,210,0.523,211,0.64,212,1.297,213,0.64,214,0.523,215,0.64,216,0.523,217,0.64,218,0.523,219,0.608,220,1.062,221,0.523,222,0.64,223,0.523,224,0.523,225,0.431,226,0.869,227,0.64,228,0.523,229,0.55,230,0.64,231,0.64,239,0.904,257,1.608,265,2.478,307,2.071,309,1.672,317,1.883,339,1.672,343,2.588,352,1.699,359,2.071,391,2.401,402,0.793,404,2.843,409,2.664,422,2.242,429,1.044,487,0.969,490,2.071,492,2.071,533,0.969,536,3.187,539,2.588,540,2.588,541,3.92,542,3.092,543,2.811,544,2.071,575,1.978,576,3.872,577,2.871,578,2.683,623,1.398,649,1.603,672,1.247,682,2.811,684,3.565,685,2.977,686,3.092,687,3.846,688,3.097,689,3.435,693,1.044,695,0.904,699,2.666,701,3.308,703,2.588,706,1.883,708,1.134,709,1.044,721,1.883,761,4.258,762,2.871,763,1.398,765,1.134,766,1.247,811,1.325,833,1.044,869,2.071,876,1.044,882,3.092,973,1.398,974,3.467,975,1.603,976,3.467,977,2.703,978,3.467,979,2.703,980,2.703,981,2.703,982,4.036,983,2.703,984,2.322,985,1.628,986,3.7,987,3.565,988,2.703,989,1.628,990,3.467,991,2.703,992,1.628,993,4.036,994,1.978,995,2.703,996,2.322,997,2.703,998,2.322,999,2.322,1000,2.071,1001,2.703,1002,1.628,1003,2.703,1004,2.703,1005,2.703,1006,1.628,1007,2.703,1008,1.628,1009,2.703,1010,4.478,1011,3.43,1012,1.628,1013,2.703,1014,2.811,1015,4.036,1016,2.322,1017,1.628,1018,1.628,1019,1.628,1020,2.071,1021,2.703,1022,1.398,1023,1.628,1024,1.628,1025,1.628,1026,1.628,1027,1.628,1028,1.628,1029,1.628,1030,1.628,1031,3.467,1032,2.703,1033,1.628,1034,1.247,1035,1.628,1036,1.628,1037,2.703,1038,1.628,1039,2.703,1040,2.322,1041,2.703,1042,2.703,1043,2.703,1044,2.703,1045,2.703,1046,2.322,1047,2.322,1048,2.703,1049,1.733,1050,2.322,1051,2.703,1052,2.703,1053,2.703,1054,2.703,1055,2.703,1056,2.703,1057,2.703,1058,2.703,1059,2.703,1060,1.247,1061,3.119,1062,1.398,1063,3.467,1064,1.628,1065,4.036,1066,3.467,1067,1.628,1068,1.628,1069,2.703,1070,1.628,1071,1.398,1072,1.247,1073,1.628,1074,3.092,1075,1.628,1076,1.398,1077,1.628,1078,2.977,1079,1.628,1080,1.628,1081,2.655,1082,1.628,1083,2.322,1084,3.467,1085,1.628,1086,1.134,1087,1.628,1088,1.628,1089,2.703,1090,3.467,1091,1.628,1092,1.628,1093,2.703,1094,1.628,1095,1.628,1096,1.247,1097,1.628,1098,1.628,1099,1.628,1100,1.398,1101,1.628,1102,1.628]],["title/interfaces/OddsOffer.html",[0,0.358,1103,2.585]],["body/interfaces/OddsOffer.html",[0,0.446,2,1.285,3,0.211,4,0.211,5,0.211,8,0.266,9,0.983,11,1.195,17,1.467,18,0.477,19,0.019,21,0.238,22,0.015,23,0.015,133,0.606,402,0.909,532,3.049,583,6.107,811,2.869,885,2.97,975,2.97,1049,4.117,1103,4.078,1104,3.224,1105,3.976,1106,5.855,1107,5.136,1108,4.015,1109,7.11,1110,4.7,1111,5.029,1112,5.029,1113,4.919,1114,5.515,1115,3.545,1116,3.224]],["title/interfaces/OddsOfferOutcome.html",[0,0.358,1110,2.585]],["body/interfaces/OddsOfferOutcome.html",[0,0.41,2,1.181,3,0.193,4,0.193,5,0.193,8,0.244,9,0.931,11,1.271,18,0.48,19,0.019,20,2.506,21,0.218,22,0.014,23,0.014,118,3.67,120,1.616,133,0.44,391,3.299,402,0.835,529,3.299,532,2.888,534,3.889,811,2.717,880,3.299,885,2.853,975,3.321,1049,3.554,1104,2.962,1107,2.962,1108,3.889,1110,3.862,1112,5.971,1115,5.325,1116,2.962,1117,3.652,1118,6.537,1119,6.537,1120,5.971,1121,4.762,1122,5.544,1123,5.299,1124,5.299,1125,5.299]],["title/interfaces/OddsResponse.html",[0,0.358,1126,2.585]],["body/interfaces/OddsResponse.html",[0,0.426,2,1.226,3,0.201,4,0.201,5,0.201,8,0.253,9,0.954,11,1.174,17,1.435,18,0.454,19,0.019,21,0.227,22,0.014,23,0.014,133,0.686,352,3.613,387,3.38,402,0.868,529,4.082,532,2.959,533,4.386,556,3.958,603,3.946,811,2.785,876,4.503,877,5.38,878,5.08,880,4.082,881,3.454,883,3.076,884,2.453,885,2.905,975,3.067,1060,4.352,1104,3.076,1108,3.946,1126,3.958,1127,3.793,1128,5.696,1129,3.383]],["title/injectables/OddsService.html",[293,0.89,987,2.585]],["body/injectables/OddsService.html",[1,1.416,3,0.131,4,0.131,5,0.131,8,0.166,11,0.98,18,0.351,19,0.019,20,2.204,21,0.148,22,0.011,23,0.011,42,2.318,44,1.236,52,2.522,60,2.953,61,1.505,63,2.637,68,1.414,70,1.613,71,0.886,92,1.394,97,2.078,118,3.506,124,2.522,125,3.528,133,0.676,135,0.597,138,1.336,140,1.416,149,0.485,151,2.078,157,1.782,158,1.537,186,1.263,249,2.213,288,3.069,293,1.017,294,1.197,308,2.462,309,1.078,320,1.719,322,1.263,336,1.197,337,1.197,339,1.875,356,3.247,395,2.208,402,0.568,446,1.719,473,4.081,575,1.416,784,3.247,875,2.953,876,2.718,877,3.247,878,3.247,881,2.208,884,1.605,975,2.944,987,2.953,994,2.078,999,4.753,1000,3.247,1011,5.188,1022,2.481,1049,1.852,1113,2.213,1114,3.642,1123,3.642,1124,2.481,1125,2.481,1126,3.854,1130,2.481,1131,4.24,1132,4.24,1133,4.24,1134,4.314,1135,2.481,1136,4.753,1137,2.889,1138,3.642,1139,4.24,1140,2.889,1141,3.642,1142,4.24,1143,4.24,1144,4.24,1145,4.24,1146,2.889,1147,4.24,1148,2.889,1149,4.24,1150,2.481,1151,2.889,1152,3.642,1153,2.213,1154,2.889,1155,2.481,1156,2.481,1157,2.481,1158,2.481,1159,2.889,1160,2.481,1161,2.889,1162,2.481,1163,2.481,1164,2.889,1165,2.889,1166,4.24,1167,2.889,1168,2.889,1169,2.889,1170,2.481,1171,2.889,1172,2.889,1173,2.889,1174,2.889,1175,2.889,1176,2.889,1177,2.889,1178,4.24,1179,2.889,1180,2.889,1181,2.889,1182,5.023,1183,2.889,1184,5.534,1185,5.534,1186,2.889,1187,5.534,1188,2.889,1189,2.889,1190,5.023,1191,2.889,1192,2.889,1193,2.889,1194,2.889,1195,2.889,1196,2.889,1197,2.889,1198,2.889,1199,2.889,1200,2.889,1201,2.889]],["title/interfaces/Player.html",[0,0.358,880,2.208]],["body/interfaces/Player.html",[0,0.517,2,1.488,3,0.244,4,0.244,5,0.244,8,0.308,9,1.076,17,1.565,18,0.407,19,0.019,20,2.314,21,0.275,22,0.016,23,0.016,71,1.107,402,1.053,532,2.792,534,4.383,880,4.431,1074,4.106,1202,4.605]],["title/interfaces/Point2d.html",[0,0.358,1203,2.585]],["body/interfaces/Point2d.html",[0,0.511,2,1.472,3,0.241,4,0.241,5,0.241,8,0.304,9,1.069,18,0.404,19,0.019,20,2.481,21,0.272,22,0.016,23,0.016,120,2.062,402,1.042,1203,4.434,1204,2.945,1205,4.554,1206,4.554,1207,4.554,1208,4.554,1209,7.349,1210,7.349,1211,7.076]],["title/interfaces/Quadrangle2d.html",[0,0.358,1212,2.585]],["body/interfaces/Quadrangle2d.html",[0,0.467,2,1.345,3,0.22,4,0.22,5,0.22,8,0.278,9,1.011,18,0.436,19,0.019,21,0.249,22,0.015,23,0.015,133,0.501,402,0.952,699,3.572,1203,5.303,1204,2.69,1206,6.33,1207,5.173,1208,5.173,1212,4.195,1213,4.16,1214,7.482,1215,6.859,1216,6.859,1217,5.173,1218,6.023,1219,6.023,1220,6.023]],["title/components/SnapComponent.html",[24,0.657,214,1.192]],["body/components/SnapComponent.html",[3,0.069,4,0.069,5,0.069,8,0.086,9,0.426,11,0.681,18,0.272,19,0.019,21,0.077,22,0.006,23,0.006,24,0.76,25,0.484,26,0.946,27,0.593,28,0.625,29,0.593,30,0.593,32,1.508,33,2.513,34,0.563,35,2.435,36,2.426,38,1.05,40,1.109,42,2.416,43,2.003,44,1.121,46,2.946,53,2.765,61,0.9,63,2.235,65,2.513,66,2.288,67,2.997,68,1.526,70,1.121,71,0.699,89,2.581,90,3.086,91,0.785,92,1.591,93,2.229,95,1.942,96,2.177,99,2.679,103,0.815,104,2.177,109,1.408,113,1.766,116,1.766,119,1.164,120,0.956,130,0.996,133,0.631,135,0.312,138,0.697,139,1.05,140,0.739,144,1.295,145,1.155,146,2.997,147,0.966,148,1.625,149,0.253,152,0.897,157,1.365,158,1.866,175,1.155,176,1.359,177,0.785,178,0.697,179,0.625,180,0.837,181,1.608,182,1.709,183,0.739,184,2.285,185,3.472,186,2.032,187,2.136,189,1.512,191,1.709,193,0.966,194,1.155,198,0.593,199,0.996,200,0.9,201,0.593,202,0.593,203,0.593,204,0.484,205,0.593,206,0.484,207,0.593,208,0.484,209,0.593,210,0.484,211,0.593,212,0.484,213,0.593,214,1.236,215,0.593,216,0.484,217,0.593,218,0.484,219,0.563,220,0.996,221,0.484,222,0.593,223,0.484,224,0.484,225,1.134,226,0.484,227,0.593,228,1.588,229,1.569,230,0.593,231,0.593,239,1.822,265,2.149,280,1.295,301,1.942,308,2.102,309,1.735,322,0.659,330,1.942,339,1.225,344,1.942,345,2.946,352,1.885,358,0.785,359,1.942,382,2.679,386,1.408,387,1.508,391,1.508,394,1.942,396,4.455,400,2.285,402,0.296,404,1.408,406,2.177,407,3.303,408,2.177,409,1.952,410,3.286,416,2.177,421,1.942,422,1.408,429,2.466,487,0.897,499,1.766,508,2.513,536,2.288,539,2.979,540,2.103,541,2.513,559,2.177,562,2.177,572,1.766,576,2.988,578,2.997,579,3.441,596,1.155,597,1.885,649,2.285,657,1.766,682,1.05,688,0.966,689,2.466,690,2.177,691,2.177,692,2.679,695,2.382,696,1.766,697,1.05,699,0.785,700,0.966,701,1.952,703,2.466,706,1.05,708,2.679,709,2.103,711,1.942,718,1.942,719,2.177,721,1.766,765,1.766,766,1.155,833,0.966,835,1.766,936,3.459,939,3.441,949,1.942,954,3.441,957,2.177,975,0.697,994,1.243,996,2.177,1016,2.177,1034,1.155,1061,1.05,1153,1.942,1217,3.303,1221,1.295,1222,3.281,1223,3.281,1224,2.535,1225,3.281,1226,4.872,1227,2.535,1228,2.535,1229,2.535,1230,3.846,1231,3.846,1232,3.846,1233,3.846,1234,3.846,1235,3.846,1236,3.846,1237,3.441,1238,3.784,1239,2.535,1240,2.535,1241,1.508,1242,3.846,1243,2.177,1244,2.177,1245,2.535,1246,2.535,1247,2.513,1248,2.535,1249,1.508,1250,2.535,1251,2.535,1252,1.942,1253,2.535,1254,2.535,1255,2.535,1256,1.508,1257,2.535,1258,2.535,1259,2.535,1260,1.508,1261,2.535,1262,2.535,1263,3.846,1264,1.508,1265,2.535,1266,2.535,1267,1.508,1268,2.535,1269,3.846,1270,3.281,1271,3.846,1272,2.535,1273,3.846,1274,1.508,1275,2.177,1276,2.535,1277,1.508,1278,1.508,1279,2.535,1280,2.535,1281,2.535,1282,3.846,1283,2.535,1284,2.535,1285,2.535,1286,1.508,1287,2.535,1288,2.535,1289,1.508,1290,2.535,1291,2.535,1292,1.508,1293,3.684,1294,1.508,1295,1.508,1296,1.295,1297,2.535,1298,1.508,1299,1.295,1300,2.535,1301,2.535,1302,1.508,1303,1.508,1304,1.508,1305,1.508,1306,1.508,1307,1.508,1308,1.295,1309,1.155,1310,1.295,1311,1.508,1312,1.508,1313,1.155,1314,1.508,1315,1.508,1316,1.295,1317,1.508,1318,1.295,1319,1.508,1320,1.508,1321,1.508,1322,1.508,1323,2.535,1324,1.508,1325,1.508,1326,1.508,1327,1.508,1328,1.508,1329,1.508,1330,1.508,1331,1.508,1332,1.508,1333,1.508,1334,2.535,1335,1.508,1336,1.508,1337,1.508,1338,1.508,1339,1.508,1340,1.508,1341,1.508,1342,1.508,1343,1.508,1344,1.508,1345,1.508,1346,1.508,1347,1.508,1348,1.508,1349,1.508,1350,1.295,1351,1.508,1352,1.508,1353,1.508,1354,1.508,1355,1.508,1356,1.508,1357,1.508,1358,1.508,1359,1.508,1360,2.177,1361,2.177,1362,1.155,1363,3.281,1364,3.303,1365,2.535,1366,2.535,1367,3.281,1368,1.155,1369,1.508,1370,1.508,1371,1.295,1372,1.508]],["title/injectables/SnapOddsFacade.html",[293,0.89,1237,2.585]],["body/injectables/SnapOddsFacade.html",[3,0.174,4,0.174,5,0.174,8,0.22,11,1.037,18,0.372,19,0.019,21,0.197,22,0.016,23,0.013,42,1.978,43,1.996,44,1.508,61,1.836,65,4.487,66,3.732,68,1.405,70,1.707,71,0.881,91,2.695,92,1.437,99,3.604,103,1.663,113,3.604,133,0.714,135,0.792,138,1.772,145,2.935,149,0.643,157,2.079,158,1.793,288,2.695,293,1.241,294,1.588,308,3.211,322,1.676,336,1.588,337,1.588,339,1.932,386,3.254,395,3.267,401,3.963,597,3.074,612,3.292,632,2.669,649,1.772,786,4.702,869,3.963,975,2.901,994,3.074,1237,3.604,1247,2.935,1306,3.079,1313,4.805,1350,3.292,1373,5.388,1374,3.292,1375,4.444,1376,4.444,1377,3.833,1378,4.702,1379,3.833,1380,4.444,1381,3.833,1382,4.444,1383,4.444,1384,5.388,1385,4.444,1386,3.833,1387,4.444,1388,5.175,1389,5.175,1390,3.833,1391,4.444,1392,3.833,1393,3.833,1394,3.833,1395,3.833,1396,3.833,1397,3.833,1398,5.859,1399,4.444,1400,3.833,1401,3.833,1402,3.833,1403,3.833,1404,3.833,1405,3.833,1406,3.833]],["title/components/SpinnerComponent.html",[24,0.657,216,1.192]],["body/components/SpinnerComponent.html",[3,0.151,4,0.151,5,0.151,8,0.19,18,0.21,19,0.019,21,0.17,22,0.012,23,0.012,24,0.96,25,1.064,26,1.746,27,1.301,28,1.371,29,1.301,30,1.301,34,1.236,35,2.862,36,2.718,38,1.937,40,2.045,50,2.782,68,0.794,71,0.703,103,1.064,119,1.175,120,0.965,133,0.343,134,2.998,135,0.684,149,0.556,176,1.371,179,1.371,180,1.839,181,1.622,184,2.163,186,2.045,189,2.316,191,2.824,196,3.778,198,1.301,199,1.838,200,1.66,201,1.301,202,1.301,203,1.301,204,1.064,205,1.301,206,1.064,207,1.301,208,1.064,209,1.301,210,1.064,211,1.301,212,1.064,213,1.301,214,1.064,215,1.301,216,1.894,217,1.301,218,1.064,219,1.236,220,1.838,221,1.064,222,1.301,223,1.064,224,1.064,225,0.875,226,1.064,227,1.301,228,1.064,229,1.118,230,1.301,231,1.301,400,2.306,536,1.969,575,2.292,684,2.306,689,3.778,693,2.998,694,4.017,697,5.072,698,4.136,700,2.998,762,4.861,1071,2.843,1072,3.582,1362,2.536,1407,2.843,1408,7.061,1409,5.423,1410,4.677,1411,3.31,1412,3.31,1413,3.31,1414,6.888,1415,6.774,1416,4.677,1417,6.216,1418,3.31,1419,4.677,1420,3.582,1421,2.536,1422,4.677,1423,4.677,1424,5.423,1425,3.31,1426,3.31,1427,4.154,1428,4.677,1429,4.677,1430,2.843,1431,3.31,1432,6.452,1433,5.893,1434,2.536,1435,3.31,1436,3.31,1437,3.31,1438,3.31,1439,3.31,1440,3.31,1441,4.017,1442,2.536]],["title/interfaces/SportEvent.html",[0,0.358,994,1.819]],["body/interfaces/SportEvent.html",[0,0.311,2,0.897,3,0.147,4,0.243,5,0.147,8,0.185,9,0.772,17,1.718,18,0.463,19,0.019,20,2.161,21,0.166,22,0.011,23,0.011,71,0.486,133,0.334,151,3.299,352,3.678,355,5.497,387,3.468,402,0.635,421,4.464,531,3.52,532,2.394,533,4.562,534,4.222,556,4.06,566,3.201,582,5.497,811,2.857,876,4.103,885,2.848,994,2.253,1060,3.52,1081,3.52,1108,3.468,1128,5.006,1129,2.474,1204,1.794,1443,2.775,1444,2.775,1445,4.596,1446,3.468,1447,4.464,1448,5.829,1449,5.829,1450,5.829,1451,5.829,1452,6.401,1453,5.829,1454,4.596,1455,5.829,1456,5.829,1457,5.829,1458,5.829,1459,5.829,1460,5.829,1461,5.006,1462,4.596,1463,3.948,1464,4.596,1465,3.948,1466,3.52,1467,3.948,1468,2.071,1469,3.23]],["title/interfaces/SportsBook.html",[0,0.358,881,1.933]],["body/interfaces/SportsBook.html",[0,0.463,2,1.334,3,0.219,4,0.219,5,0.219,8,0.276,9,1.006,11,1.061,17,1.639,18,0.415,19,0.019,21,0.247,22,0.015,23,0.015,71,1.079,125,3.121,130,2.688,133,0.497,151,2.937,195,4.188,225,1.585,323,4.174,326,3.842,402,0.944,875,4.174,881,3.121,882,4.591,883,4.55,884,3.628,885,2.772,903,5.148,1011,5.239,1116,4.174,1170,5.874,1470,3.68,1471,3.68,1472,4.764,1473,5.148,1474,5.993,1475,5.148]],["title/interfaces/SportsBook-1.html",[0,0.299,186,1.356,881,1.614]],["body/interfaces/SportsBook-1.html",[0,0.463,2,1.334,3,0.219,4,0.219,5,0.219,8,0.276,9,1.006,11,1.061,17,1.492,18,0.447,19,0.019,21,0.247,22,0.015,23,0.015,71,1.079,133,0.62,391,4.069,402,0.944,532,3.121,603,3.566,811,2.937,881,3.121,883,4.999,884,3.986,885,3.021,975,3.255,1074,4.591,1103,4.764,1107,3.346,1108,4.069,1116,3.346,1461,5.148,1471,3.68,1476,4.127,1477,6.164]],["title/interfaces/SportsBookLine.html",[0,0.358,1472,2.585]],["body/interfaces/SportsBookLine.html",[0,0.371,2,1.069,3,0.236,4,0.175,5,0.175,8,0.221,9,0.871,11,1.197,17,1.626,18,0.446,19,0.019,20,2.51,21,0.198,22,0.013,23,0.013,118,4.536,120,1.97,130,1.513,151,1.887,195,4.029,326,2.469,402,0.757,875,2.682,884,2.139,975,2.907,1014,4.709,1049,4.613,1050,5.399,1113,4.814,1115,4.814,1120,5.806,1121,5.806,1470,2.95,1472,3.616,1475,3.308,1477,3.308,1478,3.308,1479,6.286,1480,6.286,1481,6.286,1482,6.286,1483,6.286,1484,6.286,1485,6.76]],["title/components/SwitchSvgComponent.html",[24,0.657,218,1.192]],["body/components/SwitchSvgComponent.html",[3,0.208,4,0.208,5,0.208,19,0.019,21,0.235,22,0.014,23,0.014,24,1.13,25,1.468,26,2.167,27,1.795,28,1.892,29,1.795,30,1.795,34,1.705,35,2.982,36,2.832,38,2.405,40,2.539,71,0.873,103,1.468,133,0.473,135,0.944,149,0.767,176,1.892,178,2.112,179,1.892,181,2.238,182,2.379,183,2.238,189,2.639,198,1.795,199,2.282,200,2.06,201,1.795,202,1.795,203,1.795,204,1.468,205,1.795,206,1.468,207,1.795,208,1.468,209,1.795,210,1.468,211,1.795,212,1.468,213,1.795,214,1.468,215,1.795,216,1.468,217,1.795,218,2.158,219,2.382,220,2.282,221,1.468,222,1.795,223,1.468,224,1.468,225,1.208,226,1.468,227,1.795,228,1.468,229,1.542,230,1.795,231,1.795,1486,3.923,1487,4.447,1488,6.382,1489,5.805]],["title/interfaces/TranslationEntries.html",[0,0.358,567,2.585]],["body/interfaces/TranslationEntries.html",[0,0.412,2,1.185,3,0.194,4,0.194,5,0.194,8,0.245,9,0.933,17,1.786,18,0.48,19,0.019,21,0.219,22,0.014,23,0.014,89,2.37,183,2.092,402,0.838,567,3.871,603,2.539,681,5.623,720,5.623,721,4.56,760,5.623,1040,5.623,1046,5.623,1047,5.623,1360,5.623,1361,5.623,1490,3.665,1491,3.665,1492,4.268,1493,4.268,1494,6.546,1495,5.623,1496,6.546,1497,5.623,1498,6.546,1499,5.623,1500,6.546]],["title/components/TriggerComponent.html",[24,0.657,221,1.192]],["body/components/TriggerComponent.html",[3,0.178,4,0.178,5,0.178,8,0.225,18,0.376,19,0.019,21,0.201,22,0.013,23,0.013,24,1.049,25,1.26,26,1.961,27,1.541,28,1.624,29,1.541,30,1.541,34,1.463,35,2.928,36,2.781,38,2.177,40,2.298,50,3.126,68,1.422,71,0.79,75,2.065,103,2.034,119,1.864,120,1.531,133,0.406,134,3.799,135,0.81,149,0.658,176,2.177,177,2.042,178,1.813,179,1.624,180,2.177,181,2.575,182,2.736,189,2.488,198,1.541,199,2.065,200,1.864,201,1.541,202,1.541,203,1.541,204,1.26,205,1.541,206,1.26,207,1.541,208,1.26,209,1.541,210,1.26,211,1.541,212,1.26,213,1.541,214,1.26,215,1.541,216,1.26,217,1.541,218,1.26,219,1.463,220,2.065,221,2.034,222,1.541,223,1.26,224,1.26,225,1.037,226,1.26,227,1.541,228,1.26,229,1.323,230,1.541,231,1.541,239,2.177,265,1.813,309,1.463,404,3.516,693,2.513,695,2.177,699,2.042,700,2.513,709,2.513,765,2.73,984,4.512,990,5.09,1020,4.024,1062,3.367,1086,2.73,1096,3.002,1420,4.024,1421,3.002,1427,3.002,1434,3.002,1441,3.367,1501,3.367,1502,5.926,1503,5.254,1504,6.331,1505,5.09,1506,5.926,1507,3.92,1508,3.92,1509,3.92,1510,3.92,1511,3.92,1512,3.002,1513,4.849]],["title/components/TriggerSvgComponent.html",[24,0.657,223,1.192]],["body/components/TriggerSvgComponent.html",[3,0.213,4,0.213,5,0.213,19,0.019,21,0.241,22,0.015,23,0.015,24,1.144,25,1.508,26,2.204,27,1.844,29,1.844,30,1.844,34,1.751,35,2.991,36,2.841,40,2.582,71,0.888,103,2.076,133,0.486,135,0.97,149,0.788,189,2.665,198,1.844,199,2.321,200,2.095,201,1.844,202,1.844,203,1.844,204,1.508,205,1.844,206,1.508,207,1.844,208,1.508,209,1.844,210,1.508,211,1.844,212,1.508,213,1.844,214,1.508,215,1.844,216,1.508,217,1.844,218,1.508,219,1.751,220,2.321,221,1.508,222,1.844,223,2.179,224,1.508,225,1.241,226,1.508,227,1.844,228,1.508,229,1.584,230,1.844,231,1.844,1487,4.523,1514,4.03,1515,5.905]],["title/interfaces/TvChannel.html",[0,0.358,1468,2.379]],["body/interfaces/TvChannel.html",[0,0.416,2,1.198,3,0.196,4,0.196,5,0.196,8,0.247,9,0.939,11,0.991,17,1.662,18,0.457,19,0.019,20,2.097,21,0.222,22,0.014,23,0.014,71,1.049,75,2.441,133,0.446,402,0.847,531,4.286,532,2.914,534,4.152,566,4.861,811,2.743,885,3.15,1014,3.898,1108,3.911,1129,3.304,1204,2.396,1243,4.806,1446,4.426,1447,5.698,1463,4.806,1465,4.806,1466,5.035,1468,3.587,1516,3.004,1517,3.705,1518,5.646,1519,6.979,1520,4.806,1521,5.596,1522,5.596,1523,4.314,1524,4.314]],["title/classes/TvSearchNoResultError.html",[149,0.623,1306,2.208]],["body/classes/TvSearchNoResultError.html",[3,0.251,4,0.251,5,0.251,19,0.019,21,0.284,22,0.017,23,0.016,61,2.463,68,1.324,149,0.927,360,3.846,395,2.876,402,1.085,422,3.067,533,3.285,545,4.229,649,3.21,1306,4.129,1512,4.229,1525,5.601,1526,4.742,1527,5.521,1528,6.521,1529,5.521,1530,5.521,1531,5.521]],["title/interfaces/TvSearchResult.html",[0,0.358,43,1.933]],["body/interfaces/TvSearchResult.html",[0,0.461,2,1.329,3,0.218,4,0.218,5,0.218,8,0.274,9,1.004,17,1.489,18,0.414,19,0.019,21,0.246,22,0.015,23,0.015,43,3.114,117,3.557,130,2.35,133,0.619,395,3.83,402,0.94,422,3.32,427,4.579,879,5.135,1204,2.658,1212,4.896,1252,3.665,1446,4.412,1516,3.333,1532,4.11,1533,5.571,1534,6.83,1535,6.83,1536,6.83,1537,5.978,1538,5.978,1539,5.978]],["title/interfaces/TvSearchResultEntry.html",[0,0.358,117,1.933]],["body/interfaces/TvSearchResultEntry.html",[0,0.421,2,1.213,3,0.199,4,0.199,5,0.199,8,0.358,9,0.947,18,0.419,19,0.019,20,2.364,21,0.224,22,0.014,23,0.014,91,3.44,117,2.938,133,0.584,225,1.492,317,3.93,352,3.063,387,3.929,395,3.255,402,0.858,422,3.133,499,3.93,533,3.718,994,3.539,1081,4.321,1204,2.426,1252,5.531,1446,4.239,1447,5.238,1466,4.321,1467,5.673,1468,4.629,1516,3.043,1518,4.846,1533,5.238,1540,3.752,1541,5.642,1542,5.642,1543,7.003,1544,6.605,1545,5.673,1546,6.605]],["title/injectables/TvSearchService.html",[293,0.89,1378,2.585]],["body/injectables/TvSearchService.html",[1,2.219,3,0.111,4,0.111,5,0.111,8,0.139,9,0.625,11,1.022,17,1.416,18,0.394,19,0.019,20,1.529,21,0.125,22,0.009,23,0.009,42,2.401,43,1.266,44,1.085,52,2.216,60,2.594,61,1.322,63,2.49,68,1.525,70,1.683,71,0.868,75,1.78,90,3.019,91,3.007,92,1.668,93,1.322,97,1.825,119,1.322,120,1.085,133,0.642,135,0.502,138,1.124,140,1.191,149,0.408,157,2.132,158,1.553,225,0.985,249,1.862,288,1.266,293,0.893,294,1.007,308,2.945,309,1.39,320,1.446,322,1.063,336,1.007,337,1.007,339,2.314,356,2.853,382,2.594,386,2.515,394,3.887,395,3.229,400,2.594,401,2.853,402,1.075,404,2.069,405,2.853,446,1.446,473,3.853,492,1.862,499,2.594,506,4.359,508,4.868,543,3.535,556,1.693,575,1.825,597,2.487,632,1.693,672,3.887,781,2.088,786,4.427,789,2.088,807,1.862,820,3.199,994,2.487,1014,2.594,1134,3.889,1135,2.088,1136,4.359,1138,3.199,1150,2.088,1152,4.359,1153,1.862,1155,2.088,1156,2.088,1157,2.088,1158,2.088,1160,4.959,1162,2.088,1163,2.088,1226,3.887,1244,3.199,1247,1.862,1306,2.216,1375,3.199,1376,3.199,1378,2.594,1380,3.199,1382,4.359,1383,3.199,1384,5.667,1385,3.199,1387,3.199,1391,2.088,1399,3.199,1446,2.216,1545,4.7,1547,5.572,1548,2.088,1549,4.528,1550,3.725,1551,3.725,1552,6.01,1553,3.725,1554,2.431,1555,3.725,1556,3.725,1557,5.075,1558,3.725,1559,6.487,1560,2.431,1561,3.725,1562,3.725,1563,5.161,1564,3.725,1565,3.199,1566,5.075,1567,2.431,1568,3.725,1569,3.725,1570,3.725,1571,2.431,1572,3.725,1573,3.725,1574,3.725,1575,3.725,1576,5.075,1577,2.431,1578,5.773,1579,3.725,1580,3.725,1581,3.725,1582,2.431,1583,2.431,1584,2.431,1585,3.725,1586,3.725,1587,4.528,1588,3.725,1589,2.431,1590,2.431,1591,2.431,1592,2.431,1593,2.431,1594,2.431,1595,2.431,1596,2.431,1597,2.431,1598,2.431,1599,2.088,1600,2.431,1601,2.431,1602,2.431,1603,2.431,1604,3.199,1605,2.431,1606,2.431,1607,3.725,1608,2.431,1609,2.431,1610,2.431,1611,2.431,1612,2.431]],["title/components/UserFeedbackMessageComponent.html",[24,0.657,224,1.192]],["body/components/UserFeedbackMessageComponent.html",[3,0.169,4,0.169,5,0.169,8,0.213,18,0.235,19,0.019,21,0.19,22,0.013,23,0.013,24,1.02,25,1.192,26,1.889,27,1.457,28,1.536,29,1.457,30,1.457,34,1.384,35,2.907,36,2.761,38,2.096,40,2.213,50,3.011,68,0.89,71,0.761,103,1.192,133,0.524,134,3.244,135,0.767,146,3.713,147,2.377,148,2.377,149,0.622,176,2.096,177,1.931,178,1.715,179,1.536,181,1.817,182,1.931,183,1.817,184,2.34,187,2.811,189,2.432,191,2.636,198,1.457,199,1.989,200,1.796,201,1.457,202,1.457,203,1.457,204,1.192,205,1.457,206,1.192,207,1.457,208,1.192,209,1.457,210,1.192,211,1.457,212,1.192,213,1.457,214,1.192,215,1.457,216,1.192,217,1.457,218,1.192,219,1.384,220,1.989,221,1.192,222,1.457,223,1.192,224,1.989,225,1.868,226,2.351,227,1.457,228,1.192,229,1.252,230,1.457,231,1.457,265,3.092,278,3.876,409,2.206,576,2.583,577,2.377,578,2.06,579,2.583,649,1.715,692,3.525,695,3.199,696,4.012,697,2.583,699,1.931,701,3.011,702,3.185,703,2.377,892,2.84,998,4.346,1061,2.583,1086,3.525,1364,3.185,1368,3.876,1495,4.346,1497,4.346,1499,4.346,1613,4.346,1614,3.185,1615,5.76,1616,5.06,1617,3.708,1618,3.708]],["title/components/WebcamComponent.html",[24,0.657,228,1.192]],["body/components/WebcamComponent.html",[3,0.068,4,0.068,5,0.068,8,0.244,9,0.422,11,0.676,17,0.973,18,0.371,19,0.019,21,0.077,22,0.006,23,0.006,24,0.755,25,0.479,26,1.425,27,1.279,28,0.618,29,0.586,30,0.586,32,1.494,33,2.492,34,0.556,35,2.462,36,2.368,38,1.04,40,1.098,42,2.188,44,0.732,46,2.925,50,1.494,53,1.494,61,0.891,63,2.036,67,2.73,68,1.57,70,1.113,71,0.694,75,0.987,89,2.121,91,2.892,92,1.542,93,2.118,103,0.479,105,2.157,118,1.494,119,1.355,120,1.113,124,2.272,126,2.157,130,1.816,131,1.924,133,0.591,135,0.308,136,2.448,139,1.038,140,0.731,146,0.828,147,0.956,148,1.61,149,0.25,150,1.61,152,0.887,153,2.157,157,1.832,158,1.304,176,1.348,177,0.776,178,0.689,179,0.618,180,0.828,181,1.231,183,0.731,184,1.971,185,1.989,186,1.864,187,1.395,189,1.501,191,0.776,193,0.956,195,1.61,196,1.61,198,0.586,199,0.987,200,1.155,201,0.586,202,0.586,203,0.586,204,0.479,205,0.586,206,0.479,207,0.586,208,0.479,209,0.586,210,0.479,211,0.586,212,0.479,213,0.586,214,0.479,215,0.586,216,0.479,217,0.586,218,0.479,219,0.556,220,0.987,221,0.479,222,0.586,223,0.479,224,0.479,225,0.861,226,0.479,227,0.586,228,1.659,229,1.928,230,0.586,231,0.586,238,3.595,257,2.272,261,2.925,265,1.505,288,0.776,308,1.595,309,1.215,317,1.749,320,1.494,322,0.652,326,1.61,339,1.215,343,1.61,344,1.924,348,2.157,358,2.406,382,2.66,386,1.807,402,0.293,404,1.395,405,1.924,409,1.494,410,1.142,419,2.157,422,1.395,429,1.61,486,2.157,534,1.494,536,1.494,538,1.28,543,1.749,544,1.924,572,1.038,575,2.633,577,2.732,578,1.395,597,1.871,603,2.272,649,2.273,650,1.28,657,1.749,682,1.038,684,2.66,686,2.492,688,0.956,692,1.749,693,1.61,695,2.121,696,1.749,698,1.61,699,0.776,700,2.732,701,0.887,703,2.448,706,1.038,761,1.142,762,3.444,767,3.218,769,1.142,773,1.28,784,1.924,786,3.423,788,2.157,797,5.448,798,2.157,801,2.157,803,3.28,805,3.968,806,4.115,807,3.539,808,2.157,816,2.795,835,2.266,836,2.157,890,2.925,936,3.151,939,1.038,949,1.924,1020,1.924,1034,1.924,1061,1.038,1072,1.924,1076,1.28,1078,2.157,1083,2.157,1086,2.266,1096,1.142,1100,2.157,1226,1.924,1293,3.661,1296,3.28,1299,1.28,1308,2.157,1309,1.142,1310,1.28,1316,1.28,1318,1.28,1362,1.142,1368,1.924,1371,1.28,1420,3.539,1421,1.924,1427,2.492,1430,1.28,1434,2.925,1442,1.924,1446,1.494,1505,2.795,1512,1.142,1513,4.115,1599,1.28,1619,1.28,1620,3.254,1621,3.254,1622,2.511,1623,3.254,1624,3.254,1625,4.62,1626,4.62,1627,3.254,1628,3.254,1629,2.511,1630,3.819,1631,4.262,1632,2.511,1633,3.819,1634,2.511,1635,3.819,1636,3.819,1637,3.819,1638,1.491,1639,2.511,1640,2.511,1641,1.491,1642,2.795,1643,3.819,1644,1.491,1645,2.511,1646,2.511,1647,2.511,1648,4.915,1649,2.511,1650,2.511,1651,1.491,1652,2.511,1653,2.511,1654,1.491,1655,2.511,1656,1.491,1657,3.254,1658,2.511,1659,2.511,1660,2.511,1661,3.819,1662,1.491,1663,2.511,1664,2.511,1665,1.491,1666,2.511,1667,2.511,1668,2.511,1669,1.491,1670,1.491,1671,2.511,1672,1.491,1673,2.511,1674,3.254,1675,3.254,1676,2.511,1677,1.491,1678,2.511,1679,1.491,1680,1.491,1681,2.511,1682,2.511,1683,1.491,1684,2.511,1685,2.511,1686,3.819,1687,3.254,1688,2.511,1689,2.511,1690,2.511,1691,1.491,1692,4.915,1693,2.511,1694,1.491,1695,3.254,1696,3.819,1697,1.491,1698,2.511,1699,1.491,1700,1.491,1701,1.491,1702,1.491,1703,1.491,1704,1.491,1705,1.491,1706,2.511,1707,1.491,1708,1.491,1709,1.491,1710,1.491,1711,1.491,1712,1.491,1713,1.491,1714,1.491,1715,1.491,1716,1.491,1717,1.491,1718,1.491,1719,1.491,1720,1.491,1721,1.491,1722,1.491,1723,1.491,1724,1.491,1725,1.491,1726,1.491,1727,1.491,1728,1.491,1729,1.491,1730,1.491,1731,1.491,1732,1.491,1733,1.491,1734,1.491,1735,1.491,1736,2.511,1737,1.491,1738,1.491,1739,2.511,1740,1.491,1741,1.491,1742,2.511,1743,3.819,1744,1.491,1745,4.62,1746,1.491,1747,1.491,1748,4.262,1749,4.262,1750,1.491,1751,1.491,1752,1.491,1753,2.511,1754,1.491,1755,1.28,1756,1.491,1757,1.28,1758,3.254,1759,1.28,1760,2.511,1761,2.511,1762,3.254,1763,3.819,1764,1.491,1765,1.491,1766,1.491,1767,1.491,1768,1.491,1769,1.491,1770,1.491,1771,1.491,1772,1.491,1773,1.491,1774,1.491]],["title/coverage.html",[1775,4.348]],["body/coverage.html",[0,0.707,1,1.478,5,0.137,6,2.59,7,4.941,18,0.192,19,0.019,22,0.011,23,0.011,24,1.252,25,0.969,31,2.59,43,1.571,63,1.249,66,1.794,67,1.675,72,2.603,97,1.478,117,1.571,125,1.571,141,2.31,149,0.734,204,0.969,206,0.969,208,0.969,210,0.969,212,0.969,214,0.969,216,0.969,218,0.969,221,0.969,223,0.969,224,0.969,226,1.406,228,0.969,263,2.101,265,1.395,278,2.31,293,1.662,295,2.31,296,3.047,309,1.126,341,2.59,342,2.59,358,1.571,362,3.351,363,3.351,395,2.278,439,2.31,447,2.31,473,1.933,474,2.59,512,2.59,529,1.794,530,2.59,535,2.59,546,2.59,547,2.59,567,2.101,571,2.59,575,3.396,580,3.943,581,3.943,597,1.478,634,2.31,635,2.31,671,2.59,710,2.59,767,2.101,768,2.31,769,2.31,770,2.59,777,2.31,873,2.59,874,2.59,880,1.794,881,2.278,884,1.675,885,1.395,886,2.59,889,2.59,893,2.31,936,1.933,937,2.31,954,2.101,955,2.59,959,2.31,973,2.59,975,1.395,986,2.31,987,2.101,994,1.478,1000,2.31,1103,2.101,1104,3.586,1105,2.59,1107,2.101,1110,2.101,1117,2.59,1126,2.101,1127,2.59,1130,2.59,1202,2.59,1203,2.101,1204,3.473,1205,2.59,1212,2.101,1213,2.59,1221,2.59,1237,2.101,1238,2.31,1306,1.794,1313,2.31,1373,2.59,1374,2.59,1378,2.101,1407,2.59,1442,5.59,1443,2.59,1444,2.59,1468,1.933,1470,3.351,1471,3.351,1472,2.101,1476,2.59,1478,2.59,1486,2.59,1490,2.59,1491,2.59,1501,2.59,1513,4.79,1514,2.59,1516,3.586,1517,2.59,1525,2.59,1526,2.59,1532,2.59,1533,2.31,1540,2.59,1547,2.59,1548,2.59,1613,2.59,1614,2.59,1619,2.59,1759,2.59,1775,2.59,1776,2.59,1777,3.016,1778,5.148,1779,3.016,1780,6.254,1781,4.375,1782,3.016,1783,3.016,1784,3.016,1785,3.016,1786,4.375,1787,3.016,1788,3.016,1789,3.016,1790,3.016,1791,5.148,1792,3.016,1793,3.016,1794,3.016,1795,3.016,1796,3.016,1797,3.016,1798,4.375,1799,3.016,1800,6.736,1801,6.736,1802,3.016,1803,3.016,1804,3.016,1805,4.375,1806,3.016,1807,3.351,1808,3.351,1809,3.016,1810,3.016,1811,4.375,1812,2.59,1813,2.59,1814,2.59,1815,2.59,1816,2.59,1817,2.59,1818,2.59,1819,3.016,1820,3.016,1821,4.375,1822,3.016,1823,3.016,1824,5.148,1825,4.375,1826,4.375,1827,3.016,1828,3.016,1829,3.016,1830,3.016,1831,3.016,1832,4.375,1833,3.016,1834,3.016,1835,3.016,1836,3.016]],["title/dependencies.html",[235,2.861,1837,3.1]],["body/dependencies.html",[19,0.019,22,0.015,23,0.015,135,1.063,136,4.316,137,3.583,229,1.736,235,3.297,238,3.583,254,4.418,256,5.368,257,3.718,261,3.94,322,2.249,490,3.94,515,4.418,1838,5.144,1839,7.506,1840,5.144,1841,5.144,1842,5.144,1843,5.144,1844,5.144,1845,5.144,1846,5.144,1847,5.144,1848,5.144,1849,5.144,1850,5.144,1851,5.144,1852,5.144,1853,5.144,1854,5.144,1855,5.144,1856,5.144,1857,5.144,1858,5.144,1859,5.144,1860,5.144,1861,5.144]],["title/miscellaneous/enumerations.html",[1862,1.614,1863,3.833]],["body/miscellaneous/enumerations.html",[3,0.223,8,0.281,19,0.019,22,0.015,23,0.015,57,3.371,89,2.723,120,2.206,124,2.917,130,2.385,146,3.371,225,1.297,226,1.575,295,3.755,296,4.798,323,4.227,324,4.211,325,4.211,326,3.143,328,5.213,329,5.213,330,4.648,331,5.213,332,5.213,333,5.213,334,5.276,335,5.276,358,3.161,649,2.267,890,3.755,892,3.755,905,4.211,937,3.755,939,4.591,952,5.213,953,5.213,1111,4.211,1807,3.755,1808,4.648,1862,2.553,1863,4.211,1864,4.903,1865,4.211,1866,4.903,1867,4.903,1868,4.903,1869,4.903]],["title/miscellaneous/functions.html",[1862,1.614,1870,3.833]],["body/miscellaneous/functions.html",[8,0.314,11,1.148,17,1.579,18,0.347,19,0.018,22,0.016,23,0.016,57,4.153,70,1.89,71,0.975,92,1.801,141,4.968,447,4.968,1141,5.571,1807,4.191,1808,5.296,1862,2.849,1865,5.571,1870,4.699,1871,5.471,1872,5.471,1873,5.471]],["title/index.html",[8,0.178,1874,3.1,1875,3.1]],["body/index.html",[4,0.254,19,0.014,22,0.014,23,0.014,24,1.205,36,2.759,86,4.276,108,2.994,130,2.194,176,1.781,200,1.525,235,3.579,246,3.692,247,4.795,285,3.692,304,4.276,309,1.604,449,3.292,555,6.097,566,3.889,603,2.557,626,3.692,679,4.795,711,3.292,718,3.292,806,3.292,1275,3.692,1473,4.795,1520,3.692,1563,5.843,1565,3.692,1604,3.692,1642,3.692,1755,5.638,1757,3.692,1776,5.638,1876,6.201,1877,4.298,1878,6.803,1879,5.583,1880,4.298,1881,4.298,1882,4.298,1883,6.564,1884,5.583,1885,5.583,1886,4.298,1887,4.298,1888,4.298,1889,4.298,1890,4.298,1891,4.298,1892,7.338,1893,5.583,1894,5.583,1895,4.298,1896,4.298,1897,4.298,1898,4.298,1899,4.298,1900,4.298,1901,4.298,1902,4.298,1903,5.583,1904,4.298,1905,5.583,1906,4.298,1907,4.298,1908,4.298,1909,5.583,1910,4.298,1911,4.298,1912,4.298,1913,4.298,1914,6.201,1915,6.201,1916,4.298,1917,5.583,1918,4.298,1919,4.298,1920,4.298,1921,4.298,1922,4.298,1923,4.298,1924,4.298,1925,4.298,1926,4.298,1927,4.298,1928,4.298,1929,4.298,1930,4.298,1931,4.298,1932,4.298,1933,4.298]],["title/modules.html",[234,3.878]],["body/modules.html",[19,0.017,22,0.017,23,0.017,233,4.14,234,4.553,257,3.536,1487,4.553,1934,5.944,1935,5.944]],["title/overview.html",[1936,4.348]],["body/overview.html",[2,1.342,19,0.019,22,0.015,23,0.015,25,2.105,26,1.804,186,2.114,204,2.105,206,2.105,208,2.105,210,2.105,212,2.105,214,2.105,216,2.105,218,2.105,221,2.105,223,2.105,224,2.105,228,2.105,232,4.151,233,5.421,235,3.857,236,4.151,237,4.151,238,4.19,239,2.685,240,3.702,294,2.002,545,3.702,698,3.099,1936,4.151,1937,4.834,1938,4.834,1939,4.834]],["title/miscellaneous/typealiases.html",[1862,1.614,1940,4.462]],["body/miscellaneous/typealiases.html",[8,0.335,18,0.428,19,0.017,22,0.017,23,0.017,768,4.476,811,2.864,835,4.695,1309,4.476,1862,3.043,1941,5.843,1942,5.843,1943,6.741]],["title/miscellaneous/variables.html",[1862,1.614,1944,3.833]],["body/miscellaneous/variables.html",[7,5.624,8,0.227,18,0.378,19,0.019,22,0.013,23,0.013,51,3.679,52,2.351,53,2.351,54,2.753,55,2.534,56,2.753,57,2.195,58,2.753,59,2.534,72,3.143,97,1.937,108,2.753,119,2.508,120,2.027,257,4.052,284,2.753,309,2.543,336,2.822,337,2.822,362,3.027,363,4.046,404,2.934,439,4.046,445,5.111,449,3.027,450,3.394,451,3.394,452,3.394,453,3.394,580,3.027,581,4.558,634,4.046,635,4.046,777,5.07,893,5.07,959,5.07,986,5.07,1238,5.07,1812,3.394,1813,3.394,1814,3.394,1815,3.394,1816,3.394,1817,5.456,1818,3.394,1862,2.058,1944,3.394,1945,3.952,1946,3.952,1947,3.952,1948,5.283,1949,3.952,1950,3.952,1951,3.952,1952,3.952,1953,6.811,1954,7.343,1955,6.811,1956,6.811,1957,5.283,1958,3.952]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"components/SwitchSvgComponent.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":575,"title":{},"body":{"components/FooterComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SpinnerComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["0.11.4",{"_index":1861,"title":{},"body":{"dependencies.html":{}}}],["0.1s",{"_index":1424,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["0.2rem",{"_index":1084,"title":{},"body":{"components/OddsComponent.html":{}}}],["0.3rem",{"_index":1093,"title":{},"body":{"components/OddsComponent.html":{}}}],["0.4",{"_index":1070,"title":{},"body":{"components/OddsComponent.html":{}}}],["0.4.1",{"_index":1856,"title":{},"body":{"dependencies.html":{}}}],["0.4rem",{"_index":1090,"title":{},"body":{"components/OddsComponent.html":{}}}],["0.5",{"_index":1511,"title":{},"body":{"components/TriggerComponent.html":{}}}],["0.5rem",{"_index":1073,"title":{},"body":{"components/OddsComponent.html":{}}}],["0.6rem",{"_index":1088,"title":{},"body":{"components/OddsComponent.html":{}}}],["0.9",{"_index":792,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["0.9rem",{"_index":1101,"title":{},"body":{"components/OddsComponent.html":{}}}],["0/1",{"_index":1780,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1786,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1823,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1787,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1822,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":1752,"title":{},"body":{"components/WebcamComponent.html":{}}}],["1",{"_index":186,"title":{"interfaces/SportsBook-1.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{},"overview.html":{}}}],["1.3",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["1.5rem",{"_index":1413,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["1/1",{"_index":1801,"title":{},"body":{"coverage.html":{}}}],["1/17",{"_index":1804,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1793,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1928,"title":{},"body":{"index.html":{}}}],["10.0.0",{"_index":1852,"title":{},"body":{"dependencies.html":{}}}],["10/21",{"_index":1789,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1442,"title":{},"body":{"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["1000",{"_index":433,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["1024",{"_index":441,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["11",{"_index":1938,"title":{},"body":{"overview.html":{}}}],["11/18",{"_index":1785,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":1834,"title":{},"body":{"coverage.html":{}}}],["12/18",{"_index":1799,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":1937,"title":{},"body":{"overview.html":{}}}],["13.1.3",{"_index":1839,"title":{},"body":{"dependencies.html":{}}}],["13.4.6",{"_index":1847,"title":{},"body":{"dependencies.html":{}}}],["14.0.0",{"_index":1845,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1770,"title":{},"body":{"components/WebcamComponent.html":{}}}],["16",{"_index":1768,"title":{},"body":{"components/WebcamComponent.html":{}}}],["16/9",{"_index":1751,"title":{},"body":{"components/WebcamComponent.html":{}}}],["19",{"_index":1939,"title":{},"body":{"overview.html":{}}}],["1920",{"_index":1689,"title":{},"body":{"components/WebcamComponent.html":{}}}],["1em",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["1px",{"_index":685,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{}}}],["2",{"_index":698,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/ImageManipulationService.html":{},"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":1859,"title":{},"body":{"dependencies.html":{}}}],["2.28.0",{"_index":1850,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":1855,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1849,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1802,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1811,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":1810,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1431,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["200",{"_index":1772,"title":{},"body":{"components/WebcamComponent.html":{}}}],["25",{"_index":1809,"title":{},"body":{"coverage.html":{}}}],["2500",{"_index":435,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["255",{"_index":1069,"title":{},"body":{"components/OddsComponent.html":{}}}],["2560",{"_index":1690,"title":{},"body":{"components/WebcamComponent.html":{}}}],["2d",{"_index":1207,"title":{},"body":{"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{}}}],["2px",{"_index":1075,"title":{},"body":{"components/OddsComponent.html":{}}}],["3",{"_index":694,"title":{},"body":{"components/HeaderComponent.html":{},"components/SpinnerComponent.html":{}}}],["3/3",{"_index":1824,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1831,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1794,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":1821,"title":{},"body":{"coverage.html":{}}}],["31",{"_index":1819,"title":{},"body":{"coverage.html":{}}}],["320",{"_index":1688,"title":{},"body":{"components/WebcamComponent.html":{}}}],["33",{"_index":1778,"title":{},"body":{"coverage.html":{}}}],["375/295",{"_index":1750,"title":{},"body":{"components/WebcamComponent.html":{}}}],["3rem",{"_index":1412,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["4",{"_index":1416,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["4.17.1",{"_index":1854,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1791,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1828,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1063,"title":{},"body":{"components/OddsComponent.html":{}}}],["41",{"_index":1782,"title":{},"body":{"coverage.html":{}}}],["47",{"_index":1788,"title":{},"body":{"coverage.html":{}}}],["4px",{"_index":1744,"title":{},"body":{"components/WebcamComponent.html":{}}}],["4rem",{"_index":763,"title":{},"body":{"components/HelpComponent.html":{},"components/OddsComponent.html":{}}}],["5",{"_index":1803,"title":{},"body":{"coverage.html":{}}}],["5/10",{"_index":1797,"title":{},"body":{"coverage.html":{}}}],["5/12",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["5/16",{"_index":1820,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":1832,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1830,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":1796,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1513,"title":{},"body":{"components/TriggerComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["500",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{}}}],["512",{"_index":437,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["5px",{"_index":1769,"title":{},"body":{"components/WebcamComponent.html":{}}}],["6",{"_index":1433,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["6/18",{"_index":1779,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1826,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":1806,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["61",{"_index":1784,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1795,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1798,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1746,"title":{},"body":{"components/WebcamComponent.html":{}}}],["7.4.0",{"_index":1857,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":1065,"title":{},"body":{"components/OddsComponent.html":{}}}],["75",{"_index":1805,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1418,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["80",{"_index":1827,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":1829,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1825,"title":{},"body":{"coverage.html":{}}}],["9/10",{"_index":1790,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1792,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1759,"title":{},"body":{"components/WebcamComponent.html":{},"coverage.html":{}}}],["92",{"_index":1833,"title":{},"body":{"coverage.html":{}}}],["999px",{"_index":1765,"title":{},"body":{"components/WebcamComponent.html":{}}}],["__box",{"_index":1092,"title":{},"body":{"components/OddsComponent.html":{}}}],["__boxes",{"_index":1091,"title":{},"body":{"components/OddsComponent.html":{}}}],["__button",{"_index":1510,"title":{},"body":{"components/TriggerComponent.html":{}}}],["__close",{"_index":764,"title":{},"body":{"components/HelpComponent.html":{}}}],["__column",{"_index":1365,"title":{},"body":{"components/SnapComponent.html":{}}}],["__competitor",{"_index":1087,"title":{},"body":{"components/OddsComponent.html":{}}}],["__headline",{"_index":1618,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{}}}],["__line",{"_index":1082,"title":{},"body":{"components/OddsComponent.html":{}}}],["__lines",{"_index":1080,"title":{},"body":{"components/OddsComponent.html":{}}}],["__odds",{"_index":1102,"title":{},"body":{"components/OddsComponent.html":{}}}],["__powered",{"_index":1371,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["__reload",{"_index":1370,"title":{},"body":{"components/SnapComponent.html":{}}}],["__row",{"_index":1366,"title":{},"body":{"components/SnapComponent.html":{}}}],["__separator",{"_index":1067,"title":{},"body":{"components/OddsComponent.html":{}}}],["__spacer",{"_index":1372,"title":{},"body":{"components/SnapComponent.html":{}}}],["__spinner",{"_index":1062,"title":{},"body":{"components/OddsComponent.html":{},"components/TriggerComponent.html":{}}}],["__sportbook",{"_index":1077,"title":{},"body":{"components/OddsComponent.html":{}}}],["__switch",{"_index":1369,"title":{},"body":{"components/SnapComponent.html":{}}}],["__target",{"_index":1099,"title":{},"body":{"components/OddsComponent.html":{}}}],["__tournament",{"_index":1064,"title":{},"body":{"components/OddsComponent.html":{}}}],["__tv",{"_index":1762,"title":{},"body":{"components/WebcamComponent.html":{}}}],["_blank",{"_index":1028,"title":{},"body":{"components/OddsComponent.html":{}}}],["_links",{"_index":1108,"title":{},"body":{"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook-1.html":{},"interfaces/TvChannel.html":{}}}],["_state",{"_index":297,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["absolute",{"_index":1434,"title":{},"body":{"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["acc",{"_index":457,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["accent",{"_index":687,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{}}}],["access_token",{"_index":10,"title":{},"body":{"interfaces/AccessToken.html":{}}}],["accessed",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/WebcamComponent.html":{}}}],["accessors",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationConfigService.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["accesstoken",{"_index":1,"title":{"interfaces/AccessToken.html":{}},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{},"coverage.html":{}}}],["accesstokenprovider",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["according",{"_index":1664,"title":{},"body":{"components/WebcamComponent.html":{}}}],["account",{"_index":1649,"title":{},"body":{"components/WebcamComponent.html":{}}}],["accusam",{"_index":746,"title":{},"body":{"components/HelpComponent.html":{}}}],["action",{"_index":621,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["actual_component",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["add",{"_index":1566,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["added",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["additional",{"_index":787,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["addseconds",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["addseconds(new",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["affected",{"_index":1921,"title":{},"body":{"index.html":{}}}],["affected:test",{"_index":1920,"title":{},"body":{"index.html":{}}}],["afterviewinit",{"_index":1620,"title":{},"body":{"components/WebcamComponent.html":{}}}],["afterwards",{"_index":1281,"title":{},"body":{"components/SnapComponent.html":{}}}],["against",{"_index":397,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["agianst",{"_index":1573,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["aired",{"_index":1467,"title":{},"body":{"interfaces/SportEvent.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["aliases",{"_index":1941,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":409,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["aliquyam",{"_index":741,"title":{},"body":{"components/HelpComponent.html":{}}}],["allow",{"_index":1668,"title":{},"body":{"components/WebcamComponent.html":{}}}],["allowed",{"_index":832,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["american",{"_index":1143,"title":{},"body":{"injectables/OddsService.html":{}}}],["amet",{"_index":726,"title":{},"body":{"components/HelpComponent.html":{}}}],["analytics",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{}}}],["analytics.service",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{}}}],["analytics.service.ts",{"_index":581,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["analytics.service.ts:10",{"_index":630,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:103",{"_index":614,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:107",{"_index":607,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:11",{"_index":598,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:22",{"_index":618,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:45",{"_index":599,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:54",{"_index":625,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:67",{"_index":604,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:76",{"_index":628,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:83",{"_index":606,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:87",{"_index":608,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:91",{"_index":609,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:95",{"_index":616,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:99",{"_index":611,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analyticsservice",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{}}}],["analyzed",{"_index":1574,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["angular",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["angular/animations",{"_index":1838,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1840,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["angular/compiler",{"_index":1841,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1842,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":1844,"title":{},"body":{"dependencies.html":{}}}],["animation",{"_index":1423,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["api",{"_index":1563,"title":{},"body":{"injectables/TvSearchService.html":{},"index.html":{}}}],["api/api",{"_index":1393,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["api/tv",{"_index":1394,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["apiurl",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":679,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["app.component",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":25,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationConfigService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application/octet",{"_index":1602,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["applicationconfig",{"_index":97,"title":{"interfaces/ApplicationConfig.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/LoggerService.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationconfigservice",{"_index":63,"title":{"injectables/ApplicationConfigService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"injectables/LoggerService.html":{},"injectables/NotificationService.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["applicationstate",{"_index":1266,"title":{},"body":{"components/SnapComponent.html":{}}}],["appmodule",{"_index":233,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps/.../app",{"_index":1864,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../application",{"_index":1946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../console",{"_index":1945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../document",{"_index":1947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../google",{"_index":1948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../location",{"_index":1949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../log",{"_index":1865,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["apps/.../manipulated",{"_index":1942,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../media",{"_index":1866,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../navigator",{"_index":1950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../storage",{"_index":1951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../window",{"_index":1952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/snapodds/src/app/app.component.ts",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/app.component.ts:104",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:21",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:23",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:24",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:25",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:26",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:27",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:28",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:29",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:30",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:31",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:34",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:45",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:47",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:60",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:70",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:78",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:87",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.module.ts",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/snapodds/src/app/app.module.ts:61",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/snapodds/src/app/content/content.component.ts",{"_index":535,"title":{},"body":{"components/ContentComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/footer/footer.component.ts",{"_index":571,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/header/header.component.ts",{"_index":671,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/header/header.component.ts:15",{"_index":677,"title":{},"body":{"components/HeaderComponent.html":{}}}],["apps/snapodds/src/app/header/header.component.ts:9",{"_index":676,"title":{},"body":{"components/HeaderComponent.html":{}}}],["apps/snapodds/src/app/help/help.component.ts",{"_index":710,"title":{},"body":{"components/HelpComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/help/help.component.ts:15",{"_index":717,"title":{},"body":{"components/HelpComponent.html":{}}}],["apps/snapodds/src/app/help/help.component.ts:9",{"_index":716,"title":{},"body":{"components/HelpComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts",{"_index":973,"title":{},"body":{"components/OddsComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:13",{"_index":1017,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:14",{"_index":1018,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:15",{"_index":1019,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:17",{"_index":989,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:18",{"_index":988,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:28",{"_index":1012,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:40",{"_index":1002,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:54",{"_index":992,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:76",{"_index":1006,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:86",{"_index":1008,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts",{"_index":1221,"title":{},"body":{"components/SnapComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:102",{"_index":1267,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:118",{"_index":1278,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:135",{"_index":1249,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:146",{"_index":1241,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:159",{"_index":1256,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:177",{"_index":1277,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:184",{"_index":1274,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:22",{"_index":1298,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:24",{"_index":1292,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:25",{"_index":1295,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:27",{"_index":1294,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:28",{"_index":1239,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:48",{"_index":1264,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:63",{"_index":1286,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:79",{"_index":1260,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:89",{"_index":1289,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/spinner/spinner.component.ts",{"_index":1407,"title":{},"body":{"components/SpinnerComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/spinner/spinner.component.ts:10",{"_index":1411,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["apps/snapodds/src/app/svgs/switch.svg.component.ts",{"_index":1486,"title":{},"body":{"components/SwitchSvgComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/svgs/trigger.svg.component.ts",{"_index":1514,"title":{},"body":{"components/TriggerSvgComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/trigger/trigger.component.ts",{"_index":1501,"title":{},"body":{"components/TriggerComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/trigger/trigger.component.ts:10",{"_index":1508,"title":{},"body":{"components/TriggerComponent.html":{}}}],["apps/snapodds/src/app/trigger/trigger.component.ts:11",{"_index":1509,"title":{},"body":{"components/TriggerComponent.html":{}}}],["apps/snapodds/src/app/trigger/trigger.component.ts:9",{"_index":1507,"title":{},"body":{"components/TriggerComponent.html":{}}}],["apps/snapodds/src/app/user",{"_index":1613,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts",{"_index":1619,"title":{},"body":{"components/WebcamComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:105",{"_index":1654,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:115",{"_index":1662,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:124",{"_index":1670,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:132",{"_index":1641,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:140",{"_index":1651,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:148",{"_index":1644,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:19",{"_index":1679,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:20",{"_index":1691,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:25",{"_index":1697,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:26",{"_index":1699,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:27",{"_index":1683,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:28",{"_index":1694,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:30",{"_index":1677,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:32",{"_index":1680,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:33",{"_index":1639,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:46",{"_index":1669,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:60",{"_index":1665,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:72",{"_index":1672,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:94",{"_index":1656,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/config/application",{"_index":341,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"coverage.html":{}}}],["apps/snapodds/src/models/line",{"_index":873,"title":{},"body":{"interfaces/LineOdds.html":{},"coverage.html":{}}}],["apps/snapodds/src/models/sports",{"_index":1470,"title":{},"body":{"interfaces/SportsBook.html":{},"interfaces/SportsBookLine.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/api/api",{"_index":1525,"title":{},"body":{"classes/TvSearchNoResultError.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/api/odds.service.ts",{"_index":1130,"title":{},"body":{"injectables/OddsService.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/api/odds.service.ts:116",{"_index":1140,"title":{},"body":{"injectables/OddsService.html":{}}}],["apps/snapodds/src/services/api/odds.service.ts:13",{"_index":1137,"title":{},"body":{"injectables/OddsService.html":{}}}],["apps/snapodds/src/services/api/odds.service.ts:23",{"_index":1151,"title":{},"body":{"injectables/OddsService.html":{}}}],["apps/snapodds/src/services/api/odds.service.ts:31",{"_index":1146,"title":{},"body":{"injectables/OddsService.html":{}}}],["apps/snapodds/src/services/api/odds.service.ts:47",{"_index":1148,"title":{},"body":{"injectables/OddsService.html":{}}}],["apps/snapodds/src/services/api/tv",{"_index":1547,"title":{},"body":{"injectables/TvSearchService.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts:11",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts:12",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts:14",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts:22",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts:36",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts:45",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts:52",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts:60",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/snapodds/src/services/config/application",{"_index":362,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/snapodds/src/services/i18n/file",{"_index":546,"title":{},"body":{"classes/FileTranslateLoader.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/i18n/translation",{"_index":1490,"title":{},"body":{"interfaces/TranslationEntries.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/image",{"_index":768,"title":{},"body":{"injectables/ImageManipulationService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/snapodds/src/services/logger/log",{"_index":1807,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["apps/snapodds/src/services/logger/logger.service.ts",{"_index":889,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/logger/logger.service.ts:11",{"_index":894,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/snapodds/src/services/logger/logger.service.ts:17",{"_index":896,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/snapodds/src/services/logger/logger.service.ts:21",{"_index":898,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/snapodds/src/services/logger/logger.service.ts:25",{"_index":916,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/snapodds/src/services/logger/logger.service.ts:29",{"_index":900,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/snapodds/src/services/logger/logger.service.ts:41",{"_index":908,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/snapodds/src/services/logger/logger.service.ts:66",{"_index":902,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/snapodds/src/services/notification/notification.service.ts",{"_index":955,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/notification/notification.service.ts:17",{"_index":965,"title":{},"body":{"injectables/NotificationService.html":{}}}],["apps/snapodds/src/services/notification/notification.service.ts:27",{"_index":961,"title":{},"body":{"injectables/NotificationService.html":{}}}],["apps/snapodds/src/services/notification/notification.service.ts:8",{"_index":960,"title":{},"body":{"injectables/NotificationService.html":{}}}],["apps/snapodds/src/services/snap",{"_index":1373,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/tokens/console",{"_index":1812,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/snapodds/src/services/tokens/document",{"_index":1813,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/snapodds/src/services/tokens/location",{"_index":1814,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/snapodds/src/services/tokens/navigator",{"_index":1815,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/snapodds/src/services/tokens/storage",{"_index":1816,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/snapodds/src/services/tokens/window",{"_index":1818,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/snapodds/src/services/tracking/google",{"_index":580,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/snapodds/src/states/app",{"_index":295,"title":{},"body":{"injectables/AppStateStore.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["apps/snapodds/src/states/media",{"_index":937,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["appstate",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{}}}],["appstate.show_help",{"_index":313,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["appstates",{"_index":324,"title":{},"body":{"injectables/AppStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["appstatestore",{"_index":67,"title":{"injectables/AppStateStore.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["area",{"_index":1673,"title":{},"body":{"components/WebcamComponent.html":{}}}],["arraybuffer",{"_index":1678,"title":{},"body":{"components/WebcamComponent.html":{}}}],["artifacts",{"_index":1903,"title":{},"body":{"index.html":{}}}],["aspect",{"_index":1748,"title":{},"body":{"components/WebcamComponent.html":{}}}],["assign",{"_index":1007,"title":{},"body":{"components/OddsComponent.html":{}}}],["assigned",{"_index":995,"title":{},"body":{"components/OddsComponent.html":{}}}],["assigns",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["auth/auth.service",{"_index":1155,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["authenticate",{"_index":1564,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["authorities",{"_index":12,"title":{},"body":{"interfaces/AccessToken.html":{}}}],["authorization",{"_index":1161,"title":{},"body":{"injectables/OddsService.html":{}}}],["authresponse",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresponse.access_token",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresponse.expires_in",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice",{"_index":473,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{},"coverage.html":{}}}],["auto",{"_index":538,"title":{},"body":{"components/ContentComponent.html":{},"components/WebcamComponent.html":{}}}],["automatically",{"_index":1896,"title":{},"body":{"index.html":{}}}],["autosearchsport",{"_index":1375,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["autosearchsport(imagedata",{"_index":1380,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["autosnap",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/variables.html":{}}}],["autosnap_delay",{"_index":364,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["autosnap_delay_initial",{"_index":365,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["autosnap_max_dimension",{"_index":366,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["autosnapping",{"_index":349,"title":{},"body":{"interfaces/ApplicationConfig.html":{}}}],["available",{"_index":603,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"interfaces/OddsResponse.html":{},"interfaces/SportsBook-1.html":{},"interfaces/TranslationEntries.html":{},"components/WebcamComponent.html":{},"index.html":{}}}],["b",{"_index":1215,"title":{},"body":{"interfaces/Quadrangle2d.html":{}}}],["background",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["bar",{"_index":1414,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["base",{"_index":689,"title":{},"body":{"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{}}}],["based",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"components/SnapComponent.html":{}}}],["baseline",{"_index":683,"title":{},"body":{"components/HeaderComponent.html":{}}}],["baseurl",{"_index":1134,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["beacon",{"_index":656,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["bearer",{"_index":1162,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["beneath",{"_index":804,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["best",{"_index":1251,"title":{},"body":{"components/SnapComponent.html":{}}}],["bet",{"_index":1112,"title":{},"body":{"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{}}}],["bets",{"_index":1122,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{}}}],["better",{"_index":1149,"title":{},"body":{"injectables/OddsService.html":{}}}],["between",{"_index":543,"title":{},"body":{"components/ContentComponent.html":{},"components/OddsComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["bit",{"_index":1279,"title":{},"body":{"components/SnapComponent.html":{}}}],["blob",{"_index":786,"title":{},"body":{"injectables/ImageManipulationService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["block",{"_index":1072,"title":{},"body":{"components/OddsComponent.html":{},"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{}}}],["book",{"_index":884,"title":{},"body":{"interfaces/LineOdds.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"coverage.html":{}}}],["book.ts",{"_index":1471,"title":{},"body":{"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"coverage.html":{}}}],["boolean",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/NotificationService.html":{},"components/TriggerComponent.html":{},"interfaces/TvChannel.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["boolean(this.accesstoken",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["border",{"_index":684,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{}}}],["bottom",{"_index":577,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["box",{"_index":761,"title":{},"body":{"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/WebcamComponent.html":{}}}],["break",{"_index":927,"title":{},"body":{"injectables/LoggerService.html":{}}}],["broadcasted",{"_index":1445,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["browse",{"_index":1935,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"components/OddsComponent.html":{},"components/WebcamComponent.html":{},"dependencies.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["browserapi",{"_index":962,"title":{},"body":{"injectables/NotificationService.html":{}}}],["browsermodule",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":555,"title":{},"body":{"classes/FileTranslateLoader.html":{},"index.html":{}}}],["build:elements",{"_index":1910,"title":{},"body":{"index.html":{}}}],["builder",{"_index":1885,"title":{},"body":{"index.html":{}}}],["button",{"_index":708,"title":{},"body":{"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{}}}],["c",{"_index":699,"title":{},"body":{"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["calculate",{"_index":1585,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["calculated",{"_index":1581,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["calculates",{"_index":820,"title":{},"body":{"injectables/ImageManipulationService.html":{},"injectables/TvSearchService.html":{}}}],["call",{"_index":996,"title":{},"body":{"components/OddsComponent.html":{},"components/SnapComponent.html":{}}}],["callback",{"_index":343,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"components/OddsComponent.html":{},"components/WebcamComponent.html":{}}}],["callbacks",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["called",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["camera",{"_index":410,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["cameras",{"_index":1569,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["cameraswitched",{"_index":1629,"title":{},"body":{"components/WebcamComponent.html":{}}}],["cameraswitched(deviceid",{"_index":1640,"title":{},"body":{"components/WebcamComponent.html":{}}}],["can't",{"_index":1663,"title":{},"body":{"components/WebcamComponent.html":{}}}],["cancel",{"_index":707,"title":{},"body":{"components/HeaderComponent.html":{}}}],["cancelsnap",{"_index":675,"title":{},"body":{"components/HeaderComponent.html":{}}}],["canvas",{"_index":785,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["canvas.getcontext('2d",{"_index":850,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["canvas.height",{"_index":848,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["canvas.toblob",{"_index":863,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["canvas.width",{"_index":847,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["case",{"_index":924,"title":{},"body":{"injectables/LoggerService.html":{}}}],["catch",{"_index":648,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{}}}],["catcherror",{"_index":1390,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["catcherror((error",{"_index":1401,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["category",{"_index":582,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"interfaces/SportEvent.html":{}}}],["center",{"_index":703,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["centercontentonzoom",{"_index":1630,"title":{},"body":{"components/WebcamComponent.html":{}}}],["change",{"_index":304,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{},"index.html":{}}}],["changed",{"_index":1003,"title":{},"body":{"components/OddsComponent.html":{}}}],["changes",{"_index":307,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{}}}],["changes.tvsearchresultentry.currentvalue",{"_index":1029,"title":{},"body":{"components/OddsComponent.html":{}}}],["channel",{"_index":1447,"title":{},"body":{"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["channel.ts",{"_index":1517,"title":{},"body":{"interfaces/TvChannel.html":{},"coverage.html":{}}}],["channels",{"_index":1542,"title":{},"body":{"interfaces/TvSearchResultEntry.html":{}}}],["checks",{"_index":600,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["child(#{$i",{"_index":1437,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["class",{"_index":149,"title":{"classes/FileTranslateLoader.html":{},"classes/TvSearchNoResultError.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"classes/TvSearchNoResultError.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["classes",{"_index":545,"title":{},"body":{"classes/FileTranslateLoader.html":{},"classes/TvSearchNoResultError.html":{},"overview.html":{}}}],["clean",{"_index":1261,"title":{},"body":{"components/SnapComponent.html":{}}}],["clears",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["clickable",{"_index":1094,"title":{},"body":{"components/OddsComponent.html":{}}}],["clicked",{"_index":1506,"title":{},"body":{"components/TriggerComponent.html":{}}}],["client",{"_index":1565,"title":{},"body":{"injectables/TvSearchService.html":{},"index.html":{}}}],["clita",{"_index":753,"title":{},"body":{"components/HelpComponent.html":{}}}],["closecallback",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["closed",{"_index":345,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"components/HeaderComponent.html":{},"components/SnapComponent.html":{}}}],["closeevent",{"_index":383,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/HeaderComponent.html":{}}}],["closeoddsview",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/OddsComponent.html":{}}}],["cluster_appmodule",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":566,"title":{},"body":{"classes/FileTranslateLoader.html":{},"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{},"index.html":{}}}],["color",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["column",{"_index":540,"title":{},"body":{"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{}}}],["combined",{"_index":1475,"title":{},"body":{"interfaces/SportsBook.html":{},"interfaces/SportsBookLine.html":{}}}],["competitor",{"_index":529,"title":{"interfaces/Competitor.html":{}},"body":{"interfaces/Competitor.html":{},"interfaces/LineOdds.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"coverage.html":{}}}],["competitor.id",{"_index":1180,"title":{},"body":{"injectables/OddsService.html":{}}}],["competitor.name",{"_index":1045,"title":{},"body":{"components/OddsComponent.html":{}}}],["competitorid",{"_index":1118,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{}}}],["competitorindex",{"_index":1178,"title":{},"body":{"injectables/OddsService.html":{}}}],["competitors",{"_index":876,"title":{},"body":{"interfaces/LineOdds.html":{},"components/OddsComponent.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/SportEvent.html":{}}}],["competitors.findindex((competitor",{"_index":1179,"title":{},"body":{"injectables/OddsService.html":{}}}],["competitors.map",{"_index":1171,"title":{},"body":{"injectables/OddsService.html":{}}}],["competitors?.length",{"_index":1165,"title":{},"body":{"injectables/OddsService.html":{}}}],["component",{"_index":24,"title":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["components",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"overview.html":{}}}],["compression",{"_index":794,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["config",{"_index":367,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"injectables/LoggerService.html":{},"injectables/NotificationService.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["config.service.ts",{"_index":363,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.service.ts:106",{"_index":385,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:113",{"_index":381,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:121",{"_index":389,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:128",{"_index":420,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:24",{"_index":440,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:26",{"_index":442,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:27",{"_index":438,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:28",{"_index":436,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:29",{"_index":434,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:35",{"_index":431,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:44",{"_index":425,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:54",{"_index":444,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:61",{"_index":417,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:68",{"_index":413,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:76",{"_index":399,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:83",{"_index":411,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:90",{"_index":412,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:97",{"_index":393,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.ts",{"_index":342,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"coverage.html":{}}}],["config/application",{"_index":446,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/LoggerService.html":{},"injectables/NotificationService.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["configuration",{"_index":449,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["configure",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["configured",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationConfigService.html":{},"injectables/LoggerService.html":{},"components/SnapComponent.html":{}}}],["connector",{"_index":1771,"title":{},"body":{"components/WebcamComponent.html":{}}}],["consetetur",{"_index":727,"title":{},"body":{"components/HelpComponent.html":{}}}],["consideration",{"_index":1555,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["console",{"_index":893,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationConfigService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/OddsService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["constructor",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"classes/TvSearchNoResultError.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["constructor(@inject(window",{"_index":1025,"title":{},"body":{"components/OddsComponent.html":{}}}],["constructor(applicationconfigservice",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"injectables/LoggerService.html":{}}}],["constructor(appstatestore",{"_index":715,"title":{},"body":{"components/HelpComponent.html":{}}}],["constructor(http",{"_index":1135,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["constructor(imagemanipulationservice",{"_index":1638,"title":{},"body":{"components/WebcamComponent.html":{}}}],["constructor(logger",{"_index":596,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"components/SnapComponent.html":{}}}],["constructor(navigator",{"_index":958,"title":{},"body":{"injectables/NotificationService.html":{}}}],["constructor(private",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{}}}],["constructor(tvsearchservice",{"_index":1377,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["constructor(window",{"_index":985,"title":{},"body":{"components/OddsComponent.html":{}}}],["container",{"_index":1076,"title":{},"body":{"components/OddsComponent.html":{},"components/WebcamComponent.html":{}}}],["contains",{"_index":1473,"title":{},"body":{"interfaces/SportsBook.html":{},"index.html":{}}}],["content",{"_index":536,"title":{},"body":{"components/ContentComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{}}}],["content'},{'name",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["content.component.scss",{"_index":537,"title":{},"body":{"components/ContentComponent.html":{}}}],["content/content.component",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["contentcomponent",{"_index":204,"title":{"components/ContentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["convert",{"_index":1141,"title":{},"body":{"injectables/OddsService.html":{},"miscellaneous/functions.html":{}}}],["converted",{"_index":1168,"title":{},"body":{"injectables/OddsService.html":{}}}],["converted.lines.length",{"_index":1199,"title":{},"body":{"injectables/OddsService.html":{}}}],["converted.lines[0].overunder",{"_index":1189,"title":{},"body":{"injectables/OddsService.html":{}}}],["converted.lines[0].overunderodds",{"_index":1191,"title":{},"body":{"injectables/OddsService.html":{}}}],["converted.lines[0].overunderurl",{"_index":1192,"title":{},"body":{"injectables/OddsService.html":{}}}],["converted.lines[1].overunder",{"_index":1193,"title":{},"body":{"injectables/OddsService.html":{}}}],["converted.lines[1].overunderodds",{"_index":1194,"title":{},"body":{"injectables/OddsService.html":{}}}],["converted.lines[1].overunderurl",{"_index":1195,"title":{},"body":{"injectables/OddsService.html":{}}}],["converted.lines[competitorindex].moneyline",{"_index":1186,"title":{},"body":{"injectables/OddsService.html":{}}}],["converted.lines[competitorindex].moneylineurl",{"_index":1188,"title":{},"body":{"injectables/OddsService.html":{}}}],["converted.lines[competitorindex].spread",{"_index":1196,"title":{},"body":{"injectables/OddsService.html":{}}}],["converted.lines[competitorindex].spreadodds",{"_index":1197,"title":{},"body":{"injectables/OddsService.html":{}}}],["converted.lines[competitorindex].spreadurl",{"_index":1198,"title":{},"body":{"injectables/OddsService.html":{}}}],["converts",{"_index":784,"title":{},"body":{"injectables/ImageManipulationService.html":{},"injectables/OddsService.html":{},"components/WebcamComponent.html":{}}}],["converttoamericanodds",{"_index":1131,"title":{},"body":{"injectables/OddsService.html":{}}}],["converttoamericanodds(odds",{"_index":1139,"title":{},"body":{"injectables/OddsService.html":{}}}],["coordinate",{"_index":1211,"title":{},"body":{"interfaces/Point2d.html":{}}}],["correctly",{"_index":408,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{}}}],["corresponding",{"_index":387,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/HelpComponent.html":{},"interfaces/OddsResponse.html":{},"components/SnapComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["cors",{"_index":1848,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":1417,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["coverage",{"_index":1775,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1561,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["createcustomelement",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["createcustomelement(appcomponent",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["createimagefromcanvas",{"_index":771,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["createimagefromcanvas(canvas",{"_index":779,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["creates",{"_index":815,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["createsnapscreenheaders",{"_index":1550,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["createsnapscreenheaders(accesstoken",{"_index":1558,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["crop",{"_index":772,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["crop(source",{"_index":795,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["cropandresizeimage",{"_index":773,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["cropandresizeimage(source",{"_index":812,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["cropped",{"_index":808,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["crops",{"_index":801,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["current",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TvSearchService.html":{}}}],["currentcolor",{"_index":1419,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["currently",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["currenttimestamp",{"_index":1552,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["cursor",{"_index":1095,"title":{},"body":{"components/OddsComponent.html":{}}}],["cursors",{"_index":1647,"title":{},"body":{"components/WebcamComponent.html":{}}}],["customelements.define('snapodds",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["d",{"_index":1216,"title":{},"body":{"interfaces/Quadrangle2d.html":{}}}],["data",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"interfaces/LineOdds.html":{},"injectables/LoggerService.html":{},"injectables/OddsService.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLine.html":{}}}],["dataurl",{"_index":1655,"title":{},"body":{"components/WebcamComponent.html":{}}}],["date",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"components/OddsComponent.html":{},"dependencies.html":{}}}],["date.now",{"_index":1399,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["date.parse(responsedate",{"_index":1609,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["datetime",{"_index":1456,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["dd't'hh:mm:ss.ssszz",{"_index":1460,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["de",{"_index":550,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["debug",{"_index":890,"title":{},"body":{"injectables/LoggerService.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{}}}],["debug(...data",{"_index":895,"title":{},"body":{"injectables/LoggerService.html":{}}}],["debugimagemanipulations",{"_index":1631,"title":{},"body":{"components/WebcamComponent.html":{}}}],["declarations",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["declare",{"_index":633,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["decoration",{"_index":1085,"title":{},"body":{"components/OddsComponent.html":{}}}],["decorators",{"_index":1296,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["deep",{"_index":1756,"title":{},"body":{"components/WebcamComponent.html":{}}}],["default",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"miscellaneous/variables.html":{}}}],["default_application_config",{"_index":439,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultlanguage",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["defer",{"_index":1300,"title":{},"body":{"components/SnapComponent.html":{}}}],["defined",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"classes/TvSearchNoResultError.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["delay",{"_index":400,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"injectables/TvSearchService.html":{}}}],["dep",{"_index":1924,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":235,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["depending",{"_index":1242,"title":{},"body":{"components/SnapComponent.html":{}}}],["depth",{"_index":1774,"title":{},"body":{"components/WebcamComponent.html":{}}}],["description",{"_index":402,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"interfaces/TranslationEntries.html":{},"interfaces/TvChannel.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["destroyed",{"_index":1225,"title":{},"body":{"components/SnapComponent.html":{}}}],["determine",{"_index":1652,"title":{},"body":{"components/WebcamComponent.html":{}}}],["determines",{"_index":418,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/NotificationService.html":{}}}],["determining",{"_index":325,"title":{},"body":{"injectables/AppStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["dev",{"_index":1894,"title":{},"body":{"index.html":{}}}],["development",{"_index":1884,"title":{},"body":{"index.html":{}}}],["device",{"_index":358,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["device_camera_ready",{"_index":953,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["device_init",{"_index":952,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["device_no_camera",{"_index":334,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["device_no_permission",{"_index":335,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["deviceid",{"_index":1643,"title":{},"body":{"components/WebcamComponent.html":{}}}],["diagram",{"_index":1927,"title":{},"body":{"index.html":{}}}],["diam",{"_index":731,"title":{},"body":{"components/HelpComponent.html":{}}}],["difference",{"_index":1578,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["differenceinseconds",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["differenceinseconds(this.tokenexpirationdate",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["different",{"_index":1259,"title":{},"body":{"components/SnapComponent.html":{}}}],["dimension",{"_index":414,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/ImageManipulationService.html":{}}}],["direction",{"_index":539,"title":{},"body":{"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{}}}],["directive",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["directives",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["directory",{"_index":1905,"title":{},"body":{"index.html":{}}}],["disable",{"_index":348,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"components/WebcamComponent.html":{}}}],["disabled",{"_index":1504,"title":{},"body":{"components/TriggerComponent.html":{}}}],["discipline",{"_index":1462,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["dispatch",{"_index":300,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["dispatch(state",{"_index":302,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["display",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["displayed",{"_index":1142,"title":{},"body":{"injectables/OddsService.html":{}}}],["dist/elements",{"_index":1912,"title":{},"body":{"index.html":{}}}],["dist/snapodds",{"_index":1904,"title":{},"body":{"index.html":{}}}],["distributed",{"_index":1881,"title":{},"body":{"index.html":{}}}],["div",{"_index":1422,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["div::after",{"_index":1429,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["div:nth",{"_index":1436,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["dobootstrap",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["document",{"_index":777,"title":{},"body":{"injectables/ImageManipulationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":1776,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doesn't",{"_index":1522,"title":{},"body":{"interfaces/TvChannel.html":{}}}],["dolor",{"_index":724,"title":{},"body":{"components/HelpComponent.html":{}}}],["dolore",{"_index":739,"title":{},"body":{"components/HelpComponent.html":{}}}],["dolores",{"_index":749,"title":{},"body":{"components/HelpComponent.html":{}}}],["dom",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["don't",{"_index":557,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["dotenv",{"_index":1851,"title":{},"body":{"dependencies.html":{}}}],["downscale",{"_index":774,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["downscale(sourcewidth",{"_index":817,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["drawdebugimage",{"_index":1632,"title":{},"body":{"components/WebcamComponent.html":{}}}],["drawdebugimage(blob",{"_index":1653,"title":{},"body":{"components/WebcamComponent.html":{}}}],["due",{"_index":1245,"title":{},"body":{"components/SnapComponent.html":{}}}],["duo",{"_index":748,"title":{},"body":{"components/HelpComponent.html":{}}}],["duration",{"_index":612,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"injectables/SnapOddsFacade.html":{}}}],["during",{"_index":554,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["dynamic",{"_index":1843,"title":{},"body":{"dependencies.html":{}}}],["ea",{"_index":750,"title":{},"body":{"components/HelpComponent.html":{}}}],["eirmod",{"_index":733,"title":{},"body":{"components/HelpComponent.html":{}}}],["el",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["element",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"index.html":{}}}],["elementref",{"_index":1692,"title":{},"body":{"components/WebcamComponent.html":{}}}],["elitr",{"_index":729,"title":{},"body":{"components/HelpComponent.html":{}}}],["ellipsis",{"_index":1079,"title":{},"body":{"components/OddsComponent.html":{}}}],["emit",{"_index":1250,"title":{},"body":{"components/SnapComponent.html":{}}}],["emitcloseevent",{"_index":369,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["emitloggerevent",{"_index":370,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["emitloggerevent(loglevel",{"_index":384,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["emitresultsevent",{"_index":371,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["emitresultsevent(resultentry",{"_index":388,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["emits",{"_index":315,"title":{},"body":{"injectables/AppStateStore.html":{},"components/HeaderComponent.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["empty",{"_index":866,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["en",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationConfigService.html":{},"classes/FileTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["enable",{"_index":347,"title":{},"body":{"interfaces/ApplicationConfig.html":{}}}],["enabled",{"_index":419,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/WebcamComponent.html":{}}}],["end",{"_index":1081,"title":{},"body":{"components/OddsComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["endpoint",{"_index":1572,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["endpoints",{"_index":1891,"title":{},"body":{"index.html":{}}}],["endtime",{"_index":1448,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["entity",{"_index":531,"title":{},"body":{"interfaces/Competitor.html":{},"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{}}}],["entries",{"_index":427,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"classes/FileTranslateLoader.html":{},"interfaces/TvSearchResult.html":{}}}],["entries.de",{"_index":568,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["entries.en",{"_index":569,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["entries.ts",{"_index":1491,"title":{},"body":{"interfaces/TranslationEntries.html":{},"coverage.html":{}}}],["entry",{"_index":1252,"title":{},"body":{"components/SnapComponent.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["entry.ts",{"_index":1540,"title":{},"body":{"interfaces/TvSearchResultEntry.html":{},"coverage.html":{}}}],["entrycomponents",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["enum",{"_index":327,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["enumerations",{"_index":1863,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1687,"title":{},"body":{"components/WebcamComponent.html":{}}}],["environment.debugimagemanipulations",{"_index":1674,"title":{},"body":{"components/WebcamComponent.html":{}}}],["environments/environment",{"_index":1701,"title":{},"body":{"components/WebcamComponent.html":{}}}],["eos",{"_index":745,"title":{},"body":{"components/HelpComponent.html":{}}}],["erat",{"_index":742,"title":{},"body":{"components/HelpComponent.html":{}}}],["error",{"_index":649,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"classes/TvSearchNoResultError.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{}}}],["error(...data",{"_index":897,"title":{},"body":{"injectables/LoggerService.html":{}}}],["errormessage",{"_index":865,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["errors",{"_index":1247,"title":{},"body":{"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["errors.pipe(delay(this.applicationconfigservice.getautosnapdelay",{"_index":1345,"title":{},"body":{"components/SnapComponent.html":{}}}],["errors.ts",{"_index":1526,"title":{},"body":{"classes/TvSearchNoResultError.html":{},"coverage.html":{}}}],["errors.ts:4",{"_index":1529,"title":{},"body":{"classes/TvSearchNoResultError.html":{}}}],["est",{"_index":759,"title":{},"body":{"components/HelpComponent.html":{}}}],["et",{"_index":738,"title":{},"body":{"components/HelpComponent.html":{}}}],["event",{"_index":352,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"interfaces/Competitor.html":{},"injectables/GoogleAnalyticsService.html":{},"components/OddsComponent.html":{},"interfaces/OddsResponse.html":{},"components/SnapComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["event.preventdefault",{"_index":1026,"title":{},"body":{"components/OddsComponent.html":{}}}],["event.ts",{"_index":1444,"title":{},"body":{"interfaces/SportEvent.html":{},"coverage.html":{}}}],["eventaction",{"_index":644,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["eventcategory",{"_index":642,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["eventemitter",{"_index":990,"title":{},"body":{"components/OddsComponent.html":{},"components/TriggerComponent.html":{}}}],["eventlabel",{"_index":645,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["events",{"_index":1512,"title":{},"body":{"components/TriggerComponent.html":{},"classes/TvSearchNoResultError.html":{},"components/WebcamComponent.html":{}}}],["eventvalue",{"_index":647,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["execute",{"_index":1917,"title":{},"body":{"index.html":{}}}],["executed",{"_index":344,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["existing",{"_index":1262,"title":{},"body":{"components/SnapComponent.html":{}}}],["expiration",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["expires_in",{"_index":13,"title":{},"body":{"interfaces/AccessToken.html":{}}}],["export",{"_index":21,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"components/SwitchSvgComponent.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["express",{"_index":1853,"title":{},"body":{"dependencies.html":{}}}],["express.js",{"_index":1882,"title":{},"body":{"index.html":{}}}],["extends",{"_index":1528,"title":{},"body":{"classes/TvSearchNoResultError.html":{}}}],["external",{"_index":1464,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["externalid",{"_index":1449,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["externally",{"_index":558,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["extracted",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["facade.service",{"_index":1314,"title":{},"body":{"components/SnapComponent.html":{}}}],["facade.service.ts",{"_index":1374,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"coverage.html":{}}}],["facade.service.ts:10",{"_index":1379,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["facade.service.ts:22",{"_index":1386,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["facade.service.ts:44",{"_index":1381,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["facingmode",{"_index":1685,"title":{},"body":{"components/WebcamComponent.html":{}}}],["factor",{"_index":809,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["factory",{"_index":1955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["failed",{"_index":869,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/OddsComponent.html":{},"injectables/SnapOddsFacade.html":{}}}],["fails",{"_index":997,"title":{},"body":{"components/OddsComponent.html":{}}}],["fallback",{"_index":620,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["false",{"_index":404,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["features",{"_index":1931,"title":{},"body":{"index.html":{}}}],["feedback",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["fff",{"_index":1763,"title":{},"body":{"components/WebcamComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"components/SwitchSvgComponent.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["filereader",{"_index":1724,"title":{},"body":{"components/WebcamComponent.html":{}}}],["files",{"_index":1897,"title":{},"body":{"index.html":{}}}],["filetranslateloader",{"_index":263,"title":{"classes/FileTranslateLoader.html":{}},"body":{"modules/AppModule.html":{},"classes/FileTranslateLoader.html":{},"coverage.html":{}}}],["filter",{"_index":426,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["filter((offer",{"_index":1174,"title":{},"body":{"injectables/OddsService.html":{}}}],["filter((state",{"_index":945,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["find",{"_index":1382,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["first",{"_index":1217,"title":{},"body":{"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{}}}],["flag",{"_index":1520,"title":{},"body":{"interfaces/TvChannel.html":{},"index.html":{}}}],["flex",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["fns",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["focus",{"_index":766,"title":{},"body":{"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{}}}],["font",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["footer",{"_index":572,"title":{},"body":{"components/FooterComponent.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["footer'},{'name",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["footer.component.scss",{"_index":573,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["footercomponent",{"_index":206,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["foreach((offer",{"_index":1176,"title":{},"body":{"injectables/OddsService.html":{}}}],["format",{"_index":1457,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["forwarded",{"_index":913,"title":{},"body":{"injectables/LoggerService.html":{}}}],["found",{"_index":422,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"components/WebcamComponent.html":{}}}],["fourth",{"_index":1220,"title":{},"body":{"interfaces/Quadrangle2d.html":{}}}],["frame",{"_index":1657,"title":{},"body":{"components/WebcamComponent.html":{}}}],["from(this.applicationconfigservice.accesstokenprovider()).pipe",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["fromloglevel",{"_index":447,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["fromloglevel(loglevel",{"_index":1871,"title":{},"body":{"miscellaneous/functions.html":{}}}],["function",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/NotificationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":1870,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1642,"title":{},"body":{"components/WebcamComponent.html":{},"index.html":{}}}],["g",{"_index":1900,"title":{},"body":{"index.html":{}}}],["ga",{"_index":635,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ga('send",{"_index":652,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["game",{"_index":1074,"title":{},"body":{"components/OddsComponent.html":{},"interfaces/Player.html":{},"interfaces/SportsBook-1.html":{}}}],["gamelineoddsbysporteventid",{"_index":1132,"title":{},"body":{"injectables/OddsService.html":{}}}],["gamelineoddsbysporteventid(sporteventid",{"_index":1145,"title":{},"body":{"injectables/OddsService.html":{}}}],["generate",{"_index":1902,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1877,"title":{},"body":{"index.html":{}}}],["get(settings.$z",{"_index":1761,"title":{},"body":{"components/WebcamComponent.html":{}}}],["getaccesstoken",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["getaccesstokenprovider",{"_index":443,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["getapiurl",{"_index":372,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["getautosnapdelay",{"_index":373,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["getautosnapdelay(initial",{"_index":398,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["getbaseurl",{"_index":1150,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["getcurrenttimestamp",{"_index":1583,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["getlanguage",{"_index":374,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["getloglevel",{"_index":375,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["getsnapdimension",{"_index":376,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["getstate",{"_index":301,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{},"components/SnapComponent.html":{}}}],["getting",{"_index":1874,"title":{"index.html":{}},"body":{}}],["gettranslation",{"_index":548,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["gettranslation(lang",{"_index":560,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["gettvsearchresult",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["getviewfinder",{"_index":1633,"title":{},"body":{"components/WebcamComponent.html":{}}}],["given",{"_index":391,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"classes/FileTranslateLoader.html":{},"components/OddsComponent.html":{},"interfaces/OddsOfferOutcome.html":{},"components/SnapComponent.html":{},"interfaces/SportsBook-1.html":{}}}],["globally",{"_index":602,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["googleanalytics",{"_index":601,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["googleanalyticsservice",{"_index":66,"title":{"injectables/GoogleAnalyticsService.html":{}},"body":{"components/AppComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"coverage.html":{}}}],["googletagmanager",{"_index":605,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["grabbed",{"_index":1518,"title":{},"body":{"interfaces/TvChannel.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["grabs",{"_index":1521,"title":{},"body":{"interfaces/TvChannel.html":{}}}],["graph",{"_index":1925,"title":{},"body":{"index.html":{}}}],["grow",{"_index":574,"title":{},"body":{"components/FooterComponent.html":{}}}],["gtag",{"_index":634,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gtag('event",{"_index":660,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["gubergren",{"_index":755,"title":{},"body":{"components/HelpComponent.html":{}}}],["handleerror",{"_index":1227,"title":{},"body":{"components/SnapComponent.html":{}}}],["handleerror(error",{"_index":1240,"title":{},"body":{"components/SnapComponent.html":{}}}],["handleiniterror",{"_index":1634,"title":{},"body":{"components/WebcamComponent.html":{}}}],["handleiniterror(error",{"_index":1660,"title":{},"body":{"components/WebcamComponent.html":{}}}],["handlesuccess",{"_index":1228,"title":{},"body":{"components/SnapComponent.html":{}}}],["handlesuccess(sporteventsresponse",{"_index":1248,"title":{},"body":{"components/SnapComponent.html":{}}}],["hascompetitor",{"_index":1182,"title":{},"body":{"injectables/OddsService.html":{}}}],["hasmultiplewebcams",{"_index":1623,"title":{},"body":{"components/WebcamComponent.html":{}}}],["hasvalidaccesstoken",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["hasvibrationapi",{"_index":956,"title":{},"body":{"injectables/NotificationService.html":{}}}],["header",{"_index":672,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"injectables/TvSearchService.html":{}}}],["header'},{'name",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["header.component.html",{"_index":674,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":673,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["headercomponent",{"_index":208,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headers",{"_index":1160,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["headers.set('x",{"_index":1605,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["height",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"injectables/ImageManipulationService.html":{},"components/OddsComponent.html":{},"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{}}}],["help",{"_index":711,"title":{},"body":{"components/HelpComponent.html":{},"components/SnapComponent.html":{},"index.html":{}}}],["help'},{'name",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["help.component.html",{"_index":713,"title":{},"body":{"components/HelpComponent.html":{}}}],["help.component.scss",{"_index":712,"title":{},"body":{"components/HelpComponent.html":{}}}],["help/help.component",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["helpcomponent",{"_index":210,"title":{"components/HelpComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["helppage",{"_index":316,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["hh:mm",{"_index":1044,"title":{},"body":{"components/OddsComponent.html":{}}}],["hidden",{"_index":1078,"title":{},"body":{"components/OddsComponent.html":{},"components/WebcamComponent.html":{}}}],["higher",{"_index":906,"title":{},"body":{"injectables/LoggerService.html":{}}}],["hittype",{"_index":653,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["holds",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["homepage",{"_index":1519,"title":{},"body":{"interfaces/TvChannel.html":{}}}],["host",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["href",{"_index":887,"title":{},"body":{"interfaces/Link.html":{}}}],["html",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["htmlcanvaselement",{"_index":780,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["htmlelement",{"_index":798,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["htmlvideoelement",{"_index":796,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["http",{"_index":1138,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["http://localhost:3333",{"_index":1898,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":1895,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":1136,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["httpclientmodule",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":1152,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["httpresponse",{"_index":1576,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["https://api.us.snapscreen.com",{"_index":450,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["i)}deg",{"_index":1439,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["i18n",{"_index":354,"title":{},"body":{"interfaces/ApplicationConfig.html":{}}}],["id",{"_index":534,"title":{},"body":{"interfaces/Competitor.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/Player.html":{},"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{},"components/WebcamComponent.html":{}}}],["ideal",{"_index":1686,"title":{},"body":{"components/WebcamComponent.html":{}}}],["identifier",{"_index":1000,"title":{},"body":{"components/OddsComponent.html":{},"injectables/OddsService.html":{},"coverage.html":{}}}],["image",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationConfigService.html":{},"injectables/ImageManipulationService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["image.ts",{"_index":1943,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["image/jpeg",{"_index":789,"title":{},"body":{"injectables/ImageManipulationService.html":{},"injectables/TvSearchService.html":{}}}],["imageasdataurl",{"_index":1624,"title":{},"body":{"components/WebcamComponent.html":{}}}],["imagedata",{"_index":1384,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["imagemanipulationservice",{"_index":767,"title":{"injectables/ImageManipulationService.html":{}},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["images",{"_index":1539,"title":{},"body":{"interfaces/TvSearchResult.html":{}}}],["implementation",{"_index":1954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/FileTranslateLoader.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["import",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["important",{"_index":1758,"title":{},"body":{"components/WebcamComponent.html":{}}}],["imports",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["include",{"_index":695,"title":{},"body":{"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":1527,"title":{},"body":{"classes/TvSearchNoResultError.html":{}}}],["indicates",{"_index":1243,"title":{},"body":{"components/SnapComponent.html":{},"interfaces/TvChannel.html":{}}}],["infinite",{"_index":1426,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"components/SwitchSvgComponent.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{}}}],["info(...data",{"_index":899,"title":{},"body":{"injectables/LoggerService.html":{}}}],["initial",{"_index":403,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["initialization",{"_index":1886,"title":{},"body":{"index.html":{}}}],["initialize",{"_index":1731,"title":{},"body":{"components/WebcamComponent.html":{}}}],["initialized",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/WebcamComponent.html":{}}}],["initializes",{"_index":1265,"title":{},"body":{"components/SnapComponent.html":{}}}],["inject",{"_index":833,"title":{},"body":{"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{}}}],["inject(console",{"_index":918,"title":{},"body":{"injectables/LoggerService.html":{}}}],["inject(document",{"_index":837,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["inject(location",{"_index":1317,"title":{},"body":{"components/SnapComponent.html":{}}}],["inject(navigator",{"_index":968,"title":{},"body":{"injectables/NotificationService.html":{}}}],["injectable",{"_index":293,"title":{"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"injectables/OddsService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}},"body":{"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"injectables/OddsService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"coverage.html":{}}}],["injectables",{"_index":294,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"injectables/OddsService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":1956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('browser",{"_index":1953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injector",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["inline",{"_index":1071,"title":{},"body":{"components/OddsComponent.html":{},"components/SpinnerComponent.html":{}}}],["inlined",{"_index":553,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["input",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/OddsComponent.html":{},"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["inputs",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/OddsComponent.html":{},"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["inside",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"components/WebcamComponent.html":{}}}],["instanceof",{"_index":1350,"title":{},"body":{"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{}}}],["instead",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["interaction",{"_index":950,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["interactive",{"_index":1932,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AccessToken.html":{},"interfaces/ApplicationConfig.html":{},"interfaces/Competitor.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"interfaces/TranslationEntries.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{}},"body":{"interfaces/AccessToken.html":{},"interfaces/ApplicationConfig.html":{},"interfaces/Competitor.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"interfaces/TranslationEntries.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AccessToken.html":{},"interfaces/ApplicationConfig.html":{},"interfaces/Competitor.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"interfaces/TranslationEntries.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"overview.html":{}}}],["interrupt",{"_index":1711,"title":{},"body":{"components/WebcamComponent.html":{}}}],["interval",{"_index":1612,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["invidunt",{"_index":735,"title":{},"body":{"components/HelpComponent.html":{}}}],["invoked",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["ipsum",{"_index":723,"title":{},"body":{"components/HelpComponent.html":{}}}],["isaboveloglevel",{"_index":891,"title":{},"body":{"injectables/LoggerService.html":{}}}],["isaboveloglevel(loglevel",{"_index":901,"title":{},"body":{"injectables/LoggerService.html":{}}}],["isautosnapenabled",{"_index":377,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["isgoogleanalytics",{"_index":584,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["isgoogletagmanager",{"_index":585,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["iso",{"_index":1455,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["istokenexpired",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["isvibrateenabled",{"_index":378,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["items",{"_index":682,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["jest",{"_index":1919,"title":{},"body":{"index.html":{}}}],["jpeg",{"_index":793,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["js/1.0.0",{"_index":631,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["justify",{"_index":541,"title":{},"body":{"components/ContentComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{}}}],["justo",{"_index":747,"title":{},"body":{"components/HelpComponent.html":{}}}],["kasd",{"_index":754,"title":{},"body":{"components/HelpComponent.html":{}}}],["key",{"_index":458,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["keyframes",{"_index":1440,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["keys",{"_index":1492,"title":{},"body":{"interfaces/TranslationEntries.html":{}}}],["l",{"_index":1363,"title":{},"body":{"components/SnapComponent.html":{}}}],["label",{"_index":583,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"interfaces/OddsOffer.html":{}}}],["labore",{"_index":737,"title":{},"body":{"components/HelpComponent.html":{}}}],["lag",{"_index":1611,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["landscape",{"_index":1364,"title":{},"body":{"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["lang",{"_index":563,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["language",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"classes/FileTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["larger",{"_index":831,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["left",{"_index":700,"title":{},"body":{"components/HeaderComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["legend",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["lets",{"_index":966,"title":{},"body":{"injectables/NotificationService.html":{}}}],["letter",{"_index":565,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["level",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/LoggerService.html":{}}}],["level.ts",{"_index":1808,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["levels",{"_index":909,"title":{},"body":{"injectables/LoggerService.html":{}}}],["lg",{"_index":579,"title":{},"body":{"components/FooterComponent.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["libraries",{"_index":1887,"title":{},"body":{"index.html":{}}}],["library",{"_index":1666,"title":{},"body":{"components/WebcamComponent.html":{}}}],["libs/response/src/lib/typings/auth/access",{"_index":6,"title":{},"body":{"interfaces/AccessToken.html":{},"coverage.html":{}}}],["libs/response/src/lib/typings/link.ts",{"_index":886,"title":{},"body":{"interfaces/Link.html":{},"coverage.html":{}}}],["libs/response/src/lib/typings/odds/competitor.ts",{"_index":530,"title":{},"body":{"interfaces/Competitor.html":{},"coverage.html":{}}}],["libs/response/src/lib/typings/odds/odds",{"_index":1104,"title":{},"body":{"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"coverage.html":{}}}],["libs/response/src/lib/typings/odds/player.ts",{"_index":1202,"title":{},"body":{"interfaces/Player.html":{},"coverage.html":{}}}],["libs/response/src/lib/typings/odds/sports",{"_index":1476,"title":{},"body":{"interfaces/SportsBook-1.html":{},"coverage.html":{}}}],["libs/response/src/lib/typings/tv",{"_index":1204,"title":{},"body":{"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"coverage.html":{}}}],["lifetime",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["line",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/OddsComponent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLine.html":{},"components/WebcamComponent.html":{}}}],["line.moneyline",{"_index":1055,"title":{},"body":{"components/OddsComponent.html":{}}}],["line.overunder",{"_index":1058,"title":{},"body":{"components/OddsComponent.html":{}}}],["line.overunderodds",{"_index":1059,"title":{},"body":{"components/OddsComponent.html":{}}}],["line.spread",{"_index":1053,"title":{},"body":{"components/OddsComponent.html":{}}}],["line.spreadodds",{"_index":1054,"title":{},"body":{"components/OddsComponent.html":{}}}],["line.ts",{"_index":1478,"title":{},"body":{"interfaces/SportsBookLine.html":{},"coverage.html":{}}}],["linear",{"_index":1425,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lineodds",{"_index":125,"title":{"interfaces/LineOdds.html":{}},"body":{"components/AppComponent.html":{},"injectables/ApplicationConfigService.html":{},"interfaces/LineOdds.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"interfaces/SportsBook.html":{},"coverage.html":{}}}],["lineodds.competitors[i].name",{"_index":1052,"title":{},"body":{"components/OddsComponent.html":{}}}],["lineodds.sportsbooks",{"_index":1035,"title":{},"body":{"components/OddsComponent.html":{}}}],["lineodds.sportsbooks.length",{"_index":1036,"title":{},"body":{"components/OddsComponent.html":{}}}],["lines",{"_index":1170,"title":{},"body":{"injectables/OddsService.html":{},"interfaces/SportsBook.html":{}}}],["link",{"_index":885,"title":{"interfaces/Link.html":{}},"body":{"interfaces/Link.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/TvChannel.html":{},"coverage.html":{}}}],["list",{"_index":879,"title":{},"body":{"interfaces/LineOdds.html":{},"interfaces/TvSearchResult.html":{}}}],["listen",{"_index":306,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["literal",{"_index":811,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook-1.html":{},"interfaces/TvChannel.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":1273,"title":{},"body":{"components/SnapComponent.html":{}}}],["loaded",{"_index":559,"title":{},"body":{"classes/FileTranslateLoader.html":{},"components/SnapComponent.html":{}}}],["loader",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["loader.ts",{"_index":547,"title":{},"body":{"classes/FileTranslateLoader.html":{},"coverage.html":{}}}],["loader.ts:12",{"_index":552,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["loader.ts:21",{"_index":561,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["loading",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationConfigService.html":{},"components/OddsComponent.html":{}}}],["loadlineodds",{"_index":979,"title":{},"body":{"components/OddsComponent.html":{}}}],["loadlineodds(sporteventid",{"_index":991,"title":{},"body":{"components/OddsComponent.html":{}}}],["loads",{"_index":993,"title":{},"body":{"components/OddsComponent.html":{}}}],["loadsportevents",{"_index":1229,"title":{},"body":{"components/SnapComponent.html":{}}}],["loadsportevents(autosnap",{"_index":1255,"title":{},"body":{"components/SnapComponent.html":{}}}],["local",{"_index":1957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstorage",{"_index":1958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["location",{"_index":1238,"title":{},"body":{"components/SnapComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["log",{"_index":351,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"injectables/LoggerService.html":{}}}],["log(loglevel",{"_index":907,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logcallback",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["logged",{"_index":911,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logger",{"_index":386,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["logger/log",{"_index":448,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["logger/logger.service",{"_index":632,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["loggereventcallback",{"_index":914,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loggerservice",{"_index":597,"title":{"injectables/LoggerService.html":{}},"body":{"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["loglevel",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["loglevel's",{"_index":904,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loglevel.debug",{"_index":925,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loglevel.error",{"_index":932,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loglevel.info",{"_index":928,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loglevel.silent",{"_index":451,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["loglevel.warn",{"_index":930,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loglevels",{"_index":1867,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logo",{"_index":1523,"title":{},"body":{"interfaces/TvChannel.html":{}}}],["logs",{"_index":912,"title":{},"body":{"injectables/LoggerService.html":{}}}],["longer",{"_index":406,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{}}}],["lookup",{"_index":1258,"title":{},"body":{"components/SnapComponent.html":{}}}],["lorem",{"_index":722,"title":{},"body":{"components/HelpComponent.html":{}}}],["made",{"_index":1541,"title":{},"body":{"interfaces/TvSearchResultEntry.html":{}}}],["magna",{"_index":740,"title":{},"body":{"components/HelpComponent.html":{}}}],["main",{"_index":1880,"title":{},"body":{"index.html":{}}}],["manage",{"_index":1280,"title":{},"body":{"components/SnapComponent.html":{}}}],["manipulated",{"_index":836,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["manipulatedimage",{"_index":835,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/typealiases.html":{}}}],["manipulation",{"_index":868,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["manipulation.service",{"_index":1702,"title":{},"body":{"components/WebcamComponent.html":{}}}],["manipulation.service.ts",{"_index":770,"title":{},"body":{"injectables/ImageManipulationService.html":{},"coverage.html":{}}}],["manipulation.service.ts:105",{"_index":783,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["manipulation.service.ts:144",{"_index":829,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["manipulation.service.ts:155",{"_index":819,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["manipulation.service.ts:19",{"_index":814,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["manipulation.service.ts:59",{"_index":826,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["manipulation.service.ts:70",{"_index":800,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["manipulation.service.ts:9",{"_index":778,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["manipulation/image",{"_index":769,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["manipulation/manipulated",{"_index":1309,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/typealiases.html":{}}}],["manually",{"_index":1568,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["map",{"_index":320,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["map((accesstoken",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["map((response",{"_index":1163,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["map((sportsbook",{"_index":1167,"title":{},"body":{"injectables/OddsService.html":{}}}],["maplineoddsresponse",{"_index":1133,"title":{},"body":{"injectables/OddsService.html":{}}}],["maplineoddsresponse(lineodds",{"_index":1147,"title":{},"body":{"injectables/OddsService.html":{}}}],["mapto",{"_index":951,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["mapto(true",{"_index":947,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["margin",{"_index":576,"title":{},"body":{"components/FooterComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["match",{"_index":421,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{},"interfaces/SportEvent.html":{}}}],["matching",{"_index":23,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"components/SwitchSvgComponent.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.abs((this.element.offsetheight",{"_index":1741,"title":{},"body":{"components/WebcamComponent.html":{}}}],["math.abs((this.element.offsetwidth",{"_index":1738,"title":{},"body":{"components/WebcamComponent.html":{}}}],["math.div($bar",{"_index":1432,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["math.div($spinner",{"_index":1415,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["math.div(9",{"_index":1767,"title":{},"body":{"components/WebcamComponent.html":{}}}],["math.floor((maxdimension",{"_index":872,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["math.floor((source.videoheight",{"_index":860,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["math.floor((source.videowidth",{"_index":859,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["math.floor((viewfinder.clientheight",{"_index":858,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["math.floor((viewfinder.clientwidth",{"_index":857,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["math.max(source.videowidth",{"_index":854,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["max",{"_index":816,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["maxdimension",{"_index":813,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["media",{"_index":690,"title":{},"body":{"components/HeaderComponent.html":{},"components/SnapComponent.html":{}}}],["mediadeviceinfo",{"_index":1704,"title":{},"body":{"components/WebcamComponent.html":{}}}],["mediadevices.length",{"_index":1706,"title":{},"body":{"components/WebcamComponent.html":{}}}],["mediadevicestate",{"_index":939,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{}}}],["mediadevicestate.device_camera_ready",{"_index":946,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["mediadevicestatestore",{"_index":936,"title":{"injectables/MediaDeviceStateStore.html":{}},"body":{"injectables/MediaDeviceStateStore.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["mediatrackconstraints",{"_index":1684,"title":{},"body":{"components/WebcamComponent.html":{}}}],["mergemap",{"_index":1301,"title":{},"body":{"components/SnapComponent.html":{}}}],["merges",{"_index":432,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["message",{"_index":998,"title":{},"body":{"components/OddsComponent.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["message'},{'name",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["message.component",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["message.component.html",{"_index":1616,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{}}}],["message.component.scss",{"_index":1615,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{}}}],["message.component.ts",{"_index":1614,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{},"coverage.html":{}}}],["message.component.ts:10",{"_index":1617,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{}}}],["message/user",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"components/UserFeedbackMessageComponent.html":{},"coverage.html":{}}}],["metadata",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["method",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/SnapComponent.html":{}}}],["methods",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["mime",{"_index":790,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["mimetype",{"_index":781,"title":{},"body":{"injectables/ImageManipulationService.html":{},"injectables/TvSearchService.html":{}}}],["min",{"_index":1100,"title":{},"body":{"components/OddsComponent.html":{},"components/WebcamComponent.html":{}}}],["minute",{"_index":1929,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":1862,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mixin",{"_index":1747,"title":{},"body":{"components/WebcamComponent.html":{}}}],["mm",{"_index":1459,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["mode",{"_index":416,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{}}}],["models/line",{"_index":1022,"title":{},"body":{"components/OddsComponent.html":{},"injectables/OddsService.html":{}}}],["models/sports",{"_index":1154,"title":{},"body":{"injectables/OddsService.html":{}}}],["module",{"_index":232,"title":{"modules/AppModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":234,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["money",{"_index":1050,"title":{},"body":{"components/OddsComponent.html":{},"interfaces/SportsBookLine.html":{}}}],["moneyline",{"_index":1113,"title":{},"body":{"interfaces/OddsOffer.html":{},"injectables/OddsService.html":{},"interfaces/SportsBookLine.html":{}}}],["moneylineurl",{"_index":1479,"title":{},"body":{"interfaces/SportsBookLine.html":{}}}],["mouseevent",{"_index":1010,"title":{},"body":{"components/OddsComponent.html":{}}}],["movex",{"_index":1737,"title":{},"body":{"components/WebcamComponent.html":{}}}],["movey",{"_index":1740,"title":{},"body":{"components/WebcamComponent.html":{}}}],["name",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/functions.html":{}}}],["navigate",{"_index":718,"title":{},"body":{"components/HelpComponent.html":{},"components/SnapComponent.html":{},"index.html":{}}}],["navigator",{"_index":959,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["neartimestamp",{"_index":1559,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["necessary",{"_index":1562,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["needs",{"_index":830,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["negative",{"_index":1389,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["nesting",{"_index":1773,"title":{},"body":{"components/WebcamComponent.html":{}}}],["never",{"_index":1172,"title":{},"body":{"injectables/OddsService.html":{}}}],["new",{"_index":309,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/ImageManipulationService.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":1034,"title":{},"body":{"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["nextwebcam",{"_index":1625,"title":{},"body":{"components/WebcamComponent.html":{}}}],["ng",{"_index":1755,"title":{},"body":{"components/WebcamComponent.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":1635,"title":{},"body":{"components/WebcamComponent.html":{}}}],["ngdobootstrap",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["ngonchanges",{"_index":980,"title":{},"body":{"components/OddsComponent.html":{}}}],["ngonchanges(changes",{"_index":1001,"title":{},"body":{"components/OddsComponent.html":{}}}],["ngondestroy",{"_index":1230,"title":{},"body":{"components/SnapComponent.html":{}}}],["ngoninit",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["ngx",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/FileTranslateLoader.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["ngxwebcamcomponent",{"_index":1695,"title":{},"body":{"components/WebcamComponent.html":{}}}],["none",{"_index":1086,"title":{},"body":{"components/OddsComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["nonumy",{"_index":732,"title":{},"body":{"components/HelpComponent.html":{}}}],["noop",{"_index":445,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["noresults",{"_index":978,"title":{},"body":{"components/OddsComponent.html":{}}}],["notificationservice",{"_index":954,"title":{"injectables/NotificationService.html":{}},"body":{"injectables/NotificationService.html":{},"components/SnapComponent.html":{},"coverage.html":{}}}],["notifies",{"_index":1290,"title":{},"body":{"components/SnapComponent.html":{}}}],["notify",{"_index":957,"title":{},"body":{"injectables/NotificationService.html":{},"components/SnapComponent.html":{}}}],["now",{"_index":1579,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["nowrap",{"_index":705,"title":{},"body":{"components/HeaderComponent.html":{}}}],["npm",{"_index":1909,"title":{},"body":{"index.html":{}}}],["nrwl/angular",{"_index":1846,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/OddsComponent.html":{},"interfaces/OddsOfferOutcome.html":{},"injectables/OddsService.html":{},"interfaces/SportsBookLine.html":{},"components/WebcamComponent.html":{}}}],["number",{"_index":20,"title":{},"body":{"interfaces/AccessToken.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOfferOutcome.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBookLine.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{}}}],["nx",{"_index":1878,"title":{},"body":{"index.html":{}}}],["o",{"_index":1056,"title":{},"body":{"components/OddsComponent.html":{}}}],["object.defineproperty(this.pinchzoomcomponent.pinchzoom",{"_index":1736,"title":{},"body":{"components/WebcamComponent.html":{}}}],["object.entries(config).reduce",{"_index":456,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["observable",{"_index":308,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["observe",{"_index":1594,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["odds",{"_index":975,"title":{},"body":{"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"coverage.html":{}}}],["odds'},{'name",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["odds.component.html",{"_index":977,"title":{},"body":{"components/OddsComponent.html":{}}}],["odds.component.scss",{"_index":976,"title":{},"body":{"components/OddsComponent.html":{}}}],["odds.ts",{"_index":874,"title":{},"body":{"interfaces/LineOdds.html":{},"coverage.html":{}}}],["odds/odds.component",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["odds/snap",{"_index":1313,"title":{},"body":{"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"coverage.html":{}}}],["oddscomponent",{"_index":212,"title":{"components/OddsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["oddsoffer",{"_index":1103,"title":{"interfaces/OddsOffer.html":{}},"body":{"interfaces/OddsOffer.html":{},"interfaces/SportsBook-1.html":{},"coverage.html":{}}}],["oddsofferoutcome",{"_index":1110,"title":{"interfaces/OddsOfferOutcome.html":{}},"body":{"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"coverage.html":{}}}],["oddsoffers",{"_index":1474,"title":{},"body":{"interfaces/SportsBook.html":{}}}],["oddsresponse",{"_index":1126,"title":{"interfaces/OddsResponse.html":{}},"body":{"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"coverage.html":{}}}],["oddsservice",{"_index":987,"title":{"injectables/OddsService.html":{}},"body":{"components/OddsComponent.html":{},"injectables/OddsService.html":{},"coverage.html":{}}}],["of(this.accesstoken",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["of(this.translations.get(lang",{"_index":570,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["offer",{"_index":1107,"title":{},"body":{"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/SportsBook-1.html":{},"coverage.html":{}}}],["offer.outcomes",{"_index":1175,"title":{},"body":{"injectables/OddsService.html":{}}}],["offer.outcomes.foreach((outcome",{"_index":1177,"title":{},"body":{"injectables/OddsService.html":{}}}],["offer.ts",{"_index":1105,"title":{},"body":{"interfaces/OddsOffer.html":{},"coverage.html":{}}}],["offer.type",{"_index":1184,"title":{},"body":{"injectables/OddsService.html":{}}}],["offers",{"_index":1477,"title":{},"body":{"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{}}}],["offset",{"_index":1648,"title":{},"body":{"components/WebcamComponent.html":{}}}],["omitundefinedproperties",{"_index":379,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["omitundefinedproperties(config",{"_index":423,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["onchanges",{"_index":974,"title":{},"body":{"components/OddsComponent.html":{}}}],["ondestroy",{"_index":1222,"title":{},"body":{"components/SnapComponent.html":{}}}],["one",{"_index":903,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/SportsBook.html":{}}}],["oninit",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["onlineoddsloaded",{"_index":981,"title":{},"body":{"components/OddsComponent.html":{}}}],["onlineoddsloaded(lineodds",{"_index":1005,"title":{},"body":{"components/OddsComponent.html":{}}}],["onlineoddsloadfailed",{"_index":982,"title":{},"body":{"components/OddsComponent.html":{}}}],["opacity",{"_index":1441,"title":{},"body":{"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{}}}],["opened",{"_index":1016,"title":{},"body":{"components/OddsComponent.html":{},"components/SnapComponent.html":{}}}],["openoutcomeredirecturl",{"_index":983,"title":{},"body":{"components/OddsComponent.html":{}}}],["openoutcomeredirecturl($event",{"_index":1009,"title":{},"body":{"components/OddsComponent.html":{}}}],["opens",{"_index":1013,"title":{},"body":{"components/OddsComponent.html":{}}}],["optional",{"_index":11,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"interfaces/TvChannel.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":407,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{}}}],["ordered",{"_index":1868,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["orientation",{"_index":691,"title":{},"body":{"components/HeaderComponent.html":{},"components/SnapComponent.html":{}}}],["origin",{"_index":1428,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["otherwise",{"_index":1658,"title":{},"body":{"components/WebcamComponent.html":{}}}],["out",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationConfigService.html":{},"overview.html":{}}}],["outcome",{"_index":1115,"title":{},"body":{"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/SportsBookLine.html":{}}}],["outcome._links?.redirect?.href",{"_index":1183,"title":{},"body":{"injectables/OddsService.html":{}}}],["outcome.competitorid",{"_index":1181,"title":{},"body":{"injectables/OddsService.html":{}}}],["outcome.target",{"_index":1190,"title":{},"body":{"injectables/OddsService.html":{}}}],["outcome.ts",{"_index":1117,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{},"coverage.html":{}}}],["outcome.type",{"_index":1185,"title":{},"body":{"injectables/OddsService.html":{}}}],["outcomes",{"_index":1109,"title":{},"body":{"interfaces/OddsOffer.html":{}}}],["output",{"_index":1020,"title":{},"body":{"components/OddsComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["outputs",{"_index":984,"title":{},"body":{"components/OddsComponent.html":{},"components/TriggerComponent.html":{}}}],["outside",{"_index":357,"title":{},"body":{"interfaces/ApplicationConfig.html":{}}}],["over",{"_index":1124,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{},"injectables/OddsService.html":{}}}],["over/under",{"_index":1121,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{},"interfaces/SportsBookLine.html":{}}}],["over_under",{"_index":1114,"title":{},"body":{"interfaces/OddsOffer.html":{},"injectables/OddsService.html":{}}}],["overflow",{"_index":544,"title":{},"body":{"components/ContentComponent.html":{},"components/OddsComponent.html":{},"components/WebcamComponent.html":{}}}],["overunder",{"_index":1480,"title":{},"body":{"interfaces/SportsBookLine.html":{}}}],["overunderodds",{"_index":1481,"title":{},"body":{"interfaces/SportsBookLine.html":{}}}],["overunderurl",{"_index":1482,"title":{},"body":{"interfaces/SportsBookLine.html":{}}}],["overview",{"_index":1936,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1837,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":688,"title":{},"body":{"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["page",{"_index":657,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["page_path",{"_index":662,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["page_title",{"_index":663,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["page_view",{"_index":661,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["pageview",{"_index":654,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["param",{"_index":339,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["parameters",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":802,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["partial",{"_index":424,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["participating",{"_index":1454,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["parts",{"_index":827,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["patched",{"_index":1667,"title":{},"body":{"components/WebcamComponent.html":{}}}],["patches",{"_index":1645,"title":{},"body":{"components/WebcamComponent.html":{}}}],["peer",{"_index":1911,"title":{},"body":{"index.html":{}}}],["perform",{"_index":394,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{},"injectables/TvSearchService.html":{}}}],["performed",{"_index":1291,"title":{},"body":{"components/SnapComponent.html":{}}}],["performs",{"_index":1387,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["periodically",{"_index":1269,"title":{},"body":{"components/SnapComponent.html":{}}}],["pinch",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["pinchzoomcomponent",{"_index":1626,"title":{},"body":{"components/WebcamComponent.html":{}}}],["pinchzoommodule",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe",{"_index":1337,"title":{},"body":{"components/SnapComponent.html":{}}}],["pipe(takeuntil(this.destroyed",{"_index":1323,"title":{},"body":{"components/SnapComponent.html":{}}}],["plane",{"_index":1208,"title":{},"body":{"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{}}}],["player",{"_index":880,"title":{"interfaces/Player.html":{}},"body":{"interfaces/LineOdds.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/Player.html":{},"coverage.html":{}}}],["playerid",{"_index":1119,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{}}}],["players",{"_index":877,"title":{},"body":{"interfaces/LineOdds.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{}}}],["point",{"_index":1206,"title":{},"body":{"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{}}}],["point2d",{"_index":1203,"title":{"interfaces/Point2d.html":{}},"body":{"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"coverage.html":{}}}],["pointer",{"_index":1096,"title":{},"body":{"components/OddsComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["pointing",{"_index":1485,"title":{},"body":{"interfaces/SportsBookLine.html":{}}}],["portrait",{"_index":692,"title":{},"body":{"components/HeaderComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["position",{"_index":1420,"title":{},"body":{"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["positive",{"_index":1388,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["possible",{"_index":1111,"title":{},"body":{"interfaces/OddsOffer.html":{},"miscellaneous/enumerations.html":{}}}],["poster",{"_index":1524,"title":{},"body":{"interfaces/TvChannel.html":{}}}],["powered",{"_index":1742,"title":{},"body":{"components/WebcamComponent.html":{}}}],["preferredheight",{"_index":824,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["preferredwidth",{"_index":823,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["present",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["pressing",{"_index":1285,"title":{},"body":{"components/SnapComponent.html":{}}}],["primary",{"_index":765,"title":{},"body":{"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{}}}],["private",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["processed",{"_index":1244,"title":{},"body":{"components/SnapComponent.html":{},"injectables/TvSearchService.html":{}}}],["processing",{"_index":1505,"title":{},"body":{"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["prod",{"_index":1906,"title":{},"body":{"index.html":{}}}],["production",{"_index":1907,"title":{},"body":{"index.html":{}}}],["programmatically",{"_index":401,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["project",{"_index":1876,"title":{},"body":{"index.html":{}}}],["project=snapodds",{"_index":1901,"title":{},"body":{"index.html":{}}}],["projects",{"_index":1879,"title":{},"body":{"index.html":{}}}],["promise",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["promise((resolve",{"_index":861,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["promise.reject('no",{"_index":452,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":9,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"interfaces/TranslationEntries.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["property",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["provide",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["providedin",{"_index":336,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"injectables/OddsService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":355,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"interfaces/SportEvent.html":{}}}],["pseudo",{"_index":1754,"title":{},"body":{"components/WebcamComponent.html":{}}}],["quadrangle",{"_index":1214,"title":{},"body":{"interfaces/Quadrangle2d.html":{}}}],["quadrangle2d",{"_index":1212,"title":{"interfaces/Quadrangle2d.html":{}},"body":{"interfaces/Quadrangle2d.html":{},"interfaces/TvSearchResult.html":{},"coverage.html":{}}}],["quadrangles",{"_index":1537,"title":{},"body":{"interfaces/TvSearchResult.html":{}}}],["quality",{"_index":782,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["race",{"_index":1302,"title":{},"body":{"components/SnapComponent.html":{}}}],["radius",{"_index":1430,"title":{},"body":{"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{}}}],["ratio",{"_index":1749,"title":{},"body":{"components/WebcamComponent.html":{}}}],["reached",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["read",{"_index":1698,"title":{},"body":{"components/WebcamComponent.html":{}}}],["reader",{"_index":1723,"title":{},"body":{"components/WebcamComponent.html":{}}}],["reader.onloadend",{"_index":1725,"title":{},"body":{"components/WebcamComponent.html":{}}}],["reader.readasdataurl(blob",{"_index":1728,"title":{},"body":{"components/WebcamComponent.html":{}}}],["reader.result",{"_index":1727,"title":{},"body":{"components/WebcamComponent.html":{}}}],["readonly",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["ready",{"_index":949,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["rebum",{"_index":751,"title":{},"body":{"components/HelpComponent.html":{}}}],["redirect",{"_index":1116,"title":{},"body":{"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{}}}],["redirecturl",{"_index":1011,"title":{},"body":{"components/OddsComponent.html":{},"injectables/OddsService.html":{},"interfaces/SportsBook.html":{}}}],["refresh_token",{"_index":14,"title":{},"body":{"interfaces/AccessToken.html":{}}}],["register",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{}}}],["registerautosnap",{"_index":1231,"title":{},"body":{"components/SnapComponent.html":{}}}],["registered",{"_index":1465,"title":{},"body":{"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{}}}],["reject",{"_index":862,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["reject(error",{"_index":871,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["reject(errormessage",{"_index":870,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["relative",{"_index":1421,"title":{},"body":{"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["release",{"_index":1908,"title":{},"body":{"index.html":{}}}],["reload",{"_index":1275,"title":{},"body":{"components/SnapComponent.html":{},"index.html":{}}}],["reloadpage",{"_index":1232,"title":{},"body":{"components/SnapComponent.html":{}}}],["render",{"_index":326,"title":{},"body":{"injectables/AppStateStore.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLine.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{}}}],["rendered",{"_index":788,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["rendering",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"interfaces/LineOdds.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/OddsService.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{}}}],["renderingcontext",{"_index":849,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["renderingcontext?.drawimage(source",{"_index":851,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["renders",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["replaysubject",{"_index":321,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["replaysubject(1",{"_index":310,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["reported",{"_index":361,"title":{},"body":{"interfaces/ApplicationConfig.html":{}}}],["representation",{"_index":1872,"title":{},"body":{"miscellaneous/functions.html":{}}}],["represents",{"_index":532,"title":{},"body":{"interfaces/Competitor.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/Player.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook-1.html":{},"interfaces/TvChannel.html":{}}}],["request",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{},"components/SnapComponent.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{}}}],["requestaccesstoken",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["requestuuid",{"_index":1534,"title":{},"body":{"interfaces/TvSearchResult.html":{}}}],["reset",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{},"overview.html":{}}}],["resized",{"_index":821,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["resizing",{"_index":415,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["resolve",{"_index":864,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["respective",{"_index":1257,"title":{},"body":{"components/SnapComponent.html":{}}}],["response",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{},"components/SnapComponent.html":{},"injectables/TvSearchService.html":{}}}],["response.body",{"_index":1598,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["response.body?.resultentries.length",{"_index":1597,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["response.headers.get('date",{"_index":1608,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["response.ts",{"_index":1127,"title":{},"body":{"interfaces/OddsResponse.html":{},"coverage.html":{}}}],["response/typings",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/LineOdds.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["responsedate",{"_index":1607,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["responses",{"_index":1888,"title":{},"body":{"index.html":{}}}],["rest",{"_index":1890,"title":{},"body":{"index.html":{}}}],["result",{"_index":1533,"title":{},"body":{"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"coverage.html":{}}}],["result.sportevent.starttime",{"_index":1043,"title":{},"body":{"components/OddsComponent.html":{}}}],["result.sportevent.tournament",{"_index":1041,"title":{},"body":{"components/OddsComponent.html":{}}}],["result.ts",{"_index":1532,"title":{},"body":{"interfaces/TvSearchResult.html":{},"coverage.html":{}}}],["result.tvchannel.name",{"_index":1042,"title":{},"body":{"components/OddsComponent.html":{}}}],["resultcallback",{"_index":390,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["resultentries",{"_index":1535,"title":{},"body":{"interfaces/TvSearchResult.html":{}}}],["resultentry",{"_index":392,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["resulting",{"_index":791,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["results",{"_index":22,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"components/SwitchSvgComponent.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resultscallback",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":356,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["retrieves",{"_index":562,"title":{},"body":{"classes/FileTranslateLoader.html":{},"components/SnapComponent.html":{}}}],["retrywhen",{"_index":1303,"title":{},"body":{"components/SnapComponent.html":{}}}],["retrywhen((errors",{"_index":1344,"title":{},"body":{"components/SnapComponent.html":{}}}],["return",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["returned",{"_index":360,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"injectables/AuthService.html":{},"injectables/ImageManipulationService.html":{},"classes/TvSearchNoResultError.html":{}}}],["returns",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"miscellaneous/functions.html":{}}}],["rgb(0",{"_index":1766,"title":{},"body":{"components/WebcamComponent.html":{}}}],["rgba(255",{"_index":1068,"title":{},"body":{"components/OddsComponent.html":{}}}],["right",{"_index":706,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["root",{"_index":337,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"injectables/OddsService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"miscellaneous/variables.html":{}}}],["rotate(#{(math.div(360",{"_index":1438,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["row",{"_index":1367,"title":{},"body":{"components/SnapComponent.html":{}}}],["run",{"_index":1892,"title":{},"body":{"index.html":{}}}],["running",{"_index":1913,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":322,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["sadipscing",{"_index":728,"title":{},"body":{"components/HelpComponent.html":{}}}],["same",{"_index":910,"title":{},"body":{"injectables/LoggerService.html":{}}}],["sanctus",{"_index":758,"title":{},"body":{"components/HelpComponent.html":{}}}],["sass:math",{"_index":1362,"title":{},"body":{"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{}}}],["scaffolding",{"_index":1899,"title":{},"body":{"index.html":{}}}],["scalefactor",{"_index":799,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["scope",{"_index":15,"title":{},"body":{"interfaces/AccessToken.html":{}}}],["score",{"_index":1543,"title":{},"body":{"interfaces/TvSearchResultEntry.html":{}}}],["screen",{"_index":1538,"title":{},"body":{"interfaces/TvSearchResult.html":{}}}],["screenquadrangles",{"_index":1536,"title":{},"body":{"interfaces/TvSearchResult.html":{}}}],["sdk",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationConfig.html":{}}}],["sdk'},{'name",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["sdkinitialized",{"_index":586,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["sea",{"_index":756,"title":{},"body":{"components/HelpComponent.html":{}}}],["search",{"_index":395,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/OddsService.html":{},"injectables/SnapOddsFacade.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"coverage.html":{}}}],["search.service",{"_index":1395,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["search.service.ts",{"_index":1548,"title":{},"body":{"injectables/TvSearchService.html":{},"coverage.html":{}}}],["search.service.ts:104",{"_index":1577,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search.service.ts:14",{"_index":1553,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search.service.ts:26",{"_index":1582,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search.service.ts:33",{"_index":1584,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search.service.ts:41",{"_index":1567,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search.service.ts:50",{"_index":1554,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search.service.ts:61",{"_index":1571,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search.service.ts:86",{"_index":1560,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search/point2d.ts",{"_index":1205,"title":{},"body":{"interfaces/Point2d.html":{},"coverage.html":{}}}],["search/quadrangle2d.ts",{"_index":1213,"title":{},"body":{"interfaces/Quadrangle2d.html":{},"coverage.html":{}}}],["search/sport",{"_index":1443,"title":{},"body":{"interfaces/SportEvent.html":{},"coverage.html":{}}}],["search/sport/by",{"_index":1589,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search/sport/near",{"_index":1590,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search/tv",{"_index":1516,"title":{},"body":{"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"coverage.html":{}}}],["searchsport",{"_index":1376,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["searchsport(imagedata",{"_index":1385,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["second",{"_index":1218,"title":{},"body":{"interfaces/Quadrangle2d.html":{}}}],["sed",{"_index":730,"title":{},"body":{"components/HelpComponent.html":{}}}],["see",{"_index":1926,"title":{},"body":{"index.html":{}}}],["selector",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["self",{"_index":1129,"title":{},"body":{"interfaces/OddsResponse.html":{},"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{}}}],["sent",{"_index":1580,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["separator",{"_index":1089,"title":{},"body":{"components/OddsComponent.html":{}}}],["serve",{"_index":1893,"title":{},"body":{"index.html":{}}}],["server",{"_index":1883,"title":{},"body":{"index.html":{}}}],["service",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleAnalyticsService.html":{}}}],["services",{"_index":1253,"title":{},"body":{"components/SnapComponent.html":{}}}],["services/api/api",{"_index":1307,"title":{},"body":{"components/SnapComponent.html":{}}}],["services/api/odds.service",{"_index":1023,"title":{},"body":{"components/OddsComponent.html":{}}}],["services/config/application",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["services/i18n/file",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["services/image",{"_index":1308,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["services/logger/log",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{}}}],["services/logger/logger.service",{"_index":1310,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["services/notification/notification.service",{"_index":1311,"title":{},"body":{"components/SnapComponent.html":{}}}],["services/snap",{"_index":1312,"title":{},"body":{"components/SnapComponent.html":{}}}],["services/tokens/location",{"_index":1315,"title":{},"body":{"components/SnapComponent.html":{}}}],["services/tokens/window",{"_index":1024,"title":{},"body":{"components/OddsComponent.html":{}}}],["services/tracking/google",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/SnapComponent.html":{}}}],["set",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/WebcamComponent.html":{}}}],["set('authorization",{"_index":1600,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["set('content",{"_index":1601,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["set('x",{"_index":1603,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["setconfig",{"_index":380,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["setconfig(applicationconfig",{"_index":430,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["sets",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/SnapComponent.html":{}}}],["setting",{"_index":719,"title":{},"body":{"components/HelpComponent.html":{},"components/SnapComponent.html":{}}}],["settings",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["settings.$color",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["settings.$font",{"_index":701,"title":{},"body":{"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["settings.$spacing",{"_index":578,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["settvsearchresult(tvsearchresultentry",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["setupanalytics",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["setupapplicationconfig",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["setuptranslations",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["severity",{"_index":905,"title":{},"body":{"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["shadow",{"_index":1764,"title":{},"body":{"components/WebcamComponent.html":{}}}],["shouldcrop",{"_index":775,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["shouldcrop(scalefactor",{"_index":825,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["shoulddownscale",{"_index":776,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["shoulddownscale(sourcewidth",{"_index":828,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["show_help",{"_index":328,"title":{},"body":{"injectables/AppStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["show_odds",{"_index":329,"title":{},"body":{"injectables/AppStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["showhelp",{"_index":298,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["showhelppage",{"_index":1233,"title":{},"body":{"components/SnapComponent.html":{}}}],["showing",{"_index":1930,"title":{},"body":{"index.html":{}}}],["shown",{"_index":317,"title":{},"body":{"injectables/AppStateStore.html":{},"components/OddsComponent.html":{},"interfaces/TvSearchResultEntry.html":{},"components/WebcamComponent.html":{}}}],["showsnappage",{"_index":714,"title":{},"body":{"components/HelpComponent.html":{}}}],["signalize",{"_index":678,"title":{},"body":{"components/HeaderComponent.html":{}}}],["silent",{"_index":1869,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["simplechange",{"_index":1021,"title":{},"body":{"components/OddsComponent.html":{}}}],["simplechanges",{"_index":1004,"title":{},"body":{"components/OddsComponent.html":{}}}],["single",{"_index":1106,"title":{},"body":{"interfaces/OddsOffer.html":{}}}],["sit",{"_index":725,"title":{},"body":{"components/HelpComponent.html":{}}}],["size",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["sizing",{"_index":1066,"title":{},"body":{"components/OddsComponent.html":{}}}],["sm",{"_index":1061,"title":{},"body":{"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["small",{"_index":697,"title":{},"body":{"components/HeaderComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["snap",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{},"injectables/TvSearchService.html":{}}}],["snap'},{'name",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["snap(url",{"_index":1570,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["snap.component.html",{"_index":1224,"title":{},"body":{"components/SnapComponent.html":{}}}],["snap.component.scss",{"_index":1223,"title":{},"body":{"components/SnapComponent.html":{}}}],["snap/snap.component",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["snap_failed",{"_index":332,"title":{},"body":{"injectables/AppStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["snap_in_progress",{"_index":331,"title":{},"body":{"injectables/AppStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["snap_max_dimension",{"_index":368,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["snap_no_results",{"_index":333,"title":{},"body":{"injectables/AppStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["snap_ready",{"_index":330,"title":{},"body":{"injectables/AppStateStore.html":{},"components/SnapComponent.html":{},"miscellaneous/enumerations.html":{}}}],["snapcomponent",{"_index":214,"title":{"components/SnapComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["snapodds",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"index.html":{}}}],["snapodds__font",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["snapodds_action_cancel",{"_index":681,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_action_close_help",{"_index":760,"title":{},"body":{"components/HelpComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_action_help",{"_index":1360,"title":{},"body":{"components/SnapComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_action_reload",{"_index":1361,"title":{},"body":{"components/SnapComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_device_no_permission",{"_index":1494,"title":{},"body":{"interfaces/TranslationEntries.html":{}}}],["snapodds_device_no_permission_headline",{"_index":1495,"title":{},"body":{"interfaces/TranslationEntries.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["snapodds_lines_loading",{"_index":1046,"title":{},"body":{"components/OddsComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_lines_no_results",{"_index":1047,"title":{},"body":{"components/OddsComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_snapping_failed",{"_index":1496,"title":{},"body":{"interfaces/TranslationEntries.html":{}}}],["snapodds_snapping_failed_headline",{"_index":1497,"title":{},"body":{"interfaces/TranslationEntries.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["snapodds_snapping_no_results",{"_index":1498,"title":{},"body":{"interfaces/TranslationEntries.html":{}}}],["snapodds_snapping_no_results_headline",{"_index":1499,"title":{},"body":{"interfaces/TranslationEntries.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["snapodds_title_help",{"_index":720,"title":{},"body":{"components/HelpComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_title_odds",{"_index":1040,"title":{},"body":{"components/OddsComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_title_snap_tv",{"_index":721,"title":{},"body":{"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_viewfinder_hint",{"_index":1500,"title":{},"body":{"interfaces/TranslationEntries.html":{}}}],["snapoddsfacade",{"_index":1237,"title":{"injectables/SnapOddsFacade.html":{}},"body":{"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"coverage.html":{}}}],["snapping",{"_index":346,"title":{},"body":{"interfaces/ApplicationConfig.html":{}}}],["snapscreen",{"_index":1604,"title":{},"body":{"injectables/TvSearchService.html":{},"index.html":{}}}],["snapscreensdk",{"_index":629,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapshot",{"_index":1226,"title":{},"body":{"components/SnapComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["snapshots",{"_index":1271,"title":{},"body":{"components/SnapComponent.html":{}}}],["snapstarttime",{"_index":1398,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["snapviewclosed",{"_index":587,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapviewopened",{"_index":588,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapviewsnap",{"_index":589,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapviewsnapfailed",{"_index":590,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapviewsnapfailed(duration",{"_index":610,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapviewsnapnegative",{"_index":591,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapviewsnapnegative(duration",{"_index":613,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapviewsnapresult",{"_index":592,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapviewsnapresult(duration",{"_index":615,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["solid",{"_index":686,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/WebcamComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"components/SwitchSvgComponent.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"index.html":{}}}],["source.clientheight",{"_index":856,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["source.clientwidth",{"_index":855,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["source.videoheight",{"_index":841,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["source.videowidth",{"_index":840,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["sourceheight",{"_index":818,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["sourcewidth",{"_index":822,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["space",{"_index":542,"title":{},"body":{"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/OddsComponent.html":{}}}],["specific",{"_index":1461,"title":{},"body":{"interfaces/SportEvent.html":{},"interfaces/SportsBook-1.html":{}}}],["specified",{"_index":453,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["spinner",{"_index":1408,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner'},{'name",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["spinner.component.html",{"_index":1410,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner.component.scss",{"_index":1409,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.component",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["spinnercomponent",{"_index":216,"title":{"components/SpinnerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sport",{"_index":533,"title":{},"body":{"interfaces/Competitor.html":{},"components/OddsComponent.html":{},"interfaces/OddsResponse.html":{},"interfaces/SportEvent.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["sportbook.name",{"_index":1048,"title":{},"body":{"components/OddsComponent.html":{}}}],["sportbooks",{"_index":882,"title":{},"body":{"interfaces/LineOdds.html":{},"components/OddsComponent.html":{},"interfaces/SportsBook.html":{}}}],["sportdataprovidercode",{"_index":1450,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["sportdataprovidermatchid",{"_index":1451,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["sportevent",{"_index":994,"title":{"interfaces/SportEvent.html":{}},"body":{"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"interfaces/SportEvent.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"coverage.html":{}}}],["sporteventid",{"_index":999,"title":{},"body":{"components/OddsComponent.html":{},"injectables/OddsService.html":{}}}],["sportevents",{"_index":396,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{}}}],["sporteventsresponse",{"_index":1254,"title":{},"body":{"components/SnapComponent.html":{}}}],["sports",{"_index":883,"title":{},"body":{"interfaces/LineOdds.html":{},"interfaces/OddsResponse.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{}}}],["sportsbook",{"_index":881,"title":{"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{}},"body":{"interfaces/LineOdds.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"coverage.html":{}}}],["sportsbook._links?.redirect?.href",{"_index":1173,"title":{},"body":{"injectables/OddsService.html":{}}}],["sportsbook.name",{"_index":1169,"title":{},"body":{"injectables/OddsService.html":{}}}],["sportsbook.offers",{"_index":1166,"title":{},"body":{"injectables/OddsService.html":{}}}],["sportsbookline",{"_index":1472,"title":{"interfaces/SportsBookLine.html":{}},"body":{"interfaces/SportsBook.html":{},"interfaces/SportsBookLine.html":{},"coverage.html":{}}}],["sportsbooklines",{"_index":1201,"title":{},"body":{"injectables/OddsService.html":{}}}],["sportsbooklines.push(converted",{"_index":1200,"title":{},"body":{"injectables/OddsService.html":{}}}],["sportsbooks",{"_index":878,"title":{},"body":{"interfaces/LineOdds.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{}}}],["spread",{"_index":1049,"title":{},"body":{"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"injectables/OddsService.html":{},"interfaces/SportsBookLine.html":{}}}],["spreadodds",{"_index":1483,"title":{},"body":{"interfaces/SportsBookLine.html":{}}}],["spreadurl",{"_index":1484,"title":{},"body":{"interfaces/SportsBookLine.html":{}}}],["stand",{"_index":1745,"title":{},"body":{"components/WebcamComponent.html":{}}}],["start",{"_index":1060,"title":{},"body":{"components/OddsComponent.html":{},"interfaces/OddsResponse.html":{},"interfaces/SportEvent.html":{}}}],["startautosnapwithdelay",{"_index":1234,"title":{},"body":{"components/SnapComponent.html":{}}}],["started",{"_index":1875,"title":{"index.html":{}},"body":{}}],["starts",{"_index":1268,"title":{},"body":{"components/SnapComponent.html":{}}}],["starttime",{"_index":1128,"title":{},"body":{"interfaces/OddsResponse.html":{},"interfaces/SportEvent.html":{}}}],["state",{"_index":299,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["state.store",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["state.store.ts",{"_index":296,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["state.store.ts:16",{"_index":942,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["state.store.ts:17",{"_index":943,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["state.store.ts:20",{"_index":311,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["state.store.ts:21",{"_index":319,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["state.store.ts:22",{"_index":948,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["state.store.ts:26",{"_index":314,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["state.store.ts:30",{"_index":941,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["state.store.ts:31",{"_index":305,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["state.store.ts:38",{"_index":940,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["state.store.ts:39",{"_index":303,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["statements",{"_index":1777,"title":{},"body":{"coverage.html":{}}}],["states/app",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["states/media",{"_index":1316,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["stet",{"_index":752,"title":{},"body":{"components/HelpComponent.html":{}}}],["stops",{"_index":1284,"title":{},"body":{"components/SnapComponent.html":{}}}],["storage",{"_index":1817,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["stores",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["stream",{"_index":807,"title":{},"body":{"injectables/ImageManipulationService.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["string",{"_index":17,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"interfaces/Link.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsResponse.html":{},"interfaces/Player.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"interfaces/TranslationEntries.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"miscellaneous/functions.html":{}}}],["stroke",{"_index":1743,"title":{},"body":{"components/WebcamComponent.html":{}}}],["structure",{"_index":875,"title":{},"body":{"interfaces/LineOdds.html":{},"injectables/OddsService.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLine.html":{}}}],["style",{"_index":1144,"title":{},"body":{"injectables/OddsService.html":{}}}],["stylelint",{"_index":1753,"title":{},"body":{"components/WebcamComponent.html":{}}}],["styles",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["styleurls",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["subject",{"_index":1293,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["subscribe((appstate",{"_index":1324,"title":{},"body":{"components/SnapComponent.html":{}}}],["subscribe((mediadevicestate",{"_index":1327,"title":{},"body":{"components/SnapComponent.html":{}}}],["subscribe((response",{"_index":1341,"title":{},"body":{"components/SnapComponent.html":{}}}],["subscribes",{"_index":1287,"title":{},"body":{"components/SnapComponent.html":{}}}],["subscribetostatestores",{"_index":1235,"title":{},"body":{"components/SnapComponent.html":{}}}],["subscriptions",{"_index":1263,"title":{},"body":{"components/SnapComponent.html":{}}}],["successful",{"_index":359,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{}}}],["super('no",{"_index":1530,"title":{},"body":{"classes/TvSearchNoResultError.html":{}}}],["support",{"_index":1934,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":963,"title":{},"body":{"injectables/NotificationService.html":{}}}],["svg",{"_index":1487,"title":{},"body":{"components/SwitchSvgComponent.html":{},"components/TriggerSvgComponent.html":{},"modules.html":{}}}],["svg'},{'name",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["svgs/switch.svg.component",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["svgs/trigger.svg.component",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["switch",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/LoggerService.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["switch.svg",{"_index":1489,"title":{},"body":{"components/SwitchSvgComponent.html":{}}}],["switch.svg.styles.scss",{"_index":1488,"title":{},"body":{"components/SwitchSvgComponent.html":{}}}],["switched",{"_index":1735,"title":{},"body":{"components/WebcamComponent.html":{}}}],["switchmap",{"_index":1153,"title":{},"body":{"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/TvSearchService.html":{}}}],["switchmap((accesstoken",{"_index":1158,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["switchmap((webcamimage",{"_index":1355,"title":{},"body":{"components/SnapComponent.html":{}}}],["switchsvgcomponent",{"_index":218,"title":{"components/SwitchSvgComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["switchtonextwebcam",{"_index":1636,"title":{},"body":{"components/WebcamComponent.html":{}}}],["sx",{"_index":838,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["sy",{"_index":839,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["system",{"_index":1466,"title":{},"body":{"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["tab",{"_index":1015,"title":{},"body":{"components/OddsComponent.html":{}}}],["table",{"_index":1836,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1835,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1270,"title":{},"body":{"components/SnapComponent.html":{}}}],["take(1",{"_index":1338,"title":{},"body":{"components/SnapComponent.html":{}}}],["taken",{"_index":1282,"title":{},"body":{"components/SnapComponent.html":{}}}],["takes",{"_index":405,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["takesnapshot",{"_index":1236,"title":{},"body":{"components/SnapComponent.html":{}}}],["takeuntil",{"_index":1304,"title":{},"body":{"components/SnapComponent.html":{}}}],["takeuntil(race(this.destroyed",{"_index":1346,"title":{},"body":{"components/SnapComponent.html":{}}}],["takeuntil(this.destroyed",{"_index":1339,"title":{},"body":{"components/SnapComponent.html":{}}}],["takimata",{"_index":757,"title":{},"body":{"components/HelpComponent.html":{}}}],["taking",{"_index":1646,"title":{},"body":{"components/WebcamComponent.html":{}}}],["tap",{"_index":1391,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["tap((response",{"_index":1595,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["target",{"_index":1120,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{},"interfaces/SportsBookLine.html":{}}}],["technical",{"_index":1246,"title":{},"body":{"components/SnapComponent.html":{}}}],["template",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["templated",{"_index":888,"title":{},"body":{"interfaces/Link.html":{}}}],["templateurl",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["tempor",{"_index":734,"title":{},"body":{"components/HelpComponent.html":{}}}],["test",{"_index":1916,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1915,"title":{},"body":{"index.html":{}}}],["text",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SwitchSvgComponent.html":{},"interfaces/TranslationEntries.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["then((manipulatedimage",{"_index":1717,"title":{},"body":{"components/WebcamComponent.html":{}}}],["third",{"_index":1219,"title":{},"body":{"interfaces/Quadrangle2d.html":{}}}],["this.#tvsearchresult",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["this._state.asobservable",{"_index":318,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["this._state.next(state",{"_index":340,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["this.accesstoken",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.accesstokenprovider",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["this.analyticsservice.sdkinitialized",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["this.analyticsservice.snapviewclosed",{"_index":1329,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.analyticsservice.snapviewopened",{"_index":1321,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.analyticsservice.snapviewsnap",{"_index":1397,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["this.analyticsservice.snapviewsnapfailed(duration",{"_index":1403,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["this.analyticsservice.snapviewsnapnegative(duration",{"_index":1402,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["this.analyticsservice.snapviewsnapresult(date.now",{"_index":1405,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["this.apiurl",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["this.applicationconfigservice.emitcloseevent",{"_index":680,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.applicationconfigservice.emitloggerevent(loglevel",{"_index":934,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.applicationconfigservice.emitresultsevent(sporteventsresponse.resultentries[0",{"_index":1349,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.applicationconfigservice.getapiurl",{"_index":1156,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["this.applicationconfigservice.getloglevel",{"_index":935,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.applicationconfigservice.getsnapdimension",{"_index":1716,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.applicationconfigservice.isautosnapenabled",{"_index":1318,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["this.applicationconfigservice.isvibrateenabled",{"_index":969,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.applicationconfigservice.setconfig",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["this.appstate",{"_index":1325,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.appstatestore",{"_index":1322,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.appstatestore.dispatch(appstate.device_no_camera",{"_index":1708,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.appstatestore.dispatch(appstate.device_no_permission",{"_index":1730,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.appstatestore.dispatch(appstate.show_help",{"_index":1358,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.appstatestore.dispatch(appstate.show_odds",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["this.appstatestore.dispatch(appstate.snap_failed",{"_index":1352,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.appstatestore.dispatch(appstate.snap_in_progress",{"_index":1353,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.appstatestore.dispatch(appstate.snap_no_results",{"_index":1351,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.appstatestore.dispatch(appstate.snap_ready",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{}}}],["this.authservice.requestaccesstoken().pipe",{"_index":1157,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["this.autosnap",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["this.autosnap_delay",{"_index":465,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.autosnap_delay_initial",{"_index":464,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.autosnap_max_dimension",{"_index":462,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.category",{"_index":643,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.category}/${this.label}/${action",{"_index":658,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.centercontentonzoom",{"_index":1709,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.closecallback",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["this.config",{"_index":454,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.accesstokenprovider",{"_index":459,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.apiurl",{"_index":468,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.autosnap",{"_index":460,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.closecallback",{"_index":470,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.language",{"_index":466,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.logcallback(fromloglevel(loglevel",{"_index":469,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.loglevel",{"_index":467,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.resultscallback(resultentry",{"_index":471,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.vibrate",{"_index":472,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.console.debug(...data",{"_index":926,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.console.error(...data",{"_index":933,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.console.info(...data",{"_index":929,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.console.warn(...data",{"_index":931,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.converttoamericanodds(outcome.odds",{"_index":1187,"title":{},"body":{"injectables/OddsService.html":{}}}],["this.createimagefromcanvas(canvas",{"_index":852,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["this.createsnapscreenheaders(accesstoken",{"_index":1593,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["this.crop(source",{"_index":843,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["this.currenttimestamp",{"_index":1606,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["this.debugimagemanipulations",{"_index":1718,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.destroyed$.complete",{"_index":1331,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.destroyed$.next",{"_index":1330,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.document.createelement('canvas",{"_index":846,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["this.downscale(preferredwidth",{"_index":845,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["this.drawdebugimage(manipulatedimage.blob",{"_index":1719,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.getstate().pipe",{"_index":944,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["this.getstate().pipe(map((state",{"_index":312,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["this.getviewfinder",{"_index":1714,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.handleerror(error",{"_index":1335,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.handlesuccess(response",{"_index":1334,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.hasmultiplewebcams",{"_index":1705,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.hasvalidaccesstoken",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.hasvibrationapi",{"_index":970,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.http.get(`${this.baseurl}/sport/events/${sporteventid}/odds/lines",{"_index":1159,"title":{},"body":{"injectables/OddsService.html":{}}}],["this.http.post(`${this.baseurl}${url",{"_index":1592,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["this.imageasdataurl",{"_index":1726,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.imagemanipulationservice",{"_index":1712,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.injector",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["this.isaboveloglevel(loglevel",{"_index":923,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.isautosnapenabled",{"_index":461,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.isgoogleanalytics",{"_index":637,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.isgoogletagmanager",{"_index":639,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.istokenexpired",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.label",{"_index":646,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.language",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["this.lineodds",{"_index":1039,"title":{},"body":{"components/OddsComponent.html":{}}}],["this.loading",{"_index":1031,"title":{},"body":{"components/OddsComponent.html":{}}}],["this.loadlineodds(changes.tvsearchresultentry.currentvalue.sportevent.id",{"_index":1030,"title":{},"body":{"components/OddsComponent.html":{}}}],["this.loadsportevents().subscribe",{"_index":1333,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.loadsportevents(true).pipe",{"_index":1343,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.location.reload",{"_index":1359,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.log(loglevel.debug",{"_index":919,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.log(loglevel.error",{"_index":920,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.log(loglevel.info",{"_index":922,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.log(loglevel.warn",{"_index":921,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logcallback",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["this.logger.debug(`update",{"_index":1610,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["this.logger.error('failed",{"_index":650,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"components/WebcamComponent.html":{}}}],["this.logger.error('image",{"_index":867,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["this.logger.info('camera",{"_index":1734,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.logger.info('received",{"_index":1720,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.logger.info('tracked",{"_index":641,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.maplineoddsresponse(response",{"_index":1164,"title":{},"body":{"injectables/OddsService.html":{}}}],["this.mediadevicestate",{"_index":1328,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.mediadevicestatestore",{"_index":1326,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.mediadevicestatestore.dispatch(mediadevicestate.device_camera_ready",{"_index":1733,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.mediadevicestatestore.dispatch(mediadevicestate.device_no_camera",{"_index":1707,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.mediadevicestatestore.dispatch(mediadevicestate.device_no_permission",{"_index":1729,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.mediadevicestatestore.webcamisready",{"_index":1336,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.name",{"_index":1531,"title":{},"body":{"classes/TvSearchNoResultError.html":{}}}],["this.navigator.vibrate(200",{"_index":971,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.navigator?.vibrate",{"_index":972,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.nextwebcam.asobservable",{"_index":1681,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.nextwebcam.next(true",{"_index":1732,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.noresults",{"_index":1032,"title":{},"body":{"components/OddsComponent.html":{}}}],["this.notificationservice.notify",{"_index":1348,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.oddsservice.gamelineoddsbysporteventid(sporteventid).subscribe",{"_index":1033,"title":{},"body":{"components/OddsComponent.html":{}}}],["this.omitundefinedproperties(applicationconfig",{"_index":455,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.onlineoddsloaded(lineodds",{"_index":1038,"title":{},"body":{"components/OddsComponent.html":{}}}],["this.onlineoddsloadfailed",{"_index":1037,"title":{},"body":{"components/OddsComponent.html":{}}}],["this.pinchzoomcomponent.scale",{"_index":1715,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.registerautosnap",{"_index":1319,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.resultscallback",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["this.scale",{"_index":1739,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.setupanalytics",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["this.setupapplicationconfig",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["this.setuptranslations",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["this.shouldcrop(scalefactor",{"_index":842,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["this.shoulddownscale(preferredwidth",{"_index":844,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["this.snap('/tv",{"_index":1588,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["this.snap_max_dimension",{"_index":463,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.snapoddsfacade.autosearchsport(webcamimage.blob",{"_index":1356,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.snapoddsfacade.searchsport(webcamimage.blob",{"_index":1357,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.snapshot",{"_index":1347,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.snapshot$.next",{"_index":1332,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.startautosnapwithdelay",{"_index":1340,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.state",{"_index":338,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["this.subscribetostatestores",{"_index":1320,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.timelag",{"_index":1587,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["this.tokenexpirationdate",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.trackevent('snapsdkinit",{"_index":664,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.trackevent('snapviewclose",{"_index":670,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.trackevent('snapviewopen",{"_index":665,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.trackevent('snapviewsnap",{"_index":666,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.trackevent('snapviewsnapfail",{"_index":668,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.trackevent('snapviewsnapnegative",{"_index":669,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.trackevent('snapviewsnapresult",{"_index":667,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.trackgoogleanalyticsevent(action",{"_index":638,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.trackgoogletagmanagerevent(action",{"_index":640,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.translateservice.use(this.applicationconfigservice.getlanguage",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["this.tvsearchresult",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["this.tvsearchservice.autosearchsport(imagedata",{"_index":1406,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["this.tvsearchservice.searchsport(imagedata).pipe",{"_index":1400,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["this.updatetimelag(response",{"_index":1596,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["this.updatetoken(accesstoken",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.vibrate",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["this.viewfinder.nativeelement",{"_index":1721,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.webcamcomponent.nativevideoelement",{"_index":1713,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.webcamcomponent.triggersnapshot()).pipe",{"_index":1354,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.webcamcomponentelement.nativeelement",{"_index":1722,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.window.open(redirecturl",{"_index":1027,"title":{},"body":{"components/OddsComponent.html":{}}}],["through",{"_index":1435,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["throw",{"_index":1599,"title":{},"body":{"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["throwerror",{"_index":1392,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["throwerror(error",{"_index":1404,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["throws",{"_index":1710,"title":{},"body":{"components/WebcamComponent.html":{}}}],["time",{"_index":556,"title":{},"body":{"classes/FileTranslateLoader.html":{},"interfaces/OddsResponse.html":{},"interfaces/SportEvent.html":{},"injectables/TvSearchService.html":{}}}],["timelag",{"_index":1549,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["timer",{"_index":1305,"title":{},"body":{"components/SnapComponent.html":{}}}],["timer(this.applicationconfigservice.getautosnapdelay(true)).pipe",{"_index":1342,"title":{},"body":{"components/SnapComponent.html":{}}}],["timestamp",{"_index":1545,"title":{},"body":{"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{}}}],["timestamp/by",{"_index":1591,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["timestampref",{"_index":1544,"title":{},"body":{"interfaces/TvSearchResultEntry.html":{}}}],["tiny",{"_index":1368,"title":{},"body":{"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["title",{"_index":659,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{}}}],["toggles",{"_index":1671,"title":{},"body":{"components/WebcamComponent.html":{}}}],["token",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{}}}],["token's",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["token.ts",{"_index":7,"title":{},"body":{"interfaces/AccessToken.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token_type",{"_index":16,"title":{},"body":{"interfaces/AccessToken.html":{}}}],["tokenexpirationdate",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokenrefreshoffset",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokens/console",{"_index":917,"title":{},"body":{"injectables/LoggerService.html":{}}}],["tokens/document",{"_index":834,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["tokens/navigator",{"_index":967,"title":{},"body":{"injectables/NotificationService.html":{}}}],["tologlevel",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tologlevel(loglevel",{"_index":1873,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tologlevel(this.loglevel",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["took",{"_index":1586,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["tools",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["tools.button",{"_index":709,"title":{},"body":{"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{}}}],["tools.media",{"_index":696,"title":{},"body":{"components/HeaderComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["top",{"_index":693,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["total",{"_index":1051,"title":{},"body":{"components/OddsComponent.html":{}}}],["tournament",{"_index":1452,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["track",{"_index":622,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["trackevent",{"_index":593,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["trackevent(action",{"_index":617,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["trackgoogleanalyticsevent",{"_index":594,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["trackgoogleanalyticsevent(action",{"_index":624,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["trackgoogletagmanagerevent",{"_index":595,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["trackgoogletagmanagerevent(action",{"_index":627,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["tracking/google",{"_index":1396,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["tracks",{"_index":619,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["transform",{"_index":1427,"title":{},"body":{"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["translate",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"classes/FileTranslateLoader.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["translate/core",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/FileTranslateLoader.html":{},"dependencies.html":{}}}],["translateloader",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"classes/FileTranslateLoader.html":{}}}],["translatemodule",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule.forroot",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["translating",{"_index":1493,"title":{},"body":{"interfaces/TranslationEntries.html":{}}}],["translation",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"classes/FileTranslateLoader.html":{}}}],["translation_entries_de",{"_index":551,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["translation_entries_en",{"_index":549,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["translationentries",{"_index":567,"title":{"interfaces/TranslationEntries.html":{}},"body":{"classes/FileTranslateLoader.html":{},"interfaces/TranslationEntries.html":{},"coverage.html":{}}}],["translations",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"classes/FileTranslateLoader.html":{}}}],["transparent",{"_index":1098,"title":{},"body":{"components/OddsComponent.html":{}}}],["transport",{"_index":655,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["tree",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["tried",{"_index":1283,"title":{},"body":{"components/SnapComponent.html":{}}}],["tries",{"_index":1272,"title":{},"body":{"components/SnapComponent.html":{}}}],["trigger",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["trigger'},{'name",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["trigger.component.html",{"_index":1503,"title":{},"body":{"components/TriggerComponent.html":{}}}],["trigger.component.scss",{"_index":1502,"title":{},"body":{"components/TriggerComponent.html":{}}}],["trigger.svg",{"_index":1515,"title":{},"body":{"components/TriggerSvgComponent.html":{}}}],["trigger/trigger.component",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["triggercomponent",{"_index":221,"title":{"components/TriggerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["triggered",{"_index":1383,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["triggers",{"_index":382,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["triggersnapshot",{"_index":1637,"title":{},"body":{"components/WebcamComponent.html":{}}}],["triggersvgcomponent",{"_index":223,"title":{"components/TriggerSvgComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["true",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{},"components/OddsComponent.html":{},"injectables/TvSearchService.html":{}}}],["try",{"_index":636,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{}}}],["ts",{"_index":1546,"title":{},"body":{"interfaces/TvSearchResultEntry.html":{}}}],["tslib",{"_index":1858,"title":{},"body":{"dependencies.html":{}}}],["turned",{"_index":1675,"title":{},"body":{"components/WebcamComponent.html":{}}}],["tutorial",{"_index":1933,"title":{},"body":{"index.html":{}}}],["tv",{"_index":1446,"title":{},"body":{"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["tvchannel",{"_index":1468,"title":{"interfaces/TvChannel.html":{}},"body":{"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResultEntry.html":{},"coverage.html":{}}}],["tvchannelid",{"_index":1453,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["tvchannellogo",{"_index":1469,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["tvsearchnoresulterror",{"_index":1306,"title":{"classes/TvSearchNoResultError.html":{}},"body":{"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"classes/TvSearchNoResultError.html":{},"injectables/TvSearchService.html":{},"coverage.html":{}}}],["tvsearchresult",{"_index":43,"title":{"interfaces/TvSearchResult.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"interfaces/TvSearchResult.html":{},"injectables/TvSearchService.html":{},"coverage.html":{}}}],["tvsearchresult(tvsearchresultentry",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["tvsearchresultentry",{"_index":117,"title":{"interfaces/TvSearchResultEntry.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"components/OddsComponent.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"coverage.html":{}}}],["tvsearchresults",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["tvsearchservice",{"_index":1378,"title":{"injectables/TvSearchService.html":{}},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"coverage.html":{}}}],["two",{"_index":564,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["type",{"_index":18,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1940,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":651,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"injectables/NotificationService.html":{}}}],["typings",{"_index":1889,"title":{},"body":{"index.html":{}}}],["u",{"_index":1057,"title":{},"body":{"components/OddsComponent.html":{}}}],["undefined",{"_index":429,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["under",{"_index":1125,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{},"injectables/OddsService.html":{}}}],["understand",{"_index":1922,"title":{},"body":{"index.html":{}}}],["unique",{"_index":1463,"title":{},"body":{"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{}}}],["unit",{"_index":1914,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/LoggerService.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["unless",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["up",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/SnapComponent.html":{}}}],["updates",{"_index":1288,"title":{},"body":{"components/SnapComponent.html":{}}}],["updatetimelag",{"_index":1551,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["updatetimelag(response",{"_index":1575,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["updatetoken",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatetoken(authresponse",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["url",{"_index":1014,"title":{},"body":{"components/OddsComponent.html":{},"interfaces/SportsBookLine.html":{},"interfaces/TvChannel.html":{},"injectables/TvSearchService.html":{}}}],["use",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"index.html":{}}}],["useclass",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"interfaces/LineOdds.html":{},"injectables/MediaDeviceStateStore.html":{},"components/SnapComponent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLine.html":{},"interfaces/TvSearchResult.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["user",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ApplicationConfigService.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/SportsBook.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{}}}],["userfeedbackmessagecomponent",{"_index":224,"title":{"components/UserFeedbackMessageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":626,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"index.html":{}}}],["ut",{"_index":736,"title":{},"body":{"components/HelpComponent.html":{}}}],["valid",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["validity",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/Point2d.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/SportsBookLine.html":{},"components/TriggerComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":428,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["var",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["variable",{"_index":1800,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1944,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":323,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{},"interfaces/SportsBook.html":{},"miscellaneous/enumerations.html":{}}}],["verification",{"_index":1676,"title":{},"body":{"components/WebcamComponent.html":{}}}],["verifies",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{},"components/WebcamComponent.html":{}}}],["vero",{"_index":744,"title":{},"body":{"components/HelpComponent.html":{}}}],["via",{"_index":1918,"title":{},"body":{"index.html":{}}}],["vibrate",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/NotificationService.html":{},"miscellaneous/variables.html":{}}}],["vibration",{"_index":964,"title":{},"body":{"injectables/NotificationService.html":{}}}],["video",{"_index":806,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{},"index.html":{}}}],["videooptions",{"_index":1627,"title":{},"body":{"components/WebcamComponent.html":{}}}],["videoscale",{"_index":853,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["view",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"components/SnapComponent.html":{},"interfaces/TranslationEntries.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{}}}],["viewchild",{"_index":1299,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["viewchild('viewfinder",{"_index":1693,"title":{},"body":{"components/WebcamComponent.html":{}}}],["viewchild(ngxwebcamcomponent",{"_index":1696,"title":{},"body":{"components/WebcamComponent.html":{}}}],["viewchild(pinchzoomcomponent",{"_index":1682,"title":{},"body":{"components/WebcamComponent.html":{}}}],["viewchild(webcamcomponent",{"_index":1297,"title":{},"body":{"components/SnapComponent.html":{}}}],["viewfinder",{"_index":797,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["viewfinders",{"_index":1556,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["viewport",{"_index":1557,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["visibility",{"_index":1097,"title":{},"body":{"components/OddsComponent.html":{}}}],["visible",{"_index":803,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["void",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["voluptua",{"_index":743,"title":{},"body":{"components/HelpComponent.html":{}}}],["warn",{"_index":892,"title":{},"body":{"injectables/LoggerService.html":{},"components/UserFeedbackMessageComponent.html":{},"miscellaneous/enumerations.html":{}}}],["warn(...data",{"_index":915,"title":{},"body":{"injectables/LoggerService.html":{}}}],["web",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["webbrowser",{"_index":1276,"title":{},"body":{"components/SnapComponent.html":{}}}],["webcam",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["webcam.component.html",{"_index":1622,"title":{},"body":{"components/WebcamComponent.html":{}}}],["webcam.component.scss",{"_index":1621,"title":{},"body":{"components/WebcamComponent.html":{}}}],["webcam/webcam.component",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"components/SnapComponent.html":{}}}],["webcamcomponent",{"_index":228,"title":{"components/WebcamComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["webcamcomponentelement",{"_index":1628,"title":{},"body":{"components/WebcamComponent.html":{}}}],["webcaminiterror",{"_index":1661,"title":{},"body":{"components/WebcamComponent.html":{}}}],["webcamisready",{"_index":938,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["webcammodule",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["webcams",{"_index":805,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["webcamutil",{"_index":1700,"title":{},"body":{"components/WebcamComponent.html":{}}}],["webcamutil.getavailablevideoinputs().then((mediadevices",{"_index":1703,"title":{},"body":{"components/WebcamComponent.html":{}}}],["weight",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["whenever",{"_index":350,"title":{},"body":{"interfaces/ApplicationConfig.html":{}}}],["white",{"_index":704,"title":{},"body":{"components/HeaderComponent.html":{}}}],["whole",{"_index":1659,"title":{},"body":{"components/WebcamComponent.html":{}}}],["width",{"_index":762,"title":{},"body":{"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"components/OddsComponent.html":{},"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{}}}],["win",{"_index":1123,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{},"injectables/OddsService.html":{}}}],["window",{"_index":986,"title":{},"body":{"components/OddsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["workspace",{"_index":1923,"title":{},"body":{"index.html":{}}}],["wrapper",{"_index":1757,"title":{},"body":{"components/WebcamComponent.html":{},"index.html":{}}}],["written",{"_index":353,"title":{},"body":{"interfaces/ApplicationConfig.html":{}}}],["x",{"_index":1209,"title":{},"body":{"interfaces/Point2d.html":{}}}],["xl",{"_index":702,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["xs",{"_index":1083,"title":{},"body":{"components/OddsComponent.html":{},"components/WebcamComponent.html":{}}}],["y",{"_index":1210,"title":{},"body":{"interfaces/Point2d.html":{}}}],["yes",{"_index":623,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"components/OddsComponent.html":{}}}],["yyyy",{"_index":1458,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["z",{"_index":1760,"title":{},"body":{"components/WebcamComponent.html":{}}}],["zone.js",{"_index":1860,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"components/WebcamComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["zoomed",{"_index":810,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["zooming",{"_index":1650,"title":{},"body":{"components/WebcamComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AccessToken.html":{"url":"interfaces/AccessToken.html","title":"interface - AccessToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccessToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/auth/access-token.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access_token\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            authorities\n                                        \n                                \n                                \n                                        \n                                            expires_in\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            refresh_token\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scope\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            token_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        authorities\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authorities:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires_in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expires_in:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refresh_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scope:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AccessToken {\n  access_token: string;\n  token_type?: string;\n  refresh_token?: string;\n  expires_in: number;\n  scope?: string;\n  authorities?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-sdk\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                #tvSearchResult\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeOddsView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setupAnalytics\n                            \n                            \n                                    Private\n                                setupApplicationConfig\n                            \n                            \n                                    Private\n                                setupTranslations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                accessTokenProvider\n                            \n                            \n                                apiUrl\n                            \n                            \n                                autoSnap\n                            \n                            \n                                closeCallback\n                            \n                            \n                                language\n                            \n                            \n                                logCallback\n                            \n                            \n                                logLevel\n                            \n                            \n                                resultsCallback\n                            \n                            \n                                tvSearchResult\n                            \n                            \n                                vibrate\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    tvSearchResult\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationConfigService: ApplicationConfigService, translateService: TranslateService, analyticsService: GoogleAnalyticsService, appStateStore: AppStateStore)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/app/app.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        analyticsService\n                                                  \n                                                        \n                                                                        GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appStateStore\n                                                  \n                                                        \n                                                                        AppStateStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        accessTokenProvider\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        apiUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoSnap\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        closeCallback\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        language\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logCallback\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logLevel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        resultsCallback\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tvSearchResult\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        vibrate\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeOddsView\n                        \n                    \n                \n            \n            \n                \ncloseOddsView()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/app.component.ts:104\n                \n            \n\n\n            \n                \n                    Clears the stored tvSearchResults and renders the view to snap an image.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/app.component.ts:60\n                \n            \n\n\n            \n                \n                    Sets up the applicationConfig, translations and analytics.\nCalled when the SDK is added to the DOM\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setupAnalytics\n                        \n                    \n                \n            \n            \n                \n                    \n                    setupAnalytics()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/app.component.ts:70\n                \n            \n\n\n            \n                \n                    Trigger analytics method that SDK has been initialized\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setupApplicationConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setupApplicationConfig()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/app.component.ts:87\n                \n            \n\n\n            \n                \n                    Configure the application based on the component inputs and assigns the callbacks.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setupTranslations\n                        \n                    \n                \n            \n            \n                \n                    \n                    setupTranslations()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/app.component.ts:78\n                \n            \n\n\n            \n                \n                    Register the translation service for the configured language\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        #tvSearchResult\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TvSearchResultEntry | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/app.component.ts:21\n                        \n                    \n\n            \n                \n                    Holds the value of the TvSearchResultEntry for loading and rendering the lineOdds\nOnly to be accessed by property accessors.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tvSearchResult\n                    \n                \n\n                \n                    \n                        gettvSearchResult()\n                    \n                \n                            \n                                \n                                    Defined in apps/snapodds/src/app/app.component.ts:45\n                                \n                            \n                    \n                        \n                                Returns the TvSearchResult, so that it can be used inside the template\n\n\n                        \n                    \n\n                \n                    \n                        settvSearchResult(tvSearchResultEntry: TvSearchResultEntry | null)\n                    \n                \n                            \n                                \n                                    Defined in apps/snapodds/src/app/app.component.ts:34\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            tvSearchResultEntry\n                                                    \n                                                            \n                                                                        TvSearchResultEntry | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AccessToken, TvSearchResultEntry } from '@response/typings';\nimport { ApplicationConfigService } from '../services/config/application-config.service';\nimport { toLogLevel } from '../services/logger/log-level';\nimport { GoogleAnalyticsService } from '../services/tracking/google-analytics.service';\nimport { AppState, AppStateStore } from '../states/app-state.store';\n\n@Component({\n  selector: 'snapodds-sdk',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  /**\n   * Holds the value of the TvSearchResultEntry for loading and rendering the lineOdds\n   * Only to be accessed by property accessors.\n   *\n   * @private\n   */\n  #tvSearchResult: TvSearchResultEntry | null = null;\n\n  @Input() apiUrl?: string;\n  @Input() autoSnap?: boolean;\n  @Input() language?: string;\n  @Input() logLevel?: string;\n  @Input() vibrate?: boolean;\n  @Input() accessTokenProvider?: () => Promise;\n  @Input() logCallback?: (logLevel: string, data: unknown[]) => void;\n  @Input() resultsCallback?: (tvSearchResult: TvSearchResultEntry) => void;\n  @Input() closeCallback?: () => void;\n\n  @Input()\n  set tvSearchResult(tvSearchResultEntry: TvSearchResultEntry | null) {\n    this.#tvSearchResult = tvSearchResultEntry;\n\n    if (tvSearchResultEntry) {\n      this.appStateStore.dispatch(AppState.SHOW_ODDS);\n    }\n  }\n\n  /**\n   * Returns the TvSearchResult, so that it can be used inside the template\n   */\n  get tvSearchResult() {\n    return this.#tvSearchResult;\n  }\n\n  constructor(\n    private readonly applicationConfigService: ApplicationConfigService,\n    private readonly translateService: TranslateService,\n    private readonly analyticsService: GoogleAnalyticsService,\n    readonly appStateStore: AppStateStore\n  ) {}\n\n  /**\n   * Sets up the applicationConfig, translations and analytics.\n   * Called when the SDK is added to the DOM\n   */\n  ngOnInit(): void {\n    this.setupApplicationConfig();\n    this.setupTranslations();\n    this.setupAnalytics();\n  }\n\n  /**\n   * Trigger analytics method that SDK has been initialized\n   * @private\n   */\n  private setupAnalytics(): void {\n    this.analyticsService.sdkInitialized();\n  }\n\n  /**\n   * Register the translation service for the configured language\n   * @private\n   */\n  private setupTranslations(): void {\n    this.translateService.use(this.applicationConfigService.getLanguage());\n  }\n\n  /**\n   * Configure the application based on the component inputs and assigns the callbacks.\n   *\n   * @private\n   */\n  private setupApplicationConfig(): void {\n    this.applicationConfigService.setConfig({\n      apiUrl: this.apiUrl,\n      autoSnap: this.autoSnap,\n      language: this.language,\n      logLevel: toLogLevel(this.logLevel),\n      vibrate: this.vibrate,\n      accessTokenProvider: this.accessTokenProvider,\n      closeCallback: this.closeCallback,\n      logCallback: this.logCallback,\n      resultsCallback: this.resultsCallback,\n    });\n  }\n\n  /**\n   * Clears the stored tvSearchResults and renders the view to snap an image.\n   */\n  closeOddsView(): void {\n    this.tvSearchResult = null;\n    this.appStateStore.dispatch(AppState.SNAP_READY);\n  }\n}\n\n    \n\n    \n        \n\n\n  \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @use 'tools';\n@use 'settings';\n\n:host {\n  background-color: settings.$color-background;\n\n  color: settings.$color-text;\n  display: flex;\n  flex: 1;\n  font-family: var(--snapodds__font-family);\n  font-size: 1em;\n  font-weight: 500;\n  line-height: 1.3;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nAppModule -->\n\nContentComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHelpComponent\n\nHelpComponent\n\nAppModule -->\n\nHelpComponent->AppModule\n\n\n\n\n\nOddsComponent\n\nOddsComponent\n\nAppModule -->\n\nOddsComponent->AppModule\n\n\n\n\n\nSnapComponent\n\nSnapComponent\n\nAppModule -->\n\nSnapComponent->AppModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nAppModule -->\n\nSpinnerComponent->AppModule\n\n\n\n\n\nSwitchSvgComponent\n\nSwitchSvgComponent\n\nAppModule -->\n\nSwitchSvgComponent->AppModule\n\n\n\n\n\nTriggerComponent\n\nTriggerComponent\n\nAppModule -->\n\nTriggerComponent->AppModule\n\n\n\n\n\nTriggerSvgComponent\n\nTriggerSvgComponent\n\nAppModule -->\n\nTriggerSvgComponent->AppModule\n\n\n\n\n\nUserFeedbackMessageComponent\n\nUserFeedbackMessageComponent\n\nAppModule -->\n\nUserFeedbackMessageComponent->AppModule\n\n\n\n\n\nWebcamComponent\n\nWebcamComponent\n\nAppModule -->\n\nWebcamComponent->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/snapodds/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ContentComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HelpComponent\n                        \n                        \n                            OddsComponent\n                        \n                        \n                            SnapComponent\n                        \n                        \n                            SpinnerComponent\n                        \n                        \n                            SwitchSvgComponent\n                        \n                        \n                            TriggerComponent\n                        \n                        \n                            TriggerSvgComponent\n                        \n                        \n                            UserFeedbackMessageComponent\n                        \n                        \n                            WebcamComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoBootstrap\n                        \n                    \n                \n            \n            \n                \nngDoBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/app.module.ts:61\n                \n            \n\n\n            \n                \n                    Register the angular component as web-component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { DoBootstrap, Injector, NgModule } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { PinchZoomModule } from 'ngx-pinch-zoom';\nimport { WebcamModule } from 'ngx-webcam';\nimport { FileTranslateLoader } from '../services/i18n/file-translate-loader';\n\nimport { AppComponent } from './app.component';\nimport { ContentComponent } from './content/content.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HeaderComponent } from './header/header.component';\nimport { HelpComponent } from './help/help.component';\nimport { OddsComponent } from './odds/odds.component';\nimport { SnapComponent } from './snap/snap.component';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { SwitchSvgComponent } from './svgs/switch.svg.component';\nimport { TriggerSvgComponent } from './svgs/trigger.svg.component';\nimport { TriggerComponent } from './trigger/trigger.component';\nimport { UserFeedbackMessageComponent } from './user-feedback-message/user-feedback-message.component';\nimport { WebcamComponent } from './webcam/webcam.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SnapComponent,\n    OddsComponent,\n    WebcamComponent,\n    SpinnerComponent,\n    HeaderComponent,\n    ContentComponent,\n    FooterComponent,\n    HelpComponent,\n    TriggerComponent,\n    TriggerSvgComponent,\n    SwitchSvgComponent,\n    UserFeedbackMessageComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    WebcamModule,\n    PinchZoomModule,\n    TranslateModule.forRoot({\n      defaultLanguage: 'en',\n      loader: {\n        provide: TranslateLoader,\n        useClass: FileTranslateLoader,\n      },\n    }),\n  ],\n  entryComponents: [AppComponent],\n})\nexport class AppModule implements DoBootstrap {\n  constructor(private injector: Injector) {}\n\n  /**\n   * Register the angular component as web-component.\n   */\n  ngDoBootstrap() {\n    const el = createCustomElement(AppComponent, { injector: this.injector });\n    customElements.define('snapodds-sdk', el);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppStateStore.html":{"url":"injectables/AppStateStore.html","title":"injectable - AppStateStore","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppStateStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/states/app-state.store.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _state\n                            \n                            \n                                    Readonly\n                                showHelp$\n                            \n                            \n                                    Private\n                                    Readonly\n                                state$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dispatch\n                            \n                            \n                                getState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dispatch\n                        \n                    \n                \n            \n            \n                \ndispatch(state: AppState)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/states/app-state.store.ts:39\n                \n            \n\n\n            \n                \n                    Trigger an AppState change\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                AppState\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getState\n                        \n                    \n                \n            \n            \n                \ngetState()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/states/app-state.store.ts:31\n                \n            \n\n\n            \n                \n                    Listen to changes on the AppState\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/states/app-state.store.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        showHelp$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.getState().pipe(map((state) => state === AppState.SHOW_HELP))\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/states/app-state.store.ts:26\n                        \n                    \n\n            \n                \n                    Emits when the HelpPage should be shown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._state.asObservable()\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/states/app-state.store.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { map, Observable, ReplaySubject } from 'rxjs';\n\n/**\n * The various AppStates which are used for determining which view to render\n */\nexport enum AppState {\n  SHOW_HELP = 'SHOW_HELP',\n  SHOW_ODDS = 'SHOW_ODDS',\n  SNAP_READY = 'SNAP_READY',\n  SNAP_IN_PROGRESS = 'SNAP_IN_PROGRESS',\n  SNAP_FAILED = 'SNAP_FAILED',\n  SNAP_NO_RESULTS = 'SNAP_NO_RESULTS',\n  DEVICE_NO_CAMERA = 'DEVICE_NO_CAMERA',\n  DEVICE_NO_PERMISSION = 'DEVICE_NO_PERMISSION',\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AppStateStore {\n  private readonly _state = new ReplaySubject(1);\n  private readonly state$: Observable = this._state.asObservable();\n\n  /**\n   * Emits when the HelpPage should be shown\n   */\n  readonly showHelp$ = this.getState().pipe(map((state) => state === AppState.SHOW_HELP));\n\n  /**\n   * Listen to changes on the AppState\n   */\n  getState(): Observable {\n    return this.state$;\n  }\n\n  /**\n   * Trigger an AppState change\n   * @param state\n   */\n  dispatch(state: AppState): void {\n    this._state.next(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationConfig.html":{"url":"interfaces/ApplicationConfig.html","title":"interface - ApplicationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApplicationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/config/application-config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessTokenProvider\n                                        \n                                \n                                \n                                        \n                                            apiUrl\n                                        \n                                \n                                \n                                        \n                                            autoSnap\n                                        \n                                \n                                \n                                        \n                                            closeCallback\n                                        \n                                \n                                \n                                        \n                                            language\n                                        \n                                \n                                \n                                        \n                                            logCallback\n                                        \n                                \n                                \n                                        \n                                            logLevel\n                                        \n                                \n                                \n                                        \n                                            resultsCallback\n                                        \n                                \n                                \n                                        \n                                            vibrate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessTokenProvider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessTokenProvider:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Callback executed when the view is closed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        apiUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The apiUrl to be used for snapping\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        autoSnap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autoSnap:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Enable or disable autoSnapping\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        closeCallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closeCallback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Callback executed whenever a log event inside the SDK has been written.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The view language used for i18n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logCallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logCallback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Provider used to retrieve an AccessToken from outside the SDK\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logLevel:         LogLevel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LogLevel\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Enable if the device should vibrate if a snap has been successful\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultsCallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resultsCallback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Callback executed when snapping has returned a TvSearchResultEntry.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vibrate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vibrate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The logLevel to be reported by the SDK\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AccessToken, TvSearchResultEntry } from '@response/typings';\nimport { LogLevel } from '../services/logger/log-level';\n\nexport interface ApplicationConfig {\n  /**\n   * The apiUrl to be used for snapping\n   */\n  apiUrl: string;\n  /**\n   * Enable or disable autoSnapping\n   */\n  autoSnap: boolean;\n  /**\n   * The view language used for i18n\n   */\n  language: string;\n  /**\n   * The logLevel to be reported by the SDK\n   */\n  vibrate: boolean;\n  /**\n   * Enable if the device should vibrate if a snap has been successful\n   */\n  logLevel: LogLevel;\n  /**\n   * Provider used to retrieve an AccessToken from outside the SDK\n   */\n  logCallback: (logLevel: string, data: unknown[]) => void;\n  /**\n   * Callback executed whenever a log event inside the SDK has been written.\n   */\n  closeCallback: () => void;\n  /**\n   * Callback executed when snapping has returned a TvSearchResultEntry.\n   */\n  resultsCallback: (tvSearchResult: TvSearchResultEntry) => void;\n  /**\n   * Callback executed when the view is closed\n   */\n  accessTokenProvider: () => Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationConfigService.html":{"url":"injectables/ApplicationConfigService.html","title":"injectable - ApplicationConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/config/application-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                AUTOSNAP_DELAY\n                            \n                            \n                                    Private\n                                    Readonly\n                                AUTOSNAP_DELAY_INITIAL\n                            \n                            \n                                    Private\n                                    Readonly\n                                AUTOSNAP_MAX_DIMENSION\n                            \n                            \n                                    Private\n                                config\n                            \n                            \n                                    Private\n                                    Readonly\n                                SNAP_MAX_DIMENSION\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitCloseEvent\n                            \n                            \n                                emitLoggerEvent\n                            \n                            \n                                emitResultsEvent\n                            \n                            \n                                getApiUrl\n                            \n                            \n                                getAutoSnapDelay\n                            \n                            \n                                getLanguage\n                            \n                            \n                                getLogLevel\n                            \n                            \n                                getSnapDimension\n                            \n                            \n                                isAutoSnapEnabled\n                            \n                            \n                                isVibrateEnabled\n                            \n                            \n                                    Private\n                                omitUndefinedProperties\n                            \n                            \n                                setConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    accessTokenProvider\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        emitCloseEvent\n                        \n                    \n                \n            \n            \n                \nemitCloseEvent()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:113\n                \n            \n\n\n            \n                \n                    Triggers the closeEvent callback\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emitLoggerEvent\n                        \n                    \n                \n            \n            \n                \nemitLoggerEvent(logLevel: LogLevel, data: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:106\n                \n            \n\n\n            \n                \n                    Triggers the logger event on the corresponding callback\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logLevel\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emitResultsEvent\n                        \n                    \n                \n            \n            \n                \nemitResultsEvent(resultEntry: TvSearchResultEntry)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:121\n                \n            \n\n\n            \n                \n                    Triggers the resultCallback with the given TvSearchResultEntry\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resultEntry\n                                    \n                                                TvSearchResultEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiUrl\n                        \n                    \n                \n            \n            \n                \ngetApiUrl()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:97\n                \n            \n\n\n            \n                \n                    Returns the apiUrl to perform the search of SportEvents and loading of LineOdds against\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAutoSnapDelay\n                        \n                    \n                \n            \n            \n                \ngetAutoSnapDelay(initial: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:76\n                \n            \n\n\n            \n                \n                    Returns the delay used to programmatically trigger a snap\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    initial\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        : the initial delay takes longer in order for the user to correctly align the camera\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLanguage\n                        \n                    \n                \n            \n            \n                \ngetLanguage()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:83\n                \n            \n\n\n            \n                \n                    Returns the configured language\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLogLevel\n                        \n                    \n                \n            \n            \n                \ngetLogLevel()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:90\n                \n            \n\n\n            \n                \n                    Returns the configured logLevel\n\n\n                    \n                        Returns :         LogLevel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSnapDimension\n                        \n                    \n                \n            \n            \n                \ngetSnapDimension()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:68\n                \n            \n\n\n            \n                \n                    Returns the dimension for resizing an image based on the autoSnap mode\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAutoSnapEnabled\n                        \n                    \n                \n            \n            \n                \nisAutoSnapEnabled()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:61\n                \n            \n\n\n            \n                \n                    Determines if autoSnap is enabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isVibrateEnabled\n                        \n                    \n                \n            \n            \n                \nisVibrateEnabled()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:128\n                \n            \n\n\n            \n                \n                    Determines if the device should vibrate if a match has been found or not\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        omitUndefinedProperties\n                        \n                    \n                \n            \n            \n                \n                    \n                    omitUndefinedProperties(config: Partial)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:44\n                \n            \n\n\n            \n                \n                    Filter out entries which values are undefined\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Partial\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConfig\n                        \n                    \n                \n            \n            \n                \nsetConfig(applicationConfig: Partial)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:35\n                \n            \n\n\n            \n                \n                    Merges the given applicationConfig with the default values.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    applicationConfig\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        AUTOSNAP_DELAY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1000\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/config/application-config.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        AUTOSNAP_DELAY_INITIAL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2500\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/config/application-config.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        AUTOSNAP_MAX_DIMENSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 512\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/config/application-config.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_APPLICATION_CONFIG\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/config/application-config.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        SNAP_MAX_DIMENSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1024\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/config/application-config.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        accessTokenProvider\n                    \n                \n\n                \n                    \n                        getaccessTokenProvider()\n                    \n                \n                            \n                                \n                                    Defined in apps/snapodds/src/services/config/application-config.service.ts:54\n                                \n                            \n                    \n                        \n                                Returns the accessTokenProvider callback\n\n\n                                \n                                    Returns :         Promise\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AccessToken, TvSearchResultEntry } from '@response/typings';\nimport { noop } from 'rxjs';\nimport { ApplicationConfig } from '../../config/application-config';\nimport { fromLogLevel, LogLevel } from '../logger/log-level';\n\n/**\n * Default application configuration\n */\nconst DEFAULT_APPLICATION_CONFIG: ApplicationConfig = {\n  apiUrl: 'https://api.us.snapscreen.com',\n  language: 'en',\n  autoSnap: false,\n  logLevel: LogLevel.SILENT,\n  vibrate: false,\n  logCallback: noop,\n  closeCallback: noop,\n  resultsCallback: noop,\n  accessTokenProvider: () => Promise.reject('No accessTokenProvider specified'),\n};\n\n@Injectable({ providedIn: 'root' })\nexport class ApplicationConfigService {\n  private config: ApplicationConfig = DEFAULT_APPLICATION_CONFIG;\n\n  private readonly SNAP_MAX_DIMENSION = 1024;\n  private readonly AUTOSNAP_MAX_DIMENSION = 512;\n  private readonly AUTOSNAP_DELAY_INITIAL = 2500;\n  private readonly AUTOSNAP_DELAY = 1000;\n\n  /**\n   * Merges the given applicationConfig with the default values.\n   * @param applicationConfig\n   */\n  setConfig(applicationConfig: Partial): void {\n    this.config = { ...DEFAULT_APPLICATION_CONFIG, ...this.omitUndefinedProperties(applicationConfig) };\n  }\n\n  /**\n   * Filter out entries which values are undefined\n   * @param config\n   * @private\n   */\n  private omitUndefinedProperties(config: Partial): Partial {\n    return Object.entries(config).reduce(\n      (acc, [key, value]) => (value === undefined ? acc : { ...acc, [key]: value }),\n      {}\n    );\n  }\n\n  /**\n   * Returns the accessTokenProvider callback\n   */\n  get accessTokenProvider(): () => Promise {\n    return this.config.accessTokenProvider;\n  }\n\n  /**\n   * Determines if autoSnap is enabled\n   */\n  isAutoSnapEnabled(): boolean {\n    return this.config.autoSnap;\n  }\n\n  /**\n   * Returns the dimension for resizing an image based on the autoSnap mode\n   */\n  getSnapDimension(): number {\n    return this.isAutoSnapEnabled() ? this.AUTOSNAP_MAX_DIMENSION : this.SNAP_MAX_DIMENSION;\n  }\n\n  /**\n   * Returns the delay used to programmatically trigger a snap\n   * @param initial: the initial delay takes longer in order for the user to correctly align the camera\n   */\n  getAutoSnapDelay(initial: boolean = false): number {\n    return initial ? this.AUTOSNAP_DELAY_INITIAL : this.AUTOSNAP_DELAY;\n  }\n\n  /**\n   * Returns the configured language\n   */\n  getLanguage(): string {\n    return this.config.language;\n  }\n\n  /**\n   * Returns the configured logLevel\n   */\n  getLogLevel(): LogLevel {\n    return this.config.logLevel;\n  }\n\n  /**\n   * Returns the apiUrl to perform the search of SportEvents and loading of LineOdds against\n   */\n  getApiUrl(): string {\n    return this.config.apiUrl;\n  }\n\n  /**\n   * Triggers the logger event on the corresponding callback\n   * @param logLevel\n   * @param data\n   */\n  emitLoggerEvent(logLevel: LogLevel, data: unknown[]): void {\n    this.config.logCallback(fromLogLevel(logLevel), data);\n  }\n\n  /**\n   * Triggers the closeEvent callback\n   */\n  emitCloseEvent(): void {\n    this.config.closeCallback();\n  }\n\n  /**\n   * Triggers the resultCallback with the given TvSearchResultEntry\n   * @param resultEntry\n   */\n  emitResultsEvent(resultEntry: TvSearchResultEntry): void {\n    this.config.resultsCallback(resultEntry);\n  }\n\n  /**\n   * Determines if the device should vibrate if a match has been found or not\n   */\n  isVibrateEnabled(): boolean {\n    return this.config.vibrate;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                accessToken\n                            \n                            \n                                    Private\n                                    Optional\n                                tokenExpirationDate\n                            \n                            \n                                    Private\n                                    Readonly\n                                tokenRefreshOffset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAccessToken\n                            \n                            \n                                hasValidAccessToken\n                            \n                            \n                                    Private\n                                isTokenExpired\n                            \n                            \n                                requestAccessToken\n                            \n                            \n                                updateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationConfigService: ApplicationConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAccessToken\n                        \n                    \n                \n            \n            \n                \ngetAccessToken()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/auth/auth.service.ts:45\n                \n            \n\n\n            \n                \n                    Returns the currently stored accessToken.\n\n\n                    \n                        Returns :     string | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasValidAccessToken\n                        \n                    \n                \n            \n            \n                \nhasValidAccessToken()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/auth/auth.service.ts:52\n                \n            \n\n\n            \n                \n                    Verifies the token validity based on the expiration date.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isTokenExpired\n                        \n                    \n                \n            \n            \n                \n                    \n                    isTokenExpired()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/auth/auth.service.ts:60\n                \n            \n\n\n            \n                \n                    True unless the token's lifetime has been reached.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestAccessToken\n                        \n                    \n                \n            \n            \n                \nrequestAccessToken()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/auth/auth.service.ts:22\n                \n            \n\n\n            \n                \n                    When no accessToken is present the callback to request an accessToken is invoked.\nIf a valid accessToken is present it will be returned instead.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateToken\n                        \n                    \n                \n            \n            \n                \nupdateToken(authResponse: AccessToken)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/auth/auth.service.ts:36\n                \n            \n\n\n            \n                \n                    Stores the current accessToken and sets the token's expiration date.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    authResponse\n                                    \n                                                AccessToken\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : response from with the token is extracted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/auth/auth.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        tokenExpirationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/auth/auth.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        tokenRefreshOffset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 60\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/auth/auth.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AccessToken } from '@response/typings';\nimport { addSeconds, differenceInSeconds } from 'date-fns';\nimport { from, map, Observable, of } from 'rxjs';\nimport { ApplicationConfigService } from '../config/application-config.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private accessToken?: string;\n  private tokenExpirationDate?: Date;\n\n  private readonly tokenRefreshOffset = 60;\n\n  constructor(private readonly applicationConfigService: ApplicationConfigService) {}\n\n  /**\n   * When no accessToken is present the callback to request an accessToken is invoked.\n   * If a valid accessToken is present it will be returned instead.\n   */\n  requestAccessToken(): Observable {\n    if (this.hasValidAccessToken()) {\n      return of(this.accessToken as string);\n    }\n\n    return from(this.applicationConfigService.accessTokenProvider()).pipe(\n      map((accessToken) => this.updateToken(accessToken))\n    );\n  }\n\n  /**\n   * Stores the current accessToken and sets the token's expiration date.\n   * @param authResponse: response from with the token is extracted\n   */\n  updateToken(authResponse: AccessToken): string {\n    this.tokenExpirationDate = addSeconds(new Date(), authResponse.expires_in);\n    this.accessToken = authResponse.access_token;\n    return this.accessToken;\n  }\n\n  /**\n   * Returns the currently stored accessToken.\n   */\n  getAccessToken(): string | undefined {\n    return this.accessToken;\n  }\n\n  /**\n   * Verifies the token validity based on the expiration date.\n   */\n  hasValidAccessToken(): boolean {\n    return Boolean(this.accessToken) && !this.isTokenExpired();\n  }\n\n  /**\n   * True unless the token's lifetime has been reached.\n   * @private\n   */\n  private isTokenExpired(): boolean {\n    return differenceInSeconds(this.tokenExpirationDate ?? new Date(), new Date()) \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Competitor.html":{"url":"interfaces/Competitor.html","title":"interface - Competitor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Competitor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/odds/competitor.ts\n        \n\n\n            \n                Description\n            \n            \n                An entity represents a competitor of a sport event.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the sport event competitor.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the competitor.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Competitor {\n  /**\n   * The id of the sport event competitor.\n   */\n  id: number;\n\n  /**\n   * The name of the competitor.\n   */\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent.html":{"url":"components/ContentComponent.html","title":"component - ContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/content/content.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-content\n            \n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'snapodds-content',\n  template: '',\n  styleUrls: ['./content.component.scss'],\n})\nexport class ContentComponent {}\n\n    \n\n\n    \n                \n                    ./content.component.scss\n                \n                :host {\n  display: flex;\n  flex: auto;\n  flex-direction: column;\n  justify-content: space-between;\n  overflow: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileTranslateLoader.html":{"url":"classes/FileTranslateLoader.html","title":"class - FileTranslateLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileTranslateLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/i18n/file-translate-loader.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        TranslateLoader\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                translations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        translations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n    ['en', TRANSLATION_ENTRIES_EN],\n    ['de', TRANSLATION_ENTRIES_DE],\n  ])\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/i18n/file-translate-loader.ts:12\n                        \n                    \n\n            \n                \n                    Map of translation entries which are inlined during build time, so they don't have to be externally loaded\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTranslation\n                        \n                    \n                \n            \n            \n                \ngetTranslation(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/i18n/file-translate-loader.ts:21\n                \n            \n\n\n            \n                \n                    Retrieves the translation entries for the given language\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : two letter language code\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TranslateLoader } from '@ngx-translate/core';\nimport { Observable, of } from 'rxjs';\nimport { TranslationEntries } from './translation-entries';\nimport { TRANSLATION_ENTRIES_DE } from './translation-entries.de';\nimport { TRANSLATION_ENTRIES_EN } from './translation-entries.en';\n\nexport class FileTranslateLoader implements TranslateLoader {\n  /**\n   * Map of translation entries which are inlined during build time, so they don't have to be externally loaded\n   * @private\n   */\n  private readonly translations: Map = new Map([\n    ['en', TRANSLATION_ENTRIES_EN],\n    ['de', TRANSLATION_ENTRIES_DE],\n  ]);\n\n  /**\n   * Retrieves the translation entries for the given language\n   * @param lang: two letter language code\n   */\n  getTranslation(lang: string): Observable {\n    return of(this.translations.get(lang));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'snapodds-footer',\n  template: '',\n  styleUrls: ['./footer.component.scss'],\n})\nexport class FooterComponent {}\n\n    \n\n\n    \n                \n                    ./footer.component.scss\n                \n                @use 'settings';\n\n:host {\n  display: flex;\n  flex-direction: column;\n  flex-grow: 0;\n  margin-bottom: settings.$spacing-lg;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleAnalyticsService.html":{"url":"injectables/GoogleAnalyticsService.html","title":"injectable - GoogleAnalyticsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleAnalyticsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/tracking/google-analytics.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                category\n                            \n                            \n                                    Readonly\n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isGoogleAnalytics\n                            \n                            \n                                    Private\n                                isGoogleTagManager\n                            \n                            \n                                sdkInitialized\n                            \n                            \n                                snapViewClosed\n                            \n                            \n                                snapViewOpened\n                            \n                            \n                                snapViewSnap\n                            \n                            \n                                snapViewSnapFailed\n                            \n                            \n                                snapViewSnapNegative\n                            \n                            \n                                snapViewSnapResult\n                            \n                            \n                                    Private\n                                trackEvent\n                            \n                            \n                                    Private\n                                trackGoogleAnalyticsEvent\n                            \n                            \n                                    Private\n                                trackGoogleTagManagerEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isGoogleAnalytics\n                        \n                    \n                \n            \n            \n                \n                    \n                    isGoogleAnalytics()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:45\n                \n            \n\n\n            \n                \n                    Checks if GoogleAnalytics is globally available\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isGoogleTagManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    isGoogleTagManager()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:67\n                \n            \n\n\n            \n                \n                    Checks if GoogleTagManager is globally available\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sdkInitialized\n                        \n                    \n                \n            \n            \n                \nsdkInitialized()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snapViewClosed\n                        \n                    \n                \n            \n            \n                \nsnapViewClosed()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snapViewOpened\n                        \n                    \n                \n            \n            \n                \nsnapViewOpened()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snapViewSnap\n                        \n                    \n                \n            \n            \n                \nsnapViewSnap()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snapViewSnapFailed\n                        \n                    \n                \n            \n            \n                \nsnapViewSnapFailed(duration: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snapViewSnapNegative\n                        \n                    \n                \n            \n            \n                \nsnapViewSnapNegative(duration: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snapViewSnapResult\n                        \n                    \n                \n            \n            \n                \nsnapViewSnapResult(duration: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        trackEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    trackEvent(action: string, value?: number | string)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:22\n                \n            \n\n\n            \n                \n                    Tracks analytics based on which analytics service is available.\nFallback to the LoggerService if neither GoogleAnalytics nor GoogleTagManager is available-\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the action of the event to track\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        : the value of the event to track\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        trackGoogleAnalyticsEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    trackGoogleAnalyticsEvent(action: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:54\n                \n            \n\n\n            \n                \n                    Track Event using GoogleAnalytics\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        trackGoogleTagManagerEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    trackGoogleTagManagerEvent(action: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:76\n                \n            \n\n\n            \n                \n                    Track Event using GoogleTagManager\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SnapscreenSDK'\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'JS/1.0.0'\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LoggerService } from '../logger/logger.service';\n\ndeclare const gtag: Function;\ndeclare const ga: Function;\n\n@Injectable({ providedIn: 'root' })\nexport class GoogleAnalyticsService {\n  readonly category = 'SnapscreenSDK';\n  readonly label = 'JS/1.0.0';\n\n  constructor(private readonly logger: LoggerService) {}\n\n  /**\n   * Tracks analytics based on which analytics service is available.\n   * Fallback to the LoggerService if neither GoogleAnalytics nor GoogleTagManager is available-\n   * @param action: the action of the event to track\n   * @param value: the value of the event to track\n   * @private\n   */\n  private trackEvent(action: string, value?: number | string) {\n    try {\n      if (this.isGoogleAnalytics()) {\n        this.trackGoogleAnalyticsEvent(action);\n      } else if (this.isGoogleTagManager()) {\n        this.trackGoogleTagManagerEvent(action);\n      } else {\n        this.logger.info('Tracked event', {\n          eventCategory: this.category,\n          eventAction: action,\n          eventLabel: this.label,\n          eventValue: value,\n        });\n      }\n    } catch (error) {\n      this.logger.error('Failed to track event', error);\n    }\n  }\n\n  /**\n   * Checks if GoogleAnalytics is globally available\n   * @private\n   */\n  private isGoogleAnalytics(): boolean {\n    return typeof ga === 'function';\n  }\n\n  /**\n   * Track Event using GoogleAnalytics\n   * @param action\n   * @private\n   */\n  private trackGoogleAnalyticsEvent(action: string): void {\n    ga('send', {\n      hitType: 'pageview',\n      transport: 'beacon',\n      page: `/${this.category}/${this.label}/${action}`,\n      title: `${this.category}: ${action}`,\n    });\n  }\n\n  /**\n   * Checks if GoogleTagManager is globally available\n   * @private\n   */\n  private isGoogleTagManager(): boolean {\n    return typeof gtag === 'function';\n  }\n\n  /**\n   * Track Event using GoogleTagManager\n   * @param action\n   * @private\n   */\n  private trackGoogleTagManagerEvent(action: string): void {\n    gtag('event', 'page_view', {\n      page_path: `/${this.category}/${this.label}/${action}`,\n      page_title: `${this.category}: ${action}`,\n    });\n  }\n\n  sdkInitialized() {\n    this.trackEvent('SnapSdkInit');\n  }\n\n  snapViewOpened() {\n    this.trackEvent('SnapViewOpen');\n  }\n\n  snapViewSnap() {\n    this.trackEvent('SnapViewSnap');\n  }\n\n  snapViewSnapResult(duration: number) {\n    this.trackEvent('SnapViewSnapResult', duration);\n  }\n\n  snapViewSnapFailed(duration: number) {\n    this.trackEvent('SnapViewSnapFail', duration);\n  }\n\n  snapViewSnapNegative(duration: number) {\n    this.trackEvent('SnapViewSnapNegative', duration);\n  }\n\n  snapViewClosed() {\n    this.trackEvent('SnapViewClose');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelSnap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationConfigService: ApplicationConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/app/header/header.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelSnap\n                        \n                    \n                \n            \n            \n                \ncancelSnap()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/header/header.component.ts:15\n                \n            \n\n\n            \n                \n                    Emits the closeEvent on the ApplicationConfigService to signalize that the app should be closed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ApplicationConfigService } from '../../services/config/application-config.service';\n\n@Component({\n  selector: 'snapodds-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent {\n  constructor(private readonly applicationConfigService: ApplicationConfigService) {}\n\n  /**\n   * Emits the closeEvent on the ApplicationConfigService to signalize that the app should be closed.\n   */\n  cancelSnap(): void {\n    this.applicationConfigService.emitCloseEvent();\n  }\n}\n\n    \n\n    \n        \n  {{ 'Snapodds_Action_Cancel' | translate }}\n\n\n  \n\n\n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @use 'settings';\n@use 'tools';\n\n:host {\n  align-items: baseline;\n  border-bottom: 1px solid settings.$color-accent;\n  display: flex;\n  padding: settings.$spacing-base;\n\n  @media (orientation: portrait) {\n    padding-top: settings.$spacing-base * 3;\n  }\n\n  @include tools.media-small--portrait {\n    padding-top: settings.$spacing-base * 2;\n  }\n\n  .c-header {\n    &--left {\n      flex: 1;\n      text-align: left;\n    }\n\n    &--title {\n      flex: 1;\n      font-size: settings.$font-xl;\n      text-align: center;\n      white-space: nowrap;\n    }\n\n    &--right {\n      flex: 1;\n      text-align: right;\n    }\n\n    &--cancel-button {\n      @include tools.button-reset;\n      font-size: settings.$font-base;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'Snapodds_Action_Cancel\\' | translate }}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HelpComponent.html":{"url":"components/HelpComponent.html","title":"component - HelpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HelpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/help/help.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-help\n            \n\n            \n                styleUrls\n                ./help.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./help.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showSnapPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(appStateStore: AppStateStore)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/app/help/help.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appStateStore\n                                                  \n                                                        \n                                                                        AppStateStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        showSnapPage\n                        \n                    \n                \n            \n            \n                \nshowSnapPage()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/help/help.component.ts:15\n                \n            \n\n\n            \n                \n                    Navigate to the Snap Page by setting the corresponding AppState\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AppState, AppStateStore } from '../../states/app-state.store';\n\n@Component({\n  selector: 'snapodds-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.scss'],\n})\nexport class HelpComponent {\n  constructor(private readonly appStateStore: AppStateStore) {}\n\n  /**\n   * Navigate to the Snap Page by setting the corresponding AppState\n   */\n  showSnapPage(): void {\n    this.appStateStore.dispatch(AppState.SNAP_READY);\n  }\n}\n\n    \n\n    \n        \n  {{ 'Snapodds_Title_Help' | translate }}\n  \n    \n      {{ 'Snapodds_Title_Snap_TV' | translate }}\n    \n  \n\n\n\n  \n    Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore\n    magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd\n    gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing\n    elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero\n    eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum\n    dolor sit amet.\n  \n\n\n  \n    {{ 'Snapodds_Action_Close_Help' | translate }}\n  \n\n\n    \n\n    \n                \n                    ./help.component.scss\n                \n                @use 'tools';\n@use 'settings';\n\n$box--width: 4rem;\n\n:host {\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  snapodds-content {\n    padding: settings.$spacing-base;\n  }\n\n  snapodds-footer {\n    padding: settings.$spacing-base settings.$spacing-base 0;\n  }\n\n  button {\n    @include tools.button-reset();\n    font-size: settings.$font-base;\n  }\n\n  .c-help {\n    &__close-button {\n      background-color: settings.$color-primary;\n      color: settings.$color-text-focus;\n      font-size: settings.$font-lg;\n      font-weight: 500;\n      padding: settings.$spacing-base settings.$spacing-lg;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'Snapodds_Title_Help\\' | translate }}            {{ \\'Snapodds_Title_Snap_TV\\' | translate }}            Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore    magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd    gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing    elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero    eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum    dolor sit amet.        {{ \\'Snapodds_Action_Close_Help\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HelpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImageManipulationService.html":{"url":"injectables/ImageManipulationService.html","title":"injectable - ImageManipulationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ImageManipulationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createImageFromCanvas\n                            \n                            \n                                    Private\n                                crop\n                            \n                            \n                                cropAndResizeImage\n                            \n                            \n                                    Private\n                                downscale\n                            \n                            \n                                    Private\n                                shouldCrop\n                            \n                            \n                                    Private\n                                shouldDownscale\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, document: Document)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createImageFromCanvas\n                        \n                    \n                \n            \n            \n                \n                    \n                    createImageFromCanvas(canvas: HTMLCanvasElement, mimeType: string, quality: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts:105\n                \n            \n\n\n            \n                \n                    Converts an canvas element into an image blob with additional image metadata\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        : the canvas element where the image is rendered\n\n                                    \n                                \n                                \n                                    mimeType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'image/jpeg'\n                                    \n\n                                    \n                                        : the mime type of the resulting image\n\n                                    \n                                \n                                \n                                    quality\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0.9\n                                    \n\n                                    \n                                        : the jpeg compression quality\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        crop\n                        \n                    \n                \n            \n            \n                \n                    \n                    crop(source: HTMLVideoElement, viewFinder: HTMLElement, scaleFactor: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts:70\n                \n            \n\n\n            \n                \n                    Crops the part of the image which is visible beneath the viewfinder\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            HTMLVideoElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the webcams video stream\n\n                                    \n                                \n                                \n                                    viewFinder\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the viewfinder from which the image should be cropped\n\n                                    \n                                \n                                \n                                    scaleFactor\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the factor the user has zoomed into the image\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cropAndResizeImage\n                        \n                    \n                \n            \n            \n                \ncropAndResizeImage(source: HTMLVideoElement, viewFinder: HTMLElement, scaleFactor: number, maxDimension: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts:19\n                \n            \n\n\n            \n                \n                    Creates an image from the source based on which part is visible in the viewfinder.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            HTMLVideoElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the webcams video stream\n\n                                    \n                                \n                                \n                                    viewFinder\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the viewfinder from which the image should be cropped\n\n                                    \n                                \n                                \n                                    scaleFactor\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the factor the user has zoomed into the image\n\n                                    \n                                \n                                \n                                    maxDimension\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the max dimension of the resulting image\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        downscale\n                        \n                    \n                \n            \n            \n                \n                    \n                    downscale(sourceWidth: number, sourceHeight: number, maxDimension: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts:155\n                \n            \n\n\n            \n                \n                    Calculates the resized width and height of an image\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceWidth\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sourceHeight\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    maxDimension\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { preferredWidth: number; preferredHeight: number; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        shouldCrop\n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldCrop(scaleFactor: number, source: HTMLVideoElement, viewFinder: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts:59\n                \n            \n\n\n            \n                \n                    Determines if parts of the image should be cropped.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    scaleFactor\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the factor the user has zoomed into the image\n\n                                    \n                                \n                                \n                                    source\n                                    \n                                            HTMLVideoElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the webcams video stream\n\n                                    \n                                \n                                \n                                    viewFinder\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the viewfinder from which the image should be cropped\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        shouldDownscale\n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldDownscale(sourceWidth: number, sourceHeight: number, maxDimension: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts:144\n                \n            \n\n\n            \n                \n                    Determines if an image needs to be resized as it is larger than the max allowed dimension\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceWidth\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sourceHeight\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    maxDimension\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { LoggerService } from '../logger/logger.service';\nimport { DOCUMENT } from '../tokens/document-token';\nimport { ManipulatedImage } from './manipulated-image';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ImageManipulationService {\n  constructor(private readonly logger: LoggerService, @Inject(DOCUMENT) private readonly document: Document) {}\n\n  /**\n   * Creates an image from the `source` based on which part is visible in the viewfinder.\n   * @param source: the webcams video stream\n   * @param viewFinder: the viewfinder from which the image should be cropped\n   * @param scaleFactor: the factor the user has zoomed into the image\n   * @param maxDimension: the max dimension of the resulting image\n   */\n  cropAndResizeImage(\n    source: HTMLVideoElement,\n    viewFinder: HTMLElement,\n    scaleFactor: number,\n    maxDimension: number\n  ): Promise {\n    let sx = 0;\n    let sy = 0;\n    let sourceWidth = source.videoWidth;\n    let sourceHeight = source.videoHeight;\n\n    if (this.shouldCrop(scaleFactor, source, viewFinder)) {\n      ({ sx, sy, sourceWidth, sourceHeight } = this.crop(source, viewFinder, scaleFactor));\n    }\n\n    let preferredWidth = sourceWidth;\n    let preferredHeight = sourceHeight;\n\n    if (this.shouldDownscale(preferredWidth, preferredHeight, maxDimension)) {\n      ({ preferredWidth, preferredHeight } = this.downscale(preferredWidth, preferredHeight, maxDimension));\n    }\n\n    const canvas = this.document.createElement('canvas');\n    canvas.width = preferredWidth;\n    canvas.height = preferredHeight;\n\n    const renderingContext = canvas.getContext('2d');\n    renderingContext?.drawImage(source, sx, sy, sourceWidth, sourceHeight, 0, 0, preferredWidth, preferredHeight);\n\n    return this.createImageFromCanvas(canvas);\n  }\n\n  /**\n   * Determines if parts of the image should be cropped.\n   *\n   * @param scaleFactor: the factor the user has zoomed into the image\n   * @param source: the webcams video stream\n   * @param viewFinder: the viewfinder from which the image should be cropped\n   * @private\n   */\n  private shouldCrop(scaleFactor: number, source: HTMLVideoElement, viewFinder: HTMLElement) {\n    return scaleFactor > 1 || source !== viewFinder;\n  }\n\n  /**\n   * Crops the part of the image which is visible beneath the viewfinder\n   * @param source: the webcams video stream\n   * @param viewFinder: the viewfinder from which the image should be cropped\n   * @param scaleFactor: the factor the user has zoomed into the image\n   * @private\n   */\n  private crop(\n    source: HTMLVideoElement,\n    viewFinder: HTMLElement,\n    scaleFactor: number\n  ): { sx: number; sy: number; sourceWidth: number; sourceHeight: number } {\n    const videoScale = Math.max(source.videoWidth / source.clientWidth, source.videoHeight / source.clientHeight);\n\n    let sourceWidth = Math.floor((viewFinder.clientWidth * videoScale) / scaleFactor);\n    let sourceHeight = Math.floor((viewFinder.clientHeight * videoScale) / scaleFactor);\n\n    let sx = Math.floor((source.videoWidth - sourceWidth) / 2);\n    let sy = Math.floor((source.videoHeight - sourceHeight) / 2);\n\n    if (sx  {\n    return new Promise((resolve, reject) => {\n      try {\n        canvas.toBlob(\n          (blob) => {\n            if (blob) {\n              resolve({\n                blob,\n                mimeType,\n                width: canvas.width,\n                height: canvas.height,\n              });\n            } else {\n              const errorMessage = 'Canvas returned empty blob';\n              this.logger.error('Image manipulation failed', errorMessage);\n              reject(errorMessage);\n            }\n          },\n          mimeType,\n          quality\n        );\n      } catch (error) {\n        this.logger.error('Image manipulation failed', error);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Determines if an image needs to be resized as it is larger than the max allowed dimension\n   * @param sourceWidth\n   * @param sourceHeight\n   * @param maxDimension\n   * @private\n   */\n  private shouldDownscale(sourceWidth: number, sourceHeight: number, maxDimension: number) {\n    return (sourceWidth > sourceHeight && sourceWidth > maxDimension) || sourceHeight > maxDimension;\n  }\n\n  /**\n   * Calculates the resized width and height of an image\n   * @param sourceWidth\n   * @param sourceHeight\n   * @param maxDimension\n   * @private\n   */\n  private downscale(sourceWidth: number, sourceHeight: number, maxDimension: number) {\n    let preferredWidth = sourceWidth;\n    let preferredHeight = sourceHeight;\n\n    if (preferredWidth > preferredHeight && preferredWidth > maxDimension) {\n      preferredHeight = Math.floor((maxDimension * preferredHeight) / preferredWidth);\n      preferredWidth = maxDimension;\n    } else if (preferredHeight > maxDimension) {\n      preferredWidth = Math.floor((maxDimension * preferredWidth) / preferredHeight);\n      preferredHeight = maxDimension;\n    }\n\n    return { preferredWidth, preferredHeight };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LineOdds.html":{"url":"interfaces/LineOdds.html","title":"interface - LineOdds","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LineOdds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/models/line-odds.ts\n        \n\n\n            \n                Description\n            \n            \n                Data structure used for rendering the lineOdds\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            competitors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            players\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sportsBooks\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        competitors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        competitors:         Competitor[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Competitor[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of competitors\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        players\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        players:         Player[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Player[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of players\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sportsBooks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sportsBooks:     SportsBook[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SportsBook[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of sportBooks\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Competitor, Player } from '@response/typings';\nimport { SportsBook } from './sports-book';\n\n/**\n * Data structure used for rendering the lineOdds\n */\nexport interface LineOdds {\n  /**\n   * List of competitors\n   */\n  competitors: Competitor[];\n  /**\n   * List of players\n   */\n  players?: Player[];\n\n  /**\n   * List of sportBooks\n   */\n  sportsBooks?: SportsBook[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Link.html":{"url":"interfaces/Link.html","title":"interface - Link","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Link\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/link.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            href\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            templated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        href\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        href:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        templated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        templated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Link {\n  href: string;\n  templated?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/logger/logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                    Private\n                                isAboveLogLevel\n                            \n                            \n                                    Private\n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationConfigService: ApplicationConfigService, console: Console)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/logger/logger.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        console\n                                                  \n                                                        \n                                                                    Console\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(...data: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/logger/logger.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(...data: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/logger/logger.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(...data: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/logger/logger.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isAboveLogLevel\n                        \n                    \n                \n            \n            \n                \n                    \n                    isAboveLogLevel(logLevel: LogLevel)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/logger/logger.service.ts:66\n                \n            \n\n\n            \n                \n                    Determines if one logLevel's severity is higher than the one configured in the ApplicationConfig\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logLevel\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        log\n                        \n                    \n                \n            \n            \n                \n                    \n                    log(logLevel: LogLevel, ...data: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/logger/logger.service.ts:41\n                \n            \n\n\n            \n                \n                    Based on the configured logLevel only log levels with the same or higher severity will be logged.\nAll logs will be forwarded to the loggerEventCallback\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logLevel\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(...data: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/logger/logger.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { ApplicationConfigService } from '../config/application-config.service';\nimport { CONSOLE } from '../tokens/console-token';\nimport { LogLevel } from './log-level';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoggerService {\n  constructor(\n    private readonly applicationConfigService: ApplicationConfigService,\n    @Inject(CONSOLE) private readonly console: Console\n  ) {}\n\n  debug(...data: unknown[]): void {\n    this.log(LogLevel.DEBUG, ...data);\n  }\n\n  error(...data: unknown[]): void {\n    this.log(LogLevel.ERROR, ...data);\n  }\n\n  warn(...data: unknown[]): void {\n    this.log(LogLevel.WARN, ...data);\n  }\n\n  info(...data: unknown[]): void {\n    this.log(LogLevel.INFO, ...data);\n  }\n\n  /**\n   * Based on the configured logLevel only log levels with the same or higher severity will be logged.\n   * All logs will be forwarded to the loggerEventCallback\n   *\n   * @param logLevel\n   * @param data\n   * @private\n   */\n  private log(logLevel: LogLevel, ...data: unknown[]): void {\n    if (this.isAboveLogLevel(logLevel)) {\n      switch (logLevel) {\n        case LogLevel.DEBUG:\n          this.console.debug(...data);\n          break;\n        case LogLevel.INFO:\n          this.console.info(...data);\n          break;\n        case LogLevel.WARN:\n          this.console.warn(...data);\n          break;\n        case LogLevel.ERROR:\n          this.console.error(...data);\n          break;\n      }\n    }\n    this.applicationConfigService.emitLoggerEvent(logLevel, data);\n  }\n\n  /**\n   * Determines if one logLevel's severity is higher than the one configured in the ApplicationConfig\n   * @param logLevel\n   * @private\n   */\n  private isAboveLogLevel(logLevel: LogLevel): boolean {\n    return logLevel >= this.applicationConfigService.getLogLevel();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaDeviceStateStore.html":{"url":"injectables/MediaDeviceStateStore.html","title":"injectable - MediaDeviceStateStore","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaDeviceStateStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/states/media-device-state.store.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _state\n                            \n                            \n                                    Private\n                                    Readonly\n                                state$\n                            \n                            \n                                    Readonly\n                                webcamIsReady$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dispatch\n                            \n                            \n                                getState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dispatch\n                        \n                    \n                \n            \n            \n                \ndispatch(state: MediaDeviceState)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/states/media-device-state.store.ts:38\n                \n            \n\n\n            \n                \n                    Trigger an MediaDeviceState change\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                MediaDeviceState\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getState\n                        \n                    \n                \n            \n            \n                \ngetState()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/states/media-device-state.store.ts:30\n                \n            \n\n\n            \n                \n                    Listen to changes on the MediaDeviceState\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/states/media-device-state.store.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._state.asObservable()\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/states/media-device-state.store.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        webcamIsReady$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.getState().pipe(\n    filter((state) => state === MediaDeviceState.DEVICE_CAMERA_READY),\n    mapTo(true)\n  )\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/states/media-device-state.store.ts:22\n                        \n                    \n\n            \n                \n                    Emits when a webcam is ready for interaction\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { filter, mapTo, Observable, ReplaySubject } from 'rxjs';\n\n/**\n * The various MediaDeviceState which are used rendering user feedback\n */\nexport enum MediaDeviceState {\n  DEVICE_INIT = 'DEVICE_INIT',\n  DEVICE_CAMERA_READY = 'DEVICE_CAMERA_READY',\n  DEVICE_NO_PERMISSION = 'DEVICE_NO_PERMISSION',\n  DEVICE_NO_CAMERA = 'DEVICE_NO_CAMERA',\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MediaDeviceStateStore {\n  private readonly _state = new ReplaySubject(1);\n  private readonly state$: Observable = this._state.asObservable();\n\n  /**\n   * Emits when a webcam is ready for interaction\n   */\n  readonly webcamIsReady$: Observable = this.getState().pipe(\n    filter((state) => state === MediaDeviceState.DEVICE_CAMERA_READY),\n    mapTo(true)\n  );\n\n  /**\n   * Listen to changes on the MediaDeviceState\n   */\n  getState(): Observable {\n    return this.state$;\n  }\n\n  /**\n   * Trigger an MediaDeviceState change\n   * @param state\n   */\n  dispatch(state: MediaDeviceState): void {\n    this._state.next(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/notification/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hasVibrationApi\n                            \n                            \n                                notify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(navigator: Navigator, applicationConfigService: ApplicationConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/notification/notification.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigator\n                                                  \n                                                        \n                                                                        Navigator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hasVibrationApi\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasVibrationApi()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/notification/notification.service.ts:27\n                \n            \n\n\n            \n                \n                    Determines if the browserApi supports vibration\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notify\n                        \n                    \n                \n            \n            \n                \nnotify()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/notification/notification.service.ts:17\n                \n            \n\n\n            \n                \n                    Lets the device vibrate.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { ApplicationConfigService } from '../config/application-config.service';\nimport { NAVIGATOR } from '../tokens/navigator-token';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotificationService {\n  constructor(\n    @Inject(NAVIGATOR) private readonly navigator: Navigator,\n    private readonly applicationConfigService: ApplicationConfigService\n  ) {}\n\n  /**\n   * Lets the device vibrate.\n   */\n  notify(): void {\n    if (this.applicationConfigService.isVibrateEnabled() && this.hasVibrationApi()) {\n      this.navigator.vibrate(200);\n    }\n  }\n\n  /**\n   * Determines if the browserApi supports vibration\n   * @private\n   */\n  private hasVibrationApi(): boolean {\n    return typeof this.navigator?.vibrate === 'function';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OddsComponent.html":{"url":"components/OddsComponent.html","title":"component - OddsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OddsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/odds/odds.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-odds\n            \n\n            \n                styleUrls\n                ./odds.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./odds.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lineOdds\n                            \n                            \n                                loading\n                            \n                            \n                                noResults\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadLineOdds\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Private\n                                onLineOddsLoaded\n                            \n                            \n                                    Private\n                                onLineOddsLoadFailed\n                            \n                            \n                                openOutcomeRedirectUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tvSearchResultEntry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeOddsView\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(window: Window, oddsService: OddsService)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/app/odds/odds.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        window\n                                                  \n                                                        \n                                                                    Window\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        oddsService\n                                                  \n                                                        \n                                                                        OddsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        tvSearchResultEntry\n                    \n                \n                \n                    \n                        Type :     TvSearchResultEntry | null\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/odds/odds.component.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeOddsView\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/odds/odds.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadLineOdds\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLineOdds(sportEventId: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/odds/odds.component.ts:54\n                \n            \n\n\n            \n                \n                    Loads the lineOdds for a given sportEvent.\nIf sportBooks are found, then lineOdds will be assigned.\nif no sportBooks are found or if the call fails, an error message will be shown.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sportEventId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : The identifier of the sportEvent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/odds/odds.component.ts:40\n                \n            \n\n\n            \n                \n                    Loads the lineOdds when the tvSearchResultEntry has been changed.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : SimpleChanges\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onLineOddsLoaded\n                        \n                    \n                \n            \n            \n                \n                    \n                    onLineOddsLoaded(lineOdds: LineOdds)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/odds/odds.component.ts:76\n                \n            \n\n\n            \n                \n                    Callback when loading of lineOdds was successful\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lineOdds\n                                    \n                                                LineOdds\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : The lineOdds to assign to the template\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onLineOddsLoadFailed\n                        \n                    \n                \n            \n            \n                \n                    \n                    onLineOddsLoadFailed()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/odds/odds.component.ts:86\n                \n            \n\n\n            \n                \n                    Callback when loading of lineOdds failed.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openOutcomeRedirectUrl\n                        \n                    \n                \n            \n            \n                \nopenOutcomeRedirectUrl($event: MouseEvent, redirectUrl?: string | null)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/odds/odds.component.ts:28\n                \n            \n\n\n            \n                \n                    Opens the given URL in a new browser tab.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : MouseEvent\n\n                                    \n                                \n                                \n                                    redirectUrl\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        : The url that should be opened in a new tab\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lineOdds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LineOdds | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/odds/odds.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/odds/odds.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noResults\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/odds/odds.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Inject, Input, OnChanges, Output, SimpleChange } from '@angular/core';\nimport { TvSearchResultEntry } from '@response/typings';\nimport { LineOdds } from '../../models/line-odds';\nimport { OddsService } from '../../services/api/odds.service';\nimport { WINDOW } from '../../services/tokens/window-token';\n\n@Component({\n  selector: 'snapodds-odds',\n  templateUrl: './odds.component.html',\n  styleUrls: ['./odds.component.scss'],\n})\nexport class OddsComponent implements OnChanges {\n  lineOdds: LineOdds | null = null;\n  loading = false;\n  noResults = false;\n\n  @Input() tvSearchResultEntry?: TvSearchResultEntry | null;\n  @Output() closeOddsView: EventEmitter = new EventEmitter();\n\n  constructor(@Inject(WINDOW) private readonly window: Window, private readonly oddsService: OddsService) {}\n\n  /**\n   * Opens the given URL in a new browser tab.\n   *\n   * @param $event: MouseEvent\n   * @param redirectUrl: The url that should be opened in a new tab\n   */\n  openOutcomeRedirectUrl($event: MouseEvent, redirectUrl?: string | null): void {\n    if (redirectUrl) {\n      $event.preventDefault();\n      this.window.open(redirectUrl, '_blank');\n    }\n  }\n\n  /**\n   * Loads the lineOdds when the tvSearchResultEntry has been changed.\n   *\n   * @param changes: SimpleChanges\n   */\n  ngOnChanges(changes: { tvSearchResultEntry: SimpleChange }): void {\n    if (changes.tvSearchResultEntry.currentValue) {\n      this.loadLineOdds(changes.tvSearchResultEntry.currentValue.sportEvent.id);\n    }\n  }\n\n  /**\n   * Loads the lineOdds for a given sportEvent.\n   * If sportBooks are found, then lineOdds will be assigned.\n   * if no sportBooks are found or if the call fails, an error message will be shown.\n   *\n   * @param sportEventId: The identifier of the sportEvent\n   * @private\n   */\n  private loadLineOdds(sportEventId: number): void {\n    this.loading = true;\n    this.noResults = false;\n\n    this.oddsService.gameLineOddsBySportEventId(sportEventId).subscribe({\n      next: (lineOdds) => {\n        if (lineOdds.sportsBooks == undefined || lineOdds.sportsBooks.length === 0) {\n          this.onLineOddsLoadFailed();\n        } else {\n          this.onLineOddsLoaded(lineOdds);\n        }\n      },\n      error: () => this.onLineOddsLoadFailed(),\n    });\n  }\n\n  /**\n   * Callback when loading of lineOdds was successful\n   *\n   * @param lineOdds: The lineOdds to assign to the template\n   * @private\n   */\n  private onLineOddsLoaded(lineOdds: LineOdds): void {\n    this.lineOdds = lineOdds;\n    this.loading = false;\n  }\n\n  /**\n   * Callback when loading of lineOdds failed.\n   *\n   * @private\n   */\n  private onLineOddsLoadFailed(): void {\n    this.lineOdds = null;\n    this.noResults = true;\n    this.loading = false;\n  }\n}\n\n    \n\n    \n        \n  {{ 'Snapodds_Title_Odds' | translate }}\n  \n    \n      {{ 'Snapodds_Title_Snap_TV' | translate }}\n    \n  \n\n\n\n  \n    {{ result.sportEvent.tournament }}\n    {{ result.tvChannel.name }} since {{ result.sportEvent.startTime | date: 'hh:mm a' }}\n  \n\n  \n    \n      {{ competitor.name }}\n      \n    \n  \n\n  \n    \n    {{ 'Snapodds_Lines_Loading' | translate }}\n  \n\n  \n    {{ 'Snapodds_Lines_No_Results' | translate }}\n  \n\n  \n    \n      \n        {{ sportBook.name }}\n\n        \n          Spread\n          Money\n          Total\n        \n      \n\n      \n        \n          {{ lineOdds.competitors[i].name }}\n\n          \n            \n              {{ line.spread }}\n              {{ line.spreadOdds }}\n            \n            \n              \n              {{ line.moneyline }}\n            \n            \n              \n                O\n                U\n                {{ line.overUnder }}\n              \n              {{ line.overUnderOdds }}\n            \n          \n        \n        \n          \n\n          \n            \n            \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./odds.component.scss\n                \n                @use 'tools';\n@use 'settings';\n\n$box--width: 4rem;\n\n:host {\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  button {\n    @include tools.button-reset();\n    font-size: settings.$font-base;\n  }\n\n  snapodds-content {\n    background-color: settings.$color-accent;\n    justify-content: flex-start;\n  }\n\n  .c-feedback {\n    align-items: center;\n    background-color: settings.$color-background;\n    display: flex;\n    font-size: settings.$font-sm;\n    justify-content: center;\n    padding: settings.$spacing-base;\n\n    &__spinner {\n      line-height: 1;\n      margin-right: settings.$spacing-sm;\n    }\n  }\n\n  .c-sport-event {\n    background-color: settings.$color-background;\n    display: flex;\n    font-size: settings.$font-sm;\n    font-weight: 400;\n    justify-content: space-between;\n    margin: 0;\n    padding: settings.$spacing-base;\n\n    &__tournament {\n      font-weight: 700;\n    }\n  }\n\n  .c-competitors {\n    background-color: settings.$color-primary;\n    box-sizing: border-box;\n    color: settings.$color-text-focus;\n    display: flex;\n    flex-direction: column;\n    font-size: settings.$font-base;\n    padding: settings.$spacing-base;\n    text-align: center;\n\n    &__separator {\n      border-bottom: 1px solid rgba(255, 255, 255, 0.4);\n      display: inline-block;\n      margin: 0.5rem 0;\n    }\n  }\n\n  .c-game {\n    border-bottom: 2px solid settings.$color-accent;\n    display: flex;\n    flex-direction: column;\n    padding: settings.$spacing-sm settings.$spacing-base;\n  }\n\n  .c-game-container {\n    background-color: settings.$color-background;\n  }\n\n  .c-game-header {\n    display: flex;\n    justify-content: space-between;\n\n    &__sportbook {\n      font-size: settings.$font-base;\n      font-weight: 700;\n\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    &__lines {\n      align-items: flex-end;\n      display: flex;\n    }\n\n    &__line {\n      box-sizing: border-box;\n      display: flex;\n\n      font-size: settings.$font-xs;\n      font-weight: 400;\n      justify-content: flex-end;\n\n      margin: 0.2rem;\n      width: $box--width;\n    }\n  }\n\n  .c-game-line {\n    color: settings.$color-text;\n    display: flex;\n    justify-content: space-between;\n    text-decoration: none;\n\n    &__competitor {\n      align-items: center;\n      display: flex;\n\n      font-size: settings.$font-sm;\n      font-weight: 700;\n      margin-right: 0.6rem;\n\n      &--separator {\n        border-bottom: 1px solid settings.$color-accent;\n        flex: 1;\n        margin-bottom: 0.4rem;\n        margin-top: 0.4rem;\n      }\n    }\n\n    &__boxes {\n      display: flex;\n    }\n\n    &__box {\n      align-items: flex-end;\n\n      background-color: settings.$color-accent;\n      box-sizing: border-box;\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n      margin: 0.2rem;\n      padding: 0.3rem;\n      width: $box--width;\n\n      &--clickable {\n        cursor: pointer;\n      }\n\n      &--hidden {\n        visibility: hidden;\n      }\n\n      &--separator {\n        background-color: transparent;\n        border-bottom: 1px solid settings.$color-accent;\n        margin: 0.4rem 0.2rem;\n        padding: 0 0.3rem;\n      }\n    }\n\n    &__target {\n      font-size: settings.$font-xs;\n      font-weight: 400;\n      min-height: 0.9rem;\n    }\n\n    &__odds {\n      font-size: settings.$font-base;\n      font-weight: 700;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'Snapodds_Title_Odds\\' | translate }}            {{ \\'Snapodds_Title_Snap_TV\\' | translate }}            {{ result.sportEvent.tournament }}    {{ result.tvChannel.name }} since {{ result.sportEvent.startTime | date: \\'hh:mm a\\' }}              {{ competitor.name }}                      {{ \\'Snapodds_Lines_Loading\\' | translate }}        {{ \\'Snapodds_Lines_No_Results\\' | translate }}                      {{ sportBook.name }}                  Spread          Money          Total                                      {{ lineOdds.competitors[i].name }}                                    {{ line.spread }}              {{ line.spreadOdds }}                                                    {{ line.moneyline }}                                                      O                U                {{ line.overUnder }}                            {{ line.overUnderOdds }}                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OddsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OddsOffer.html":{"url":"interfaces/OddsOffer.html","title":"interface - OddsOffer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OddsOffer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/odds/odds-offer.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a single odds offer.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _links\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            outcomes\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _links:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label of the offer.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outcomes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outcomes:     OddsOfferOutcome[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OddsOfferOutcome[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The possible outcomes of the offer to bet on.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"SPREAD\" | \"MONEYLINE\" | \"OVER_UNDER\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"SPREAD\" | \"MONEYLINE\" | \"OVER_UNDER\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of the offer.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { OddsOfferOutcome } from './odds-offer-outcome';\nimport { Link } from '../link';\n\n/**\n * Represents a single odds offer.\n */\nexport interface OddsOffer {\n  /**\n   * The type of the offer.\n   */\n  type: 'SPREAD' | 'MONEYLINE' | 'OVER_UNDER';\n\n  /**\n   * The label of the offer.\n   */\n  label?: string;\n\n  /**\n   * The possible outcomes of the offer to bet on.\n   */\n  outcomes: OddsOfferOutcome[];\n\n  _links?: {\n    redirect?: Link;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OddsOfferOutcome.html":{"url":"interfaces/OddsOfferOutcome.html","title":"interface - OddsOfferOutcome","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OddsOfferOutcome\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/odds/odds-offer-outcome.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an odds for the outcome of the bet.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _links\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            competitorId\n                                        \n                                \n                                \n                                        \n                                            odds\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            playerId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _links:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        competitorId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        competitorId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The id of the competitor to bet on.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        odds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        odds:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The odds for the given type of the outcome.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playerId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The id of the player to bet on.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The target value for spread or over/under bets.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"WIN\" | \"OVER\" | \"UNDER\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"WIN\" | \"OVER\" | \"UNDER\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of the outcome.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Link } from '../link';\n\n/**\n * Represents an odds for the outcome of the bet.\n */\nexport interface OddsOfferOutcome {\n  /**\n   * The type of the outcome.\n   */\n  type: 'WIN' | 'OVER' | 'UNDER';\n\n  /**\n   * The target value for spread or over/under bets.\n   */\n  target?: number | null;\n\n  /**\n   * The odds for the given type of the outcome.\n   */\n  odds: number;\n\n  /**\n   * The id of the competitor to bet on.\n   */\n  competitorId?: number;\n\n  /**\n   * The id of the player to bet on.\n   */\n  playerId?: number;\n\n  _links?: {\n    redirect?: Link;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OddsResponse.html":{"url":"interfaces/OddsResponse.html","title":"interface - OddsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OddsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/odds/odds-response.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an odds available for the corresponding sport event.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _links\n                                        \n                                \n                                \n                                        \n                                            competitors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            players\n                                        \n                                \n                                \n                                        \n                                            sportsBooks\n                                        \n                                \n                                \n                                        \n                                            startTime\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _links:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        competitors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        competitors:         Competitor[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Competitor[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The competitors of the sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        players\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        players:         Player[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Player[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The players of the sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sportsBooks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sportsBooks:     SportsBook[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SportsBook[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The odds available for the sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The start time of the sport event.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Competitor } from './competitor';\nimport { Player } from './player';\nimport { SportsBook } from './sports-book';\nimport { Link } from '../link';\n\n/**\n * Represents an odds available for the corresponding sport event.\n */\nexport interface OddsResponse {\n  /**\n   * The start time of the sport event.\n   */\n  startTime: string;\n\n  /**\n   * The competitors of the sport event.\n   */\n  competitors: Competitor[];\n\n  /**\n   * The players of the sport event.\n   */\n  players?: Player[];\n\n  /**\n   * The odds available for the sport event.\n   */\n  sportsBooks: SportsBook[];\n\n  _links?: {\n    self?: Link;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OddsService.html":{"url":"injectables/OddsService.html","title":"injectable - OddsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OddsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/api/odds.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                convertToAmericanOdds\n                            \n                            \n                                gameLineOddsBySportEventId\n                            \n                            \n                                    Private\n                                mapLineOddsResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    baseUrl\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService, applicationConfigService: ApplicationConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/api/odds.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        convertToAmericanOdds\n                        \n                    \n                \n            \n            \n                \n                    \n                    convertToAmericanOdds(odds: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/odds.service.ts:116\n                \n            \n\n\n            \n                \n                    Convert the odds to be displayed in american style\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    odds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     null | number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameLineOddsBySportEventId\n                        \n                    \n                \n            \n            \n                \ngameLineOddsBySportEventId(sportEventId: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/odds.service.ts:31\n                \n            \n\n\n            \n                \n                    Search for the LineOdds by a sportEventId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sportEventId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : The identifier of the sportEvent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        mapLineOddsResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapLineOddsResponse(lineOdds: OddsResponse)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/odds.service.ts:47\n                \n            \n\n\n            \n                \n                    Converts the LineOdds into a better data structure for rendering it\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lineOdds\n                                    \n                                                OddsResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineOdds\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        baseUrl\n                    \n                \n\n                \n                    \n                        getbaseUrl()\n                    \n                \n                            \n                                \n                                    Defined in apps/snapodds/src/services/api/odds.service.ts:23\n                                \n                            \n                    \n                        \n                                Retrieve the apiUrl from the applicationConfig\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { OddsResponse } from '@response/typings';\nimport { map, Observable, switchMap } from 'rxjs';\nimport { LineOdds } from '../../models/line-odds';\nimport { SportsBook } from '../../models/sports-book';\nimport { AuthService } from '../auth/auth.service';\nimport { ApplicationConfigService } from '../config/application-config.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OddsService {\n  constructor(\n    private readonly http: HttpClient,\n    private readonly authService: AuthService,\n    private readonly applicationConfigService: ApplicationConfigService\n  ) {}\n\n  /**\n   * Retrieve the apiUrl from the applicationConfig\n   */\n  get baseUrl() {\n    return this.applicationConfigService.getApiUrl();\n  }\n\n  /**\n   * Search for the LineOdds by a sportEventId\n   * @param sportEventId: The identifier of the sportEvent\n   */\n  gameLineOddsBySportEventId(sportEventId: number): Observable {\n    return this.authService.requestAccessToken().pipe(\n      switchMap((accessToken) =>\n        this.http.get(`${this.baseUrl}/sport/events/${sportEventId}/odds/lines`, {\n          headers: new HttpHeaders({ Authorization: `Bearer ${accessToken}` }),\n        })\n      ),\n      map((response) => this.mapLineOddsResponse(response))\n    );\n  }\n\n  /**\n   * Converts the LineOdds into a better data structure for rendering it\n   * @param lineOdds\n   * @private\n   */\n  private mapLineOddsResponse(lineOdds: OddsResponse): LineOdds {\n    const { competitors, players = [], sportsBooks } = lineOdds;\n\n    if (competitors?.length  sportsBook.offers)\n      .map((sportsBook) => {\n        const converted: SportsBook = {\n          name: sportsBook.name,\n          lines: competitors.map(() => ({} as never)),\n          redirectUrl: sportsBook._links?.redirect?.href,\n        };\n\n        sportsBook.offers\n          .filter((offer) => offer.outcomes)\n          .forEach((offer) => {\n            offer.outcomes.forEach((outcome) => {\n              const competitorIndex = competitors.findIndex((competitor) => competitor.id === outcome.competitorId);\n              const hasCompetitor = competitorIndex > -1;\n              const redirectUrl = outcome._links?.redirect?.href;\n\n              if (offer.type === 'MONEYLINE' && outcome.type === 'WIN' && hasCompetitor) {\n                converted.lines[competitorIndex].moneyline = this.convertToAmericanOdds(outcome.odds);\n\n                if (redirectUrl) {\n                  converted.lines[competitorIndex].moneylineUrl = redirectUrl;\n                }\n              } else if (offer.type === 'OVER_UNDER' && outcome.type === 'OVER') {\n                converted.lines[0].overUnder = outcome.target ?? null;\n                converted.lines[0].overUnderOdds = this.convertToAmericanOdds(outcome.odds);\n\n                if (redirectUrl) {\n                  converted.lines[0].overUnderUrl = redirectUrl;\n                }\n              } else if (offer.type === 'OVER_UNDER' && outcome.type === 'UNDER') {\n                converted.lines[1].overUnder = outcome.target ?? null;\n                converted.lines[1].overUnderOdds = this.convertToAmericanOdds(outcome.odds);\n\n                if (redirectUrl) {\n                  converted.lines[1].overUnderUrl = redirectUrl;\n                }\n              } else if (offer.type === 'SPREAD' && outcome.type === 'WIN' && hasCompetitor) {\n                converted.lines[competitorIndex].spread = outcome.target ?? null;\n                converted.lines[competitorIndex].spreadOdds = this.convertToAmericanOdds(outcome.odds);\n\n                if (redirectUrl) {\n                  converted.lines[competitorIndex].spreadUrl = redirectUrl;\n                }\n              }\n            });\n          });\n\n        if (converted.lines.length > 0) {\n          sportsBookLines.push(converted);\n        }\n      });\n\n    return { competitors, players, sportsBooks: sportsBookLines };\n  }\n\n  /**\n   * Convert the odds to be displayed in american style\n   * @param odds\n   * @private\n   */\n  private convertToAmericanOdds(odds: number): null | number {\n    if (!odds || odds \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Player.html":{"url":"interfaces/Player.html","title":"interface - Player","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Player\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/odds/player.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a player of the game.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the player.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the player.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Player {\n  /**\n   * The id of the player.\n   */\n  id: number;\n\n  /**\n   * The name of the player.\n   */\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Point2d.html":{"url":"interfaces/Point2d.html","title":"interface - Point2d","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Point2d\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/tv-search/point2d.ts\n        \n\n\n            \n                Description\n            \n            \n                A point on 2D plane.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The X coordinate value.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The Y coordinate value.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Point2d {\n  /**\n   * The X coordinate value.\n   */\n  x: number;\n\n  /**\n   * The Y coordinate value.\n   */\n  y: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Quadrangle2d.html":{"url":"interfaces/Quadrangle2d.html","title":"interface - Quadrangle2d","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Quadrangle2d\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/tv-search/quadrangle2d.ts\n        \n\n\n            \n                Description\n            \n            \n                A quadrangle on 2D plane.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            a\n                                        \n                                \n                                \n                                        \n                                            b\n                                        \n                                \n                                \n                                        \n                                            c\n                                        \n                                \n                                \n                                        \n                                            d\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        a\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        a:         Point2d\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Point2d\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The first point of this quadrangle.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        b\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        b:         Point2d\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Point2d\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The second point of this quadrangle.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        c\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        c:         Point2d\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Point2d\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The third point of this quadrangle.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        d\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        d:         Point2d\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Point2d\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The fourth point of this quadrangle.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Point2d } from './point2d';\n\n/**\n * A quadrangle on 2D plane.\n */\nexport interface Quadrangle2d {\n  /**\n   * The first point of this quadrangle.\n   */\n  a: Point2d;\n\n  /**\n   * The second point of this quadrangle.\n   */\n  b: Point2d;\n\n  /**\n   * The third point of this quadrangle.\n   */\n  c: Point2d;\n\n  /**\n   * The fourth point of this quadrangle.\n   */\n  d: Point2d;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnapComponent.html":{"url":"components/SnapComponent.html","title":"component - SnapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SnapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/snap/snap.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-snap\n            \n\n            \n                styleUrls\n                ./snap.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./snap.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appState\n                            \n                            \n                                    Private\n                                    Readonly\n                                destroyed$\n                            \n                            \n                                mediaDeviceState\n                            \n                            \n                                    Private\n                                    Readonly\n                                snapshot$\n                            \n                            \n                                webcamComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Private\n                                handleSuccess\n                            \n                            \n                                    Private\n                                loadSportEvents\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                registerAutoSnap\n                            \n                            \n                                reloadPage\n                            \n                            \n                                showHelpPage\n                            \n                            \n                                    Private\n                                startAutoSnapWithDelay\n                            \n                            \n                                    Private\n                                subscribeToStateStores\n                            \n                            \n                                takeSnapshot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, applicationConfigService: ApplicationConfigService, analyticsService: GoogleAnalyticsService, snapOddsFacade: SnapOddsFacade, appStateStore: AppStateStore, mediaDeviceStateStore: MediaDeviceStateStore, notificationService: NotificationService, location: Location)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/app/snap/snap.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        analyticsService\n                                                  \n                                                        \n                                                                        GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snapOddsFacade\n                                                  \n                                                        \n                                                                        SnapOddsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appStateStore\n                                                  \n                                                        \n                                                                        AppStateStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaDeviceStateStore\n                                                  \n                                                        \n                                                                        MediaDeviceStateStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:146\n                \n            \n\n\n            \n                \n                    Depending on the error, either indicates that not SportEvents have been found by the given snapshot\nor that the request could not be processed due to technical errors.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleSuccess\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleSuccess(sportEventsResponse: TvSearchResult)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:135\n                \n            \n\n\n            \n                \n                    Emit the best match (first entry in the response) on the ApplicationConfigService,\nin order to notify other services about a successful snap.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sportEventsResponse\n                                    \n                                                TvSearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadSportEvents\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadSportEvents(autoSnap)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:159\n                \n            \n\n\n            \n                \n                    Retrieves a snapshot from the webcam and then call the respective method to lookup the SportEvent.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    autoSnap\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        : Depending on the mode used to perform the snapshot different methods are executed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:79\n                \n            \n\n\n            \n                \n                    Clean up existing subscriptions.\nTriggers the snap view has been closed analytics event.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:48\n                \n            \n\n\n            \n                \n                    Initializes the component.\nWill register autoSnap if configured.\nSets the applicationState to SNAP_READY.\nTriggers the snap view opened analytics event.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        registerAutoSnap\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerAutoSnap()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:102\n                \n            \n\n\n            \n                \n                    When the camera is ready it starts to periodically take snapshots and tries to load SportEvents\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reloadPage\n                        \n                    \n                \n            \n            \n                \nreloadPage()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:184\n                \n            \n\n\n            \n                \n                    Reload the webbrowser\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHelpPage\n                        \n                    \n                \n            \n            \n                \nshowHelpPage()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:177\n                \n            \n\n\n            \n                \n                    Navigate to the Help Page by setting the corresponding AppState\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        startAutoSnapWithDelay\n                        \n                    \n                \n            \n            \n                \n                    \n                    startAutoSnapWithDelay()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:118\n                \n            \n\n\n            \n                \n                    The first delay is a bit longer in order for the user to manage to align the camera correctly.\nAfterwards snapshots from the webcam will be taken periodically and SportEvents will be tried to be loaded.\nStops only if the view is closed or the user has taken a snapshot by pressing the snapshot button.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        subscribeToStateStores\n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribeToStateStores()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:63\n                \n            \n\n\n            \n                \n                    Subscribes to updates from the AppStateStore and MediaDeviceStateStore\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        takeSnapshot\n                        \n                    \n                \n            \n            \n                \ntakeSnapshot()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:89\n                \n            \n\n\n            \n                \n                    Notifies other subscriptions that a new snapshot is performed.\nLoad the SportEvents based on the snapshot\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppState | undefined\n\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/snap/snap.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        destroyed$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/snap/snap.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaDeviceState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaDeviceState | undefined\n\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/snap/snap.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        snapshot$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/snap/snap.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        webcamComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WebcamComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(WebcamComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/snap/snap.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { TvSearchResult } from '@response/typings';\nimport { defer, delay, mergeMap, Observable, race, retryWhen, Subject, switchMap, take, takeUntil, timer } from 'rxjs';\nimport { TvSearchNoResultError } from '../../services/api/api-errors';\nimport { ApplicationConfigService } from '../../services/config/application-config.service';\nimport { ManipulatedImage } from '../../services/image-manipulation/manipulated-image';\nimport { LoggerService } from '../../services/logger/logger.service';\nimport { NotificationService } from '../../services/notification/notification.service';\nimport { SnapOddsFacade } from '../../services/snap-odds/snap-odds-facade.service';\nimport { LOCATION } from '../../services/tokens/location-token';\nimport { GoogleAnalyticsService } from '../../services/tracking/google-analytics.service';\nimport { AppState, AppStateStore } from '../../states/app-state.store';\nimport { MediaDeviceState, MediaDeviceStateStore } from '../../states/media-device-state.store';\nimport { WebcamComponent } from '../webcam/webcam.component';\n\n@Component({\n  selector: 'snapodds-snap',\n  templateUrl: './snap.component.html',\n  styleUrls: ['./snap.component.scss'],\n})\nexport class SnapComponent implements OnInit, OnDestroy {\n  @ViewChild(WebcamComponent) webcamComponent!: WebcamComponent;\n\n  appState: AppState | undefined;\n  mediaDeviceState: MediaDeviceState | undefined;\n\n  private readonly destroyed$ = new Subject();\n  private readonly snapshot$ = new Subject();\n\n  constructor(\n    private readonly logger: LoggerService,\n    private readonly applicationConfigService: ApplicationConfigService,\n    private readonly analyticsService: GoogleAnalyticsService,\n    private readonly snapOddsFacade: SnapOddsFacade,\n    private readonly appStateStore: AppStateStore,\n    private readonly mediaDeviceStateStore: MediaDeviceStateStore,\n    private readonly notificationService: NotificationService,\n    @Inject(LOCATION) private readonly location: Location\n  ) {}\n\n  /**\n   * Initializes the component.\n   *\n   * Will register autoSnap if configured.\n   * Sets the applicationState to SNAP_READY.\n   * Triggers the snap view opened analytics event.\n   */\n  ngOnInit(): void {\n    if (this.applicationConfigService.isAutoSnapEnabled()) {\n      this.registerAutoSnap();\n    }\n\n    this.subscribeToStateStores();\n\n    this.appStateStore.dispatch(AppState.SNAP_READY);\n    this.analyticsService.snapViewOpened();\n  }\n\n  /**\n   * Subscribes to updates from the AppStateStore and MediaDeviceStateStore\n   * @private\n   */\n  private subscribeToStateStores() {\n    this.appStateStore\n      .getState()\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((appState) => (this.appState = appState));\n\n    this.mediaDeviceStateStore\n      .getState()\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((mediaDeviceState) => (this.mediaDeviceState = mediaDeviceState));\n  }\n\n  /**\n   * Clean up existing subscriptions.\n   * Triggers the snap view has been closed analytics event.\n   */\n  ngOnDestroy(): void {\n    this.analyticsService.snapViewClosed();\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  /**\n   * Notifies other subscriptions that a new snapshot is performed.\n   * Load the SportEvents based on the snapshot\n   */\n  takeSnapshot(): void {\n    this.snapshot$.next();\n\n    this.loadSportEvents().subscribe({\n      next: (response) => this.handleSuccess(response),\n      error: (error) => this.handleError(error),\n    });\n  }\n\n  /**\n   * When the camera is ready it starts to periodically take snapshots and tries to load SportEvents\n   * @private\n   */\n  private registerAutoSnap(): void {\n    this.mediaDeviceStateStore.webcamIsReady$\n      .pipe(\n        take(1),\n        takeUntil(this.destroyed$),\n        switchMap(() => this.startAutoSnapWithDelay())\n      )\n      .subscribe((response) => this.handleSuccess(response));\n  }\n\n  /**\n   * The first delay is a bit longer in order for the user to manage to align the camera correctly.\n   * Afterwards snapshots from the webcam will be taken periodically and SportEvents will be tried to be loaded.\n   * Stops only if the view is closed or the user has taken a snapshot by pressing the snapshot button.\n   * @private\n   */\n  private startAutoSnapWithDelay(): Observable {\n    return timer(this.applicationConfigService.getAutoSnapDelay(true)).pipe(\n      mergeMap(() =>\n        this.loadSportEvents(true).pipe(\n          retryWhen((errors) => errors.pipe(delay(this.applicationConfigService.getAutoSnapDelay())))\n        )\n      ),\n      takeUntil(race(this.destroyed$, this.snapshot$))\n    );\n  }\n\n  /**\n   * Emit the best match (first entry in the response) on the ApplicationConfigService,\n   * in order to notify other services about a successful snap.\n   * @param sportEventsResponse\n   * @private\n   */\n  private handleSuccess(sportEventsResponse: TvSearchResult) {\n    this.notificationService.notify();\n    this.applicationConfigService.emitResultsEvent(sportEventsResponse.resultEntries[0]);\n  }\n\n  /**\n   * Depending on the error, either indicates that not SportEvents have been found by the given snapshot\n   * or that the request could not be processed due to technical errors.\n   * @param error\n   * @private\n   */\n  private handleError(error: unknown): void {\n    if (error instanceof TvSearchNoResultError) {\n      this.appStateStore.dispatch(AppState.SNAP_NO_RESULTS);\n    } else {\n      this.appStateStore.dispatch(AppState.SNAP_FAILED);\n    }\n  }\n\n  /**\n   * Retrieves a snapshot from the webcam and then call the respective method to lookup the SportEvent.\n   * @param autoSnap: Depending on the mode used to perform the snapshot different methods are executed\n   * @private\n   */\n  private loadSportEvents(autoSnap = false): Observable {\n    if (!autoSnap) {\n      this.appStateStore.dispatch(AppState.SNAP_IN_PROGRESS);\n    }\n    return defer(() => this.webcamComponent.triggerSnapshot()).pipe(\n      switchMap((webcamImage: ManipulatedImage) => {\n        if (autoSnap) {\n          return this.snapOddsFacade.autoSearchSport(webcamImage.blob);\n        } else {\n          return this.snapOddsFacade.searchSport(webcamImage.blob);\n        }\n      })\n    );\n  }\n\n  /**\n   * Navigate to the Help Page by setting the corresponding AppState\n   */\n  showHelpPage(): void {\n    this.appStateStore.dispatch(AppState.SHOW_HELP);\n  }\n\n  /**\n   * Reload the webbrowser\n   */\n  reloadPage(): void {\n    this.location.reload();\n  }\n}\n\n    \n\n    \n        \n  {{ 'Snapodds_Title_Snap_TV' | translate }}\n  \n    \n      {{ 'Snapodds_Action_Help' | translate }}\n    \n  \n\n\n\n  \n\n  \n    \n      \n    \n\n    \n      \n        \n          \n            {{ 'Snapodds_Action_Reload' | translate }}\n          \n        \n\n        \n          \n\n          \n\n          \n            \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./snap.component.scss\n                \n                @use 'tools';\n@use 'settings';\n@use 'sass:math';\n\n:host {\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  .l-flex {\n    display: flex;\n    flex: 1;\n  }\n\n  @media (orientation: landscape) {\n    .l-flex {\n      &__column--landscape {\n        flex-direction: column;\n      }\n\n      &__row--landscape {\n        flex-direction: row;\n      }\n    }\n  }\n\n  @media (orientation: portrait) {\n    .l-flex {\n      &__column--portrait {\n        flex-direction: column;\n      }\n\n      &__row--portrait {\n        flex-direction: row;\n      }\n    }\n  }\n\n  snapodds-webcam {\n    display: flex;\n    flex: 1;\n  }\n\n  snapodds-content {\n    margin: settings.$spacing-lg;\n\n    @include tools.media-small--portrait {\n      margin: settings.$spacing-base settings.$spacing-lg;\n    }\n\n    @include tools.media-tiny--landscape {\n      margin: settings.$spacing-base settings.$spacing-lg;\n    }\n  }\n\n  snapodds-footer {\n    margin-left: settings.$spacing-lg;\n    margin-right: settings.$spacing-lg;\n  }\n\n  snapodds-trigger {\n    display: flex;\n    flex: 1;\n    justify-content: center;\n  }\n\n  button {\n    @include tools.button-reset();\n    font-size: settings.$font-base;\n  }\n\n  .c-footer {\n    align-items: center;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n\n    &__switch-camera {\n      @include tools.button-reset;\n\n      color: settings.$color-primary;\n      display: flex;\n      flex: 1;\n      justify-content: center;\n    }\n\n    &__reload-button {\n      @include tools.button-reset;\n      background-color: settings.$color-primary;\n      color: settings.$color-text-focus;\n\n      font-size: settings.$font-lg;\n      font-weight: 500;\n      padding: settings.$spacing-base settings.$spacing-lg;\n    }\n\n    &__powered-by {\n      font-size: settings.$font-sm;\n    }\n\n    &__spacer {\n      display: flex;\n      flex: 1;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'Snapodds_Title_Snap_TV\\' | translate }}            {{ \\'Snapodds_Action_Help\\' | translate }}                                                                {{ \\'Snapodds_Action_Reload\\' | translate }}                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SnapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SnapOddsFacade.html":{"url":"injectables/SnapOddsFacade.html","title":"injectable - SnapOddsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SnapOddsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/snap-odds/snap-odds-facade.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                autoSearchSport\n                            \n                            \n                                searchSport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tvSearchService: TvSearchService, logger: LoggerService, analyticsService: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/snap-odds/snap-odds-facade.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tvSearchService\n                                                  \n                                                        \n                                                                        TvSearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        analyticsService\n                                                  \n                                                        \n                                                                        GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        autoSearchSport\n                        \n                    \n                \n            \n            \n                \nautoSearchSport(imageData: Blob)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/snap-odds/snap-odds-facade.service.ts:44\n                \n            \n\n\n            \n                \n                    Find SportEvent when the search is triggered programmatically.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imageData\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchSport\n                        \n                    \n                \n            \n            \n                \nsearchSport(imageData: Blob)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/snap-odds/snap-odds-facade.service.ts:22\n                \n            \n\n\n            \n                \n                    Performs the search of an SportEvent by an image.\nTrigger the analytics to register positive / negative and failed results.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imageData\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TvSearchResult } from '@response/typings';\nimport { catchError, Observable, tap, throwError } from 'rxjs';\nimport { TvSearchNoResultError } from '../api/api-errors';\nimport { TvSearchService } from '../api/tv-search.service';\nimport { LoggerService } from '../logger/logger.service';\nimport { GoogleAnalyticsService } from '../tracking/google-analytics.service';\n\n@Injectable({ providedIn: 'root' })\nexport class SnapOddsFacade {\n  constructor(\n    private readonly tvSearchService: TvSearchService,\n    private readonly logger: LoggerService,\n    private readonly analyticsService: GoogleAnalyticsService\n  ) {}\n\n  /**\n   * Performs the search of an SportEvent by an image.\n   * Trigger the analytics to register positive / negative and failed results.\n   * @param imageData\n   */\n  searchSport(imageData: Blob): Observable {\n    this.analyticsService.snapViewSnap();\n\n    const snapStartTime = Date.now();\n    return this.tvSearchService.searchSport(imageData).pipe(\n      catchError((error) => {\n        const duration = Date.now() - snapStartTime;\n        if (error instanceof TvSearchNoResultError) {\n          this.analyticsService.snapViewSnapNegative(duration);\n        } else {\n          this.analyticsService.snapViewSnapFailed(duration);\n        }\n        return throwError(error);\n      }),\n      tap(() => this.analyticsService.snapViewSnapResult(Date.now() - snapStartTime))\n    );\n  }\n\n  /**\n   * Find SportEvent when the search is triggered programmatically.\n   * @param imageData\n   */\n  autoSearchSport(imageData: Blob): Observable {\n    return this.tvSearchService.autoSearchSport(imageData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerComponent.html":{"url":"components/SpinnerComponent.html","title":"component - SpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/spinner/spinner.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-spinner\n            \n\n            \n                styleUrls\n                ./spinner.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spinner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     \"base\" | \"small\"\n\n                    \n                \n                \n                    \n                        Default value : 'base'\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/spinner/spinner.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'snapodds-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss'],\n})\nexport class SpinnerComponent {\n  @Input()\n  size: 'base' | 'small' = 'base';\n}\n\n    \n\n    \n        \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./spinner.component.scss\n                \n                @use 'sass:math';\n\n$spinner-width: 3rem;\n$spinner-width--small: 1.5rem;\n$bar--width: math.div($spinner-width, 4);\n$bar--width--small: math.div($spinner-width--small, 4);\n$bar--count: 8;\n\n:host {\n  .spinner {\n    color: currentColor;\n    display: inline-block;\n    height: $spinner-width;\n    position: relative;\n    width: $spinner-width;\n\n    div {\n      animation: spinner $bar--count * 0.1s linear infinite;\n      transform-origin: math.div($spinner-width, 2) math.div($spinner-width, 2);\n    }\n\n    div::after {\n      background: currentColor;\n      border-radius: 20%;\n      content: ' ';\n      display: block;\n      height: $bar--width;\n      left: math.div($spinner-width, 2) - math.div($bar--width, 6);\n      position: absolute;\n      top: math.div($bar--width, 6);\n      width: math.div($bar--width, 3);\n    }\n\n    &--small {\n      height: $spinner-width--small;\n      width: $spinner-width--small;\n\n      div {\n        transform-origin: math.div($spinner-width--small, 2) math.div($spinner-width--small, 2);\n      }\n\n      div::after {\n        height: $bar--width--small;\n        left: math.div($spinner-width--small, 2) - math.div($bar--width--small, 6);\n        top: math.div($bar--width--small, 6);\n        width: math.div($bar--width--small, 3);\n      }\n    }\n\n    @for $i from 1 through $bar--count {\n      div:nth-child(#{$i}) {\n        animation-delay: $bar--count * -0.1s + $i * 0.1s;\n        transform: rotate(#{(math.div(360, $bar--count) * $i)}deg);\n      }\n    }\n  }\n\n  @keyframes spinner {\n    0% {\n      opacity: 1;\n    }\n\n    100% {\n      opacity: 0;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SportEvent.html":{"url":"interfaces/SportEvent.html","title":"interface - SportEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SportEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/tv-search/sport-event.ts\n        \n\n\n            \n                Description\n            \n            \n                An entity represents a sport event broadcasted on TV channel.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _links\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            competitors\n                                        \n                                \n                                \n                                        \n                                            endTime\n                                        \n                                \n                                \n                                        \n                                            externalId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            sport\n                                        \n                                \n                                \n                                        \n                                            sportDataProviderCode\n                                        \n                                \n                                \n                                        \n                                            sportDataProviderMatchId\n                                        \n                                \n                                \n                                        \n                                            startTime\n                                        \n                                \n                                \n                                        \n                                            tournament\n                                        \n                                \n                                \n                                        \n                                            tvChannelId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _links:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The category of this sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        competitors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        competitors:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The competitors participating in this sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The end time of this sport event.\nISO DateTime Format: yyyy-MM-dd'T'HH:mm:ss.SSSZZ\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of a match specific for the sport data provider and corresponding to this sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sport:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The sport discipline of this sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sportDataProviderCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sportDataProviderCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique code of an external sport data provider which is a source of the sport data for this sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sportDataProviderMatchId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sportDataProviderMatchId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of a match specific for the sport data provider and corresponding to this sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The start time of this sport event.\nISO DateTime Format: yyyy-MM-dd'T'HH:mm:ss.SSSZZ\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournament\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tournament:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The tournament of this sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tvChannelId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tvChannelId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of a TV channel registered in the system and on which this sport event aired.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Link } from '../link';\n\n/**\n * An entity represents a sport event broadcasted on TV channel.\n */\nexport interface SportEvent {\n  /**\n   * The id of the sport event.\n   */\n  id: number;\n\n  /**\n   * The unique code of an external sport data provider which is a source of the sport data for this sport event.\n   */\n  sportDataProviderCode: string;\n\n  /**\n   * The id of a match specific for the sport data provider and corresponding to this sport event.\n   */\n  sportDataProviderMatchId: string;\n\n  /**\n   * The id of a TV channel registered in the system and on which this sport event aired.\n   */\n  tvChannelId: number;\n\n  /**\n   * The start time of this sport event.\n   *\n   * ISO DateTime Format: yyyy-MM-dd'T'HH:mm:ss.SSSZZ\n   */\n  startTime: string;\n\n  /**\n   * The end time of this sport event.\n   *\n   * ISO DateTime Format: yyyy-MM-dd'T'HH:mm:ss.SSSZZ\n   */\n  endTime: string;\n\n  /**\n   * The sport discipline of this sport event.\n   */\n  sport: string;\n\n  /**\n   * The category of this sport event.\n   */\n  category: string;\n\n  /**\n   * The tournament of this sport event.\n   */\n  tournament: string;\n\n  /**\n   * The competitors participating in this sport event.\n   */\n  competitors: { name: string }[];\n\n  /**\n   * The id of a match specific for the sport data provider and corresponding to this sport event.\n   */\n  externalId: string;\n\n  _links: {\n    self?: Link;\n    tvChannel?: Link;\n    tvChannelLogo?: Link;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SportsBook.html":{"url":"interfaces/SportsBook.html","title":"interface - SportsBook","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SportsBook\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/models/sports-book.ts\n        \n\n\n            \n                Description\n            \n            \n                Data structure used to render the sportBooks for LineOdds\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            lines\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            redirectUrl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lines\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lines:     SportsBookLine[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SportsBookLine[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    One line contains the various OddsOffers combined.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the sports book.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redirectUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        redirectUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The link which will be used to redirect the user to.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { SportsBookLine } from './sports-book-line';\n\n/**\n * Data structure used to render the sportBooks for LineOdds\n */\nexport interface SportsBook {\n  /**\n   * The name of the sports book.\n   */\n  name: string;\n  /**\n   * One line contains the various OddsOffers combined.\n   */\n  lines: SportsBookLine[];\n\n  /**\n   * The link which will be used to redirect the user to.\n   */\n  redirectUrl?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SportsBook-1.html":{"url":"interfaces/SportsBook-1.html","title":"interface - SportsBook-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SportsBook\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/odds/sports-book.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an odds for the specific game in the given sports book.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _links\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            offers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _links:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the sports book.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offers:         OddsOffer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OddsOffer[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The odds offers available in the given sports book.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { OddsOffer } from './odds-offer';\nimport { Link } from '../link';\n\n/**\n * Represents an odds for the specific game in the given sports book.\n */\nexport interface SportsBook {\n  /**\n   * The name of the sports book.\n   */\n  name: string;\n\n  /**\n   * The odds offers available in the given sports book.\n   */\n  offers: OddsOffer[];\n\n  _links?: {\n    redirect?: Link;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SportsBookLine.html":{"url":"interfaces/SportsBookLine.html","title":"interface - SportsBookLine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SportsBookLine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/models/sports-book-line.ts\n        \n\n\n            \n                Description\n            \n            \n                Data structure used to render the combined info of offers.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            moneyline\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            moneylineUrl\n                                        \n                                \n                                \n                                        \n                                            overUnder\n                                        \n                                \n                                \n                                        \n                                            overUnderOdds\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            overUnderUrl\n                                        \n                                \n                                \n                                        \n                                            spread\n                                        \n                                \n                                \n                                        \n                                            spreadOdds\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            spreadUrl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        moneyline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moneyline:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The target value for the money line.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moneylineUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moneylineUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The url pointing to the money line.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overUnder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overUnder:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The target value for over/under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overUnderOdds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overUnderOdds:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The odds for the over/under outcome.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overUnderUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overUnderUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The url pointing to the over/under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spread\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spread:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The target value for spread.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spreadOdds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spreadOdds:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The odds for the spread outcome.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spreadUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spreadUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The url pointing to the spread.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SportsBookLine {\n  /**\n   * The target value for spread.\n   */\n  spread: number | null;\n\n  /**\n   * The odds for the spread outcome.\n   */\n  spreadOdds: number | null;\n\n  /**\n   * The url pointing to the spread.\n   */\n  spreadUrl?: string | null;\n\n  /**\n   * The target value for the money line.\n   */\n  moneyline: number | null;\n\n  /**\n   * The url pointing to the money line.\n   */\n  moneylineUrl?: string | null;\n\n  /**\n   * The target value for over/under.\n   */\n  overUnder: number | null;\n\n  /**\n   * The odds for the over/under outcome.\n   */\n  overUnderOdds: number | null;\n\n  /**\n   * The url pointing to the over/under.\n   */\n  overUnderUrl?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SwitchSvgComponent.html":{"url":"components/SwitchSvgComponent.html","title":"component - SwitchSvgComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SwitchSvgComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/svgs/switch.svg.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-switch-svg\n            \n\n            \n                styleUrls\n                ./switch.svg.styles.scss\n            \n\n\n\n            \n                templateUrl\n                ./switch.svg\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'snapodds-switch-svg',\n  templateUrl: './switch.svg',\n  styleUrls: ['./switch.svg.styles.scss'],\n})\nexport class SwitchSvgComponent {}\n\n    \n\n    \n        \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./switch.svg.styles.scss\n                \n                @use 'settings';\n\n:host {\n  color: settings.$color-text;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SwitchSvgComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TranslationEntries.html":{"url":"interfaces/TranslationEntries.html","title":"interface - TranslationEntries","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TranslationEntries\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/i18n/translation-entries.ts\n        \n\n\n            \n                Description\n            \n            \n                Keys available for translating text in the view\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Snapodds_Action_Cancel\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Action_Close_Help\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Action_Help\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Action_Reload\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Device_No_Permission\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Device_No_Permission_Headline\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Lines_Loading\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Lines_No_Results\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Snapping_Failed\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Snapping_Failed_Headline\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Snapping_No_results\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Snapping_No_results_Headline\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Title_Help\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Title_Odds\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Title_Snap_TV\n                                        \n                                \n                                \n                                        \n                                            Snapodds_ViewFinder_Hint\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Action_Cancel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Action_Cancel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Action_Close_Help\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Action_Close_Help:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Action_Help\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Action_Help:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Action_Reload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Action_Reload:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Device_No_Permission\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Device_No_Permission:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Device_No_Permission_Headline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Device_No_Permission_Headline:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Lines_Loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Lines_Loading:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Lines_No_Results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Lines_No_Results:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Snapping_Failed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Snapping_Failed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Snapping_Failed_Headline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Snapping_Failed_Headline:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Snapping_No_results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Snapping_No_results:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Snapping_No_results_Headline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Snapping_No_results_Headline:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Title_Help\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Title_Help:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Title_Odds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Title_Odds:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Title_Snap_TV\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Title_Snap_TV:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_ViewFinder_Hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_ViewFinder_Hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TranslationEntries {\n  Snapodds_Title_Snap_TV: string;\n  Snapodds_Title_Odds: string;\n  Snapodds_Title_Help: string;\n  Snapodds_Action_Cancel: string;\n  Snapodds_Action_Reload: string;\n  Snapodds_Action_Help: string;\n  Snapodds_Action_Close_Help: string;\n  Snapodds_ViewFinder_Hint: string;\n  Snapodds_Device_No_Permission_Headline: string;\n  Snapodds_Device_No_Permission: string;\n  Snapodds_Snapping_Failed_Headline: string;\n  Snapodds_Snapping_Failed: string;\n  Snapodds_Snapping_No_results_Headline: string;\n  Snapodds_Snapping_No_results: string;\n  Snapodds_Lines_Loading: string;\n  Snapodds_Lines_No_Results: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TriggerComponent.html":{"url":"components/TriggerComponent.html","title":"component - TriggerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TriggerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/trigger/trigger.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-trigger\n            \n\n            \n                styleUrls\n                ./trigger.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./trigger.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                processing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/trigger/trigger.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        processing\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/trigger/trigger.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/trigger/trigger.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'snapodds-trigger',\n  templateUrl: './trigger.component.html',\n  styleUrls: ['./trigger.component.scss'],\n})\nexport class TriggerComponent {\n  @Input() disabled = false;\n  @Input() processing = false;\n  @Output() clicked = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./trigger.component.scss\n                \n                @use 'tools';\n@use 'settings';\n\n:host {\n  .c-trigger {\n    &__button {\n      @include tools.button-reset;\n\n      color: settings.$color-primary;\n      position: relative;\n\n      &:disabled {\n        opacity: 0.5;\n        pointer-events: none;\n      }\n    }\n\n    &__spinner {\n      color: settings.$color-background;\n      left: 50%;\n      position: absolute;\n      top: 50%;\n      transform: translate(-50%, -50%);\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TriggerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TriggerSvgComponent.html":{"url":"components/TriggerSvgComponent.html","title":"component - TriggerSvgComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TriggerSvgComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/svgs/trigger.svg.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-trigger-svg\n            \n\n\n\n\n            \n                templateUrl\n                ./trigger.svg\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'snapodds-trigger-svg',\n  templateUrl: './trigger.svg',\n})\nexport class TriggerSvgComponent {}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TriggerSvgComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TvChannel.html":{"url":"interfaces/TvChannel.html","title":"interface - TvChannel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TvChannel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/tv-search/tv-channel.ts\n        \n\n\n            \n                Description\n            \n            \n                An entity which represents a TV channel registered in the system.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _links\n                                        \n                                \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            grabbed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            homepage\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _links:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique code of this TV channel.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grabbed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grabbed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The flag which indicates that the system grabs this TV channel or doesn't.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homepage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        homepage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The homepage URL of this TV channel.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of this TV channel.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of this TV channel.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Link } from '../link';\n\n/**\n * An entity which represents a TV channel registered in the system.\n */\nexport interface TvChannel {\n  /**\n   * The id of this TV channel.\n   */\n  id: number;\n\n  /**\n   * The unique code of this TV channel.\n   */\n  code: string;\n\n  /**\n   * The name of this TV channel.\n   */\n  name: string;\n\n  /**\n   * The homepage URL of this TV channel.\n   */\n  homepage?: string;\n\n  /**\n   * The flag which indicates that the system grabs this TV channel or doesn't.\n   */\n  grabbed: boolean;\n\n  _links: {\n    self?: Link;\n    logo?: Link;\n    poster?: Link;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TvSearchNoResultError.html":{"url":"classes/TvSearchNoResultError.html","title":"class - TvSearchNoResultError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TvSearchNoResultError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/api/api-errors.ts\n        \n\n\n            \n                Description\n            \n            \n                Error to indicate that a search has returned no results\n\n            \n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/api/api-errors.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TvSearchNoResultError extends Error {\n  constructor() {\n    super('No sport events found');\n    this.name = 'TvSearchNoResultError';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TvSearchResult.html":{"url":"interfaces/TvSearchResult.html","title":"interface - TvSearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TvSearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/tv-search/tv-search-result.ts\n        \n\n\n            \n                Description\n            \n            \n                A result of TV search.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            requestUuid\n                                        \n                                \n                                \n                                        \n                                            resultEntries\n                                        \n                                \n                                \n                                        \n                                            screenQuadrangles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        requestUuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        requestUuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A result of TV search.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultEntries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resultEntries:     TvSearchResultEntry[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TvSearchResultEntry[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The list of result entries.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        screenQuadrangles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        screenQuadrangles:         Quadrangle2d[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Quadrangle2d[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The quadrangles of TV screen found on the images used for the TV search.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Quadrangle2d } from './quadrangle2d';\nimport { TvSearchResultEntry } from './tv-search-result-entry';\n\n/**\n * A result of TV search.\n */\nexport interface TvSearchResult {\n  /**\n   * A result of TV search.\n   */\n  requestUuid: string;\n\n  /**\n   * The list of result entries.\n   */\n  resultEntries: TvSearchResultEntry[];\n\n  /**\n   * The quadrangles of TV screen found on the images used for the TV search.\n   */\n  screenQuadrangles: Quadrangle2d[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TvSearchResultEntry.html":{"url":"interfaces/TvSearchResultEntry.html","title":"interface - TvSearchResultEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TvSearchResultEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/tv-search/tv-search-result-entry.ts\n        \n\n\n            \n                Description\n            \n            \n                A result entry found on a request made by the end-user for search in the index of TV channels grabbed by the system.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            score\n                                        \n                                \n                                \n                                        \n                                            sportEvent\n                                        \n                                \n                                \n                                        \n                                            timestampRef\n                                        \n                                \n                                \n                                        \n                                            tvChannel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The result score of the entry.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sportEvent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sportEvent:         SportEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SportEvent\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The sport event shown on the TV channel at the timestamp of the entry.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestampRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestampRef:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The timestamp when the corresponding TS image was aired.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tvChannel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tvChannel:         TvChannel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TvChannel\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The TV channel on which the TS image corresponding to the entry was aired.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { SportEvent } from './sport-event';\nimport { TvChannel } from './tv-channel';\n\n/**\n * A result entry found on a request made by the end-user for search in the index of TV channels grabbed by the system.\n */\nexport interface TvSearchResultEntry {\n  /**\n   * The TV channel on which the TS image corresponding to the entry was aired.\n   */\n  tvChannel: TvChannel;\n\n  /**\n   * The sport event shown on the TV channel at the timestamp of the entry.\n   */\n  sportEvent: SportEvent;\n\n  /**\n   * The timestamp when the corresponding TS image was aired.\n   */\n  timestampRef: number;\n\n  /**\n   * The result score of the entry.\n   */\n  score: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TvSearchService.html":{"url":"injectables/TvSearchService.html","title":"injectable - TvSearchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TvSearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/api/tv-search.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                timeLag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                autoSearchSport\n                            \n                            \n                                    Private\n                                createSnapscreenHeaders\n                            \n                            \n                                searchSport\n                            \n                            \n                                    Private\n                                snap\n                            \n                            \n                                    Private\n                                updateTimeLag\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    baseUrl\n                                \n                                \n                                    currentTimestamp\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logger: LoggerService, authService: AuthService, applicationConfigService: ApplicationConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/api/tv-search.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        autoSearchSport\n                        \n                    \n                \n            \n            \n                \nautoSearchSport(imageData: Blob)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/tv-search.service.ts:50\n                \n            \n\n\n            \n                \n                    Find SportEvent when the search is triggered programmatically.\nTakes the current timeStamp into consideration.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    imageData\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : snapshot of the tv-viewfinders viewport\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createSnapscreenHeaders\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSnapscreenHeaders(accessToken: string, nearTimestamp: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/tv-search.service.ts:86\n                \n            \n\n\n            \n                \n                    Create the headers necessary to perform a search on the API\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    accessToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : to authenticate the client\n\n                                    \n                                \n                                \n                                    nearTimestamp\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : add the currentTimestamp as header\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HttpHeaders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchSport\n                        \n                    \n                \n            \n            \n                \nsearchSport(imageData: Blob)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/tv-search.service.ts:41\n                \n            \n\n\n            \n                \n                    Find SportEvent when the user manually triggers the snap.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    imageData\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : snapshot of the cameras viewport\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        snap\n                        \n                    \n                \n            \n            \n                \n                    \n                    snap(url: string, imageData: Blob, nearTimestamp)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/tv-search.service.ts:61\n                \n            \n\n\n            \n                \n                    Performs a search by image\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        : API endpoint to perform the search request agianst\n\n                                    \n                                \n                                \n                                    imageData\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        : image to be analyzed\n\n                                    \n                                \n                                \n                                    nearTimestamp\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        : add the currentTimestamp as header\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateTimeLag\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTimeLag(response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/tv-search.service.ts:104\n                \n            \n\n\n            \n                \n                    Calculates the difference between now and when the response has been sent.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the response from which the difference is calculated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        timeLag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/api/tv-search.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        baseUrl\n                    \n                \n\n                \n                    \n                        getbaseUrl()\n                    \n                \n                            \n                                \n                                    Defined in apps/snapodds/src/services/api/tv-search.service.ts:26\n                                \n                            \n                    \n                        \n                                Retrieve the apiUrl from the applicationConfig\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        currentTimestamp\n                    \n                \n\n                \n                    \n                        getcurrentTimestamp()\n                    \n                \n                            \n                                \n                                    Defined in apps/snapodds/src/services/api/tv-search.service.ts:33\n                                \n                            \n                    \n                        \n                                Calculate the difference between the current timestamp and the delay the response took to be processed by the API\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { TvSearchResult } from '@response/typings';\nimport { map, Observable, switchMap, tap } from 'rxjs';\nimport { AuthService } from '../auth/auth.service';\nimport { ApplicationConfigService } from '../config/application-config.service';\nimport { LoggerService } from '../logger/logger.service';\nimport { TvSearchNoResultError } from './api-errors';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TvSearchService {\n  private timeLag = 0;\n\n  constructor(\n    private readonly http: HttpClient,\n    private readonly logger: LoggerService,\n    private readonly authService: AuthService,\n    private readonly applicationConfigService: ApplicationConfigService\n  ) {}\n\n  /**\n   * Retrieve the apiUrl from the applicationConfig\n   */\n  get baseUrl(): string {\n    return this.applicationConfigService.getApiUrl();\n  }\n\n  /**\n   * Calculate the difference between the current timestamp and the delay the response took to be processed by the API\n   */\n  get currentTimestamp(): number {\n    return Date.now() - this.timeLag;\n  }\n\n  /**\n   * Find SportEvent when the user manually triggers the snap.\n   * @param imageData: snapshot of the cameras viewport\n   */\n  searchSport(imageData: Blob): Observable {\n    return this.snap('/tv-search/sport/by-image', imageData);\n  }\n\n  /**\n   * Find SportEvent when the search is triggered programmatically.\n   * Takes the current timeStamp into consideration.\n   * @param imageData: snapshot of the tv-viewfinders viewport\n   */\n  autoSearchSport(imageData: Blob): Observable {\n    return this.snap('/tv-search/sport/near-timestamp/by-image', imageData, true);\n  }\n\n  /**\n   * Performs a search by image\n   * @param url: API endpoint to perform the search request agianst\n   * @param imageData: image to be analyzed\n   * @param nearTimestamp: add the currentTimestamp as header\n   * @private\n   */\n  private snap(url: string, imageData: Blob, nearTimestamp = false): Observable {\n    return this.authService.requestAccessToken().pipe(\n      switchMap((accessToken) =>\n        this.http.post(`${this.baseUrl}${url}`, imageData, {\n          headers: this.createSnapscreenHeaders(accessToken, nearTimestamp),\n          observe: 'response',\n        })\n      ),\n      tap((response) => this.updateTimeLag(response)),\n      map((response) => {\n        if (response.body?.resultEntries.length) {\n          return response.body;\n        } else {\n          throw new TvSearchNoResultError();\n        }\n      })\n    );\n  }\n\n  /**\n   * Create the headers necessary to perform a search on the API\n   * @param accessToken: to authenticate the client\n   * @param nearTimestamp: add the currentTimestamp as header\n   * @private\n   */\n  private createSnapscreenHeaders(accessToken: string, nearTimestamp: boolean): HttpHeaders {\n    let headers = new HttpHeaders()\n      .set('Authorization', `Bearer ${accessToken}`)\n      .set('Content-type', 'application/octet-stream')\n      .set('X-Snapscreen-MimeType', 'image/jpeg');\n\n    if (nearTimestamp) {\n      headers = headers.set('X-Snapscreen-Timestamp', `${this.currentTimestamp}`);\n    }\n\n    return headers;\n  }\n\n  /**\n   * Calculates the difference between now and when the response has been sent.\n   * @param response: the response from which the difference is calculated\n   * @private\n   */\n  private updateTimeLag(response: HttpResponse): void {\n    const responseDate = response.headers.get('Date');\n\n    if (responseDate) {\n      this.timeLag = Date.now() - Date.parse(responseDate);\n      this.logger.debug(`Update time lag interval to ${this.timeLag}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserFeedbackMessageComponent.html":{"url":"components/UserFeedbackMessageComponent.html","title":"component - UserFeedbackMessageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserFeedbackMessageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/user-feedback-message/user-feedback-message.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-user-feedback-message\n            \n\n            \n                styleUrls\n                ./user-feedback-message.component.scss\n            \n\n\n\n            \n                templateUrl\n                user-feedback-message.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appState\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        appState\n                    \n                \n                \n                    \n                        Type :         AppState\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/user-feedback-message/user-feedback-message.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { AppState } from '../../states/app-state.store';\n\n@Component({\n  selector: 'snapodds-user-feedback-message',\n  templateUrl: 'user-feedback-message.component.html',\n  styleUrls: ['./user-feedback-message.component.scss'],\n})\nexport class UserFeedbackMessageComponent {\n  @Input() appState?: AppState;\n}\n\n    \n\n    \n        \n\n\n  {{ 'Snapodds_Device_No_Permission_Headline' | translate }}\n  \n\n\n\n  {{ 'Snapodds_Snapping_No_results_Headline' | translate }}\n  \n\n\n\n  {{ 'Snapodds_Snapping_Failed_Headline' | translate }}\n  \n\n\n    \n\n    \n                \n                    ./user-feedback-message.component.scss\n                \n                @use 'settings';\n@use 'tools';\n\n:host {\n  .c-user-feedback {\n    text-align: center;\n\n    &--error {\n      color: settings.$color-warn;\n    }\n\n    &__headline {\n      font-size: settings.$font-xl;\n      margin-bottom: settings.$spacing-sm;\n\n      @include tools.media-tiny--portrait {\n        display: none;\n      }\n\n      @include tools.media-tiny--landscape {\n        display: none;\n      }\n\n      @include tools.media-small--portrait {\n        font-size: settings.$font-lg;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'Snapodds_Device_No_Permission_Headline\\' | translate }}    {{ \\'Snapodds_Snapping_No_results_Headline\\' | translate }}    {{ \\'Snapodds_Snapping_Failed_Headline\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserFeedbackMessageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WebcamComponent.html":{"url":"components/WebcamComponent.html","title":"component - WebcamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WebcamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/webcam/webcam.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-webcam\n            \n\n            \n                styleUrls\n                ./webcam.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./webcam.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasMultipleWebcams\n                            \n                            \n                                imageAsDataUrl\n                            \n                            \n                                    Private\n                                nextWebcam\n                            \n                            \n                                nextWebcam$\n                            \n                            \n                                pinchZoomComponent\n                            \n                            \n                                videoOptions\n                            \n                            \n                                viewFinder\n                            \n                            \n                                webcamComponent\n                            \n                            \n                                webcamComponentElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cameraSwitched\n                            \n                            \n                                    Private\n                                centerContentOnZoom\n                            \n                            \n                                debugImageManipulations\n                            \n                            \n                                    Private\n                                drawDebugImage\n                            \n                            \n                                    Private\n                                getViewFinder\n                            \n                            \n                                handleInitError\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                switchToNextWebcam\n                            \n                            \n                                triggerSnapshot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(imageManipulationService: ImageManipulationService, applicationConfigService: ApplicationConfigService, appStateStore: AppStateStore, logger: LoggerService, mediaDeviceStateStore: MediaDeviceStateStore)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        imageManipulationService\n                                                  \n                                                        \n                                                                        ImageManipulationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appStateStore\n                                                  \n                                                        \n                                                                        AppStateStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaDeviceStateStore\n                                                  \n                                                        \n                                                                        MediaDeviceStateStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cameraSwitched\n                        \n                    \n                \n            \n            \n                \ncameraSwitched(deviceId: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:132\n                \n            \n\n\n            \n                \n                    Callback which is executed when the video stream of a webcam is ready for further processing.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    deviceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the webcams device id inside the browser\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        centerContentOnZoom\n                        \n                    \n                \n            \n            \n                \n                    \n                    centerContentOnZoom()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:148\n                \n            \n\n\n            \n                \n                    Patches the ngx-pinch-zoom component by not taking the cursors offset into account when zooming into the video stream.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debugImageManipulations\n                        \n                    \n                \n            \n            \n                \ndebugImageManipulations()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:140\n                \n            \n\n\n            \n                \n                    Used to determine if the debug output of the manipulated image should be shown or not\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        drawDebugImage\n                        \n                    \n                \n            \n            \n                \n                    \n                    drawDebugImage(blob: Blob)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:105\n                \n            \n\n\n            \n                \n                    Converts a blob image into a dataUrl which can be rendered in the template\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    blob\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getViewFinder\n                        \n                    \n                \n            \n            \n                \n                    \n                    getViewFinder()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:94\n                \n            \n\n\n            \n                \n                    If autoSnap is enabled then only the tv-frame is used as viewFinder, otherwise the whole visible are is used.\n\n\n                    \n                    \n                    \n                        Returns :     HTMLElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleInitError\n                        \n                    \n                \n            \n            \n                \nhandleInitError(error: WebcamInitError)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:115\n                \n            \n\n\n            \n                \n                    If the device can't be accessed, triggers the rendering of the according error page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            WebcamInitError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:60\n                \n            \n\n\n            \n                \n                    After the view and its components are initialized, the zoom library will be patched to only allow zoom on center\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:46\n                \n            \n\n\n            \n                \n                    Verifies the available video inputs and if none are found triggers the rendering of the error view\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switchToNextWebcam\n                        \n                    \n                \n            \n            \n                \nswitchToNextWebcam()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:124\n                \n            \n\n\n            \n                \n                    Toggles between available webcams\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerSnapshot\n                        \n                    \n                \n            \n            \n                \ntriggerSnapshot()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:72\n                \n            \n\n\n            \n                \n                    Takes a snapshot from the webcams video stream and crops it to the area that is visible to the user.\nIf the environment.debugImageManipulations is turned on will render the cropped image in the browser for verification\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hasMultipleWebcams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageAsDataUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | ArrayBuffer | null | undefined\n\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        nextWebcam\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextWebcam$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.nextWebcam.asObservable()\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pinchZoomComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PinchZoomComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(PinchZoomComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        videoOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaTrackConstraints\n\n                    \n                \n                \n                    \n                        Default value : {\n    facingMode: { ideal: 'environment' },\n    width: { min: 320, ideal: 1920, max: 2560 },\n  }\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewFinder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('viewFinder')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        webcamComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgxWebcamComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(NgxWebcamComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        webcamComponentElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(NgxWebcamComponent, {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { PinchZoomComponent } from 'ngx-pinch-zoom';\nimport { WebcamComponent as NgxWebcamComponent, WebcamInitError, WebcamUtil } from 'ngx-webcam';\nimport { Observable, Subject } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { ApplicationConfigService } from '../../services/config/application-config.service';\nimport { ImageManipulationService } from '../../services/image-manipulation/image-manipulation.service';\nimport { ManipulatedImage } from '../../services/image-manipulation/manipulated-image';\nimport { LoggerService } from '../../services/logger/logger.service';\nimport { AppState, AppStateStore } from '../../states/app-state.store';\nimport { MediaDeviceState, MediaDeviceStateStore } from '../../states/media-device-state.store';\n\n@Component({\n  selector: 'snapodds-webcam',\n  templateUrl: './webcam.component.html',\n  styleUrls: ['./webcam.component.scss'],\n})\nexport class WebcamComponent implements OnInit, AfterViewInit {\n  imageAsDataUrl: string | ArrayBuffer | null | undefined;\n  videoOptions: MediaTrackConstraints = {\n    facingMode: { ideal: 'environment' },\n    width: { min: 320, ideal: 1920, max: 2560 },\n  };\n\n  @ViewChild(NgxWebcamComponent) webcamComponent!: NgxWebcamComponent;\n  @ViewChild(NgxWebcamComponent, { read: ElementRef }) webcamComponentElement!: ElementRef;\n  @ViewChild(PinchZoomComponent) pinchZoomComponent!: PinchZoomComponent;\n  @ViewChild('viewFinder') viewFinder!: ElementRef;\n\n  hasMultipleWebcams = false;\n\n  private nextWebcam: Subject = new Subject();\n  nextWebcam$: Observable = this.nextWebcam.asObservable();\n\n  constructor(\n    private readonly imageManipulationService: ImageManipulationService,\n    private readonly applicationConfigService: ApplicationConfigService,\n    private readonly appStateStore: AppStateStore,\n    private readonly logger: LoggerService,\n    readonly mediaDeviceStateStore: MediaDeviceStateStore\n  ) {}\n\n  /**\n   * Verifies the available video inputs and if none are found triggers the rendering of the error view\n   */\n  ngOnInit(): void {\n    WebcamUtil.getAvailableVideoInputs().then((mediaDevices: MediaDeviceInfo[]) => {\n      this.hasMultipleWebcams = mediaDevices.length > 1;\n\n      if (mediaDevices.length === 0) {\n        this.mediaDeviceStateStore.dispatch(MediaDeviceState.DEVICE_NO_CAMERA);\n        this.appStateStore.dispatch(AppState.DEVICE_NO_CAMERA);\n      }\n    });\n  }\n\n  /**\n   * After the view and its components are initialized, the zoom library will be patched to only allow zoom on center\n   */\n  ngAfterViewInit(): void {\n    this.centerContentOnZoom();\n  }\n\n  /**\n   * Takes a snapshot from the webcams video stream and crops it to the area that is visible to the user.\n   *\n   * If the `environment.debugImageManipulations` is turned on will render the cropped image in the browser for verification\n   *\n   * @throws 'Debug webcam image' to interrupt further processing when debugImageManipulations is turned on.\n   *\n   */\n  triggerSnapshot(): Promise {\n    return this.imageManipulationService\n      .cropAndResizeImage(\n        this.webcamComponent.nativeVideoElement,\n        this.getViewFinder(),\n        this.pinchZoomComponent.scale,\n        this.applicationConfigService.getSnapDimension()\n      )\n      .then((manipulatedImage) => {\n        if (this.debugImageManipulations()) {\n          this.drawDebugImage(manipulatedImage.blob);\n          throw 'Debug webcam image';\n        }\n        this.logger.info('Received webcam image', manipulatedImage);\n        return manipulatedImage;\n      });\n  }\n\n  /**\n   * If `autoSnap` is enabled then only the tv-frame is used as viewFinder, otherwise the whole visible are is used.\n   * @private\n   */\n  private getViewFinder(): HTMLElement {\n    return this.applicationConfigService.isAutoSnapEnabled()\n      ? this.viewFinder.nativeElement\n      : this.webcamComponentElement.nativeElement;\n  }\n\n  /**\n   * Converts a blob image into a dataUrl which can be rendered in the template\n   * @param blob\n   * @private\n   */\n  private drawDebugImage(blob: Blob): void {\n    const reader = new FileReader();\n    reader.onloadend = () => (this.imageAsDataUrl = reader.result);\n    reader.readAsDataURL(blob);\n  }\n\n  /**\n   * If the device can't be accessed, triggers the rendering of the according error page.\n   * @param error\n   */\n  handleInitError(error: WebcamInitError): void {\n    this.mediaDeviceStateStore.dispatch(MediaDeviceState.DEVICE_NO_PERMISSION);\n    this.appStateStore.dispatch(AppState.DEVICE_NO_PERMISSION);\n    this.logger.error('Failed to initialize webcam', error);\n  }\n\n  /**\n   * Toggles between available webcams\n   */\n  switchToNextWebcam(): void {\n    this.nextWebcam.next(true);\n  }\n\n  /**\n   * Callback which is executed when the video stream of a webcam is ready for further processing.\n   * @param deviceId: the webcams device id inside the browser\n   */\n  cameraSwitched(deviceId: string) {\n    this.mediaDeviceStateStore.dispatch(MediaDeviceState.DEVICE_CAMERA_READY);\n    this.logger.info('Camera device switched. DeviceId:', deviceId);\n  }\n\n  /**\n   * Used to determine if the debug output of the manipulated image should be shown or not\n   */\n  debugImageManipulations(): boolean {\n    return environment.debugImageManipulations;\n  }\n\n  /**\n   * Patches the ngx-pinch-zoom component by not taking the cursors offset into account when zooming into the video stream.\n   * @private\n   */\n  private centerContentOnZoom(): void {\n    Object.defineProperty(this.pinchZoomComponent.pinchZoom, 'moveX', {\n      get() {\n        return -Math.abs((this.element.offsetWidth * (1 - this.scale)) / 2);\n      },\n      set() {\n        return;\n      },\n    });\n\n    Object.defineProperty(this.pinchZoomComponent.pinchZoom, 'moveY', {\n      get() {\n        return -Math.abs((this.element.offsetHeight * (1 - this.scale)) / 2);\n      },\n      set() {\n        return;\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n    \n    \n  \n\n  Powered by SnapOdds\n\n\n\n  \n\n\n    \n\n    \n                \n                    ./webcam.component.scss\n                \n                @use 'tools';\n@use 'settings';\n@use 'sass:math';\n\n$viewfinder-stroke-width: 4px;\n$viewfinder-stand-offset: 7%;\n\n@mixin aspect-ratio {\n  aspect-ratio: 375/295;\n\n  @include tools.media-tiny--portrait {\n    aspect-ratio: 16/9;\n  }\n}\n\n:host {\n  background-color: #000;\n  display: block;\n\n  /* stylelint-disable-next-line selector-pseudo-element-no-unknown */\n  ::ng-deep {\n    .webcam-wrapper {\n      @include aspect-ratio;\n\n      align-items: center;\n      display: flex !important;\n      overflow: hidden;\n    }\n\n    video {\n      height: auto !important;\n      width: 100% !important;\n    }\n\n    pinch-zoom {\n      display: flex;\n    }\n  }\n\n  .c-camera {\n    &--container {\n      @include aspect-ratio;\n\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n      position: relative;\n    }\n\n    &--viewfinder {\n      left: 50%;\n      pointer-events: none;\n      position: absolute;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      width: 90%;\n      z-index: map-get(settings.$z-index, 'viewfinder');\n\n      &__tv-frame {\n        border: $viewfinder-stroke-width solid #fff;\n        box-shadow: 0 0 0 999px rgb(0 0 0 / 50%);\n        content: '';\n        display: block;\n        padding-top: math.div(9, 16) * 100%;\n        position: relative;\n      }\n\n      &__tv-stand {\n        border-bottom: $viewfinder-stroke-width solid #fff;\n        border-radius: 5px;\n        bottom: -$viewfinder-stand-offset;\n        left: 50%;\n        position: absolute;\n        transform: translate(-50%, $viewfinder-stand-offset);\n        width: 15%;\n      }\n\n      &__tv-connector {\n        border-left: $viewfinder-stroke-width solid #fff;\n        bottom: -$viewfinder-stand-offset;\n        content: '';\n        height: $viewfinder-stand-offset;\n        left: 50%;\n        position: absolute;\n        transform: translate(-50%, 0);\n      }\n    }\n\n    &--footer {\n      &__powered-by {\n        bottom: settings.$spacing-sm;\n        color: #fff;\n        font-size: settings.$font-xs;\n        font-weight: 200;\n        left: 0;\n        position: absolute;\n        right: 0;\n        text-align: center;\n        z-index: map-get(settings.$z-index, 'viewfinder') + 1;\n\n        /* stylelint-disable-next-line max-nesting-depth*/\n        @include tools.media-tiny--portrait {\n          bottom: settings.$spacing-xs;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Powered by SnapOdds  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WebcamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/snapodds/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                33 %\n                (6/18)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/content/content.component.ts\n            \n            component\n            ContentComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/help/help.component.ts\n            \n            component\n            HelpComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/odds/odds.component.ts\n            \n            component\n            OddsComponent\n            \n                41 %\n                (5/12)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/snap/snap.component.ts\n            \n            component\n            SnapComponent\n            \n                61 %\n                (11/18)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/spinner/spinner.component.ts\n            \n            component\n            SpinnerComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/svgs/switch.svg.component.ts\n            \n            component\n            SwitchSvgComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/svgs/trigger.svg.component.ts\n            \n            component\n            TriggerSvgComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/trigger/trigger.component.ts\n            \n            component\n            TriggerComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/user-feedback-message/user-feedback-message.component.ts\n            \n            component\n            UserFeedbackMessageComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/webcam/webcam.component.ts\n            \n            component\n            WebcamComponent\n            \n                47 %\n                (10/21)\n            \n        \n        \n            \n                \n                apps/snapodds/src/config/application-config.ts\n            \n            interface\n            ApplicationConfig\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                apps/snapodds/src/models/line-odds.ts\n            \n            interface\n            LineOdds\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/snapodds/src/models/sports-book-line.ts\n            \n            interface\n            SportsBookLine\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                apps/snapodds/src/models/sports-book.ts\n            \n            interface\n            SportsBook\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/api/api-errors.ts\n            \n            class\n            TvSearchNoResultError\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/api/odds.service.ts\n            \n            injectable\n            OddsService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/api/tv-search.service.ts\n            \n            injectable\n            TvSearchService\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/config/application-config.service.ts\n            \n            injectable\n            ApplicationConfigService\n            \n                66 %\n                (12/18)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/config/application-config.service.ts\n            \n            variable\n            DEFAULT_APPLICATION_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/i18n/file-translate-loader.ts\n            \n            class\n            FileTranslateLoader\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/i18n/translation-entries.ts\n            \n            interface\n            TranslationEntries\n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts\n            \n            injectable\n            ImageManipulationService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/logger/log-level.ts\n            \n            function\n            fromLogLevel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/logger/log-level.ts\n            \n            function\n            toLogLevel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/logger/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/notification/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/snap-odds/snap-odds-facade.service.ts\n            \n            injectable\n            SnapOddsFacade\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tokens/console-token.ts\n            \n            variable\n            CONSOLE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tokens/document-token.ts\n            \n            variable\n            DOCUMENT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tokens/location-token.ts\n            \n            variable\n            LOCATION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tokens/navigator-token.ts\n            \n            variable\n            NAVIGATOR\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tokens/storage-token.ts\n            \n            variable\n            STORAGE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tokens/window-token.ts\n            \n            variable\n            WINDOW\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tracking/google-analytics.service.ts\n            \n            injectable\n            GoogleAnalyticsService\n            \n                31 %\n                (5/16)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tracking/google-analytics.service.ts\n            \n            variable\n            ga\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tracking/google-analytics.service.ts\n            \n            variable\n            gtag\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/states/app-state.store.ts\n            \n            injectable\n            AppStateStore\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                apps/snapodds/src/states/media-device-state.store.ts\n            \n            injectable\n            MediaDeviceStateStore\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/auth/access-token.ts\n            \n            interface\n            AccessToken\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/link.ts\n            \n            interface\n            Link\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/odds/competitor.ts\n            \n            interface\n            Competitor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/odds/odds-offer-outcome.ts\n            \n            interface\n            OddsOfferOutcome\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/odds/odds-offer.ts\n            \n            interface\n            OddsOffer\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/odds/odds-response.ts\n            \n            interface\n            OddsResponse\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/odds/player.ts\n            \n            interface\n            Player\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/odds/sports-book.ts\n            \n            interface\n            SportsBook\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/tv-search/point2d.ts\n            \n            interface\n            Point2d\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/tv-search/quadrangle2d.ts\n            \n            interface\n            Quadrangle2d\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/tv-search/sport-event.ts\n            \n            interface\n            SportEvent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/tv-search/tv-channel.ts\n            \n            interface\n            TvChannel\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/tv-search/tv-search-result-entry.ts\n            \n            interface\n            TvSearchResultEntry\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/tv-search/tv-search-result.ts\n            \n            interface\n            TvSearchResult\n            \n                100 %\n                (4/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 13.1.3\n        \n            @angular/common : 13.1.3\n        \n            @angular/compiler : 13.1.3\n        \n            @angular/core : 13.1.3\n        \n            @angular/elements : 13.1.3\n        \n            @angular/forms : 13.1.3\n        \n            @angular/platform-browser : 13.1.3\n        \n            @angular/platform-browser-dynamic : 13.1.3\n        \n            @angular/router : 13.1.3\n        \n            @ngx-translate/core : ^14.0.0\n        \n            @nrwl/angular : 13.4.6\n        \n            cors : ^2.8.5\n        \n            date-fns : ^2.28.0\n        \n            dotenv : ^10.0.0\n        \n            express : 4.17.1\n        \n            ngx-pinch-zoom : ^2.6.2\n        \n            ngx-webcam : ^0.4.1\n        \n            rxjs : ~7.4.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppState   (apps/.../app-state.store.ts)\n                        \n                        \n                            LogLevel   (apps/.../log-level.ts)\n                        \n                        \n                            MediaDeviceState   (apps/.../media-device-state.store.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/snapodds/src/states/app-state.store.ts\n    \n        \n            \n                \n                    \n                        \n                        AppState\n                    \n                \n                    \n                        \n                            The various AppStates which are used for determining which view to render\n\n                        \n                    \n                        \n                            \n                                 SHOW_HELP\n                            \n                        \n                        \n                            \n                                Value : SHOW_HELP\n                            \n                        \n                        \n                            \n                                 SHOW_ODDS\n                            \n                        \n                        \n                            \n                                Value : SHOW_ODDS\n                            \n                        \n                        \n                            \n                                 SNAP_READY\n                            \n                        \n                        \n                            \n                                Value : SNAP_READY\n                            \n                        \n                        \n                            \n                                 SNAP_IN_PROGRESS\n                            \n                        \n                        \n                            \n                                Value : SNAP_IN_PROGRESS\n                            \n                        \n                        \n                            \n                                 SNAP_FAILED\n                            \n                        \n                        \n                            \n                                Value : SNAP_FAILED\n                            \n                        \n                        \n                            \n                                 SNAP_NO_RESULTS\n                            \n                        \n                        \n                            \n                                Value : SNAP_NO_RESULTS\n                            \n                        \n                        \n                            \n                                 DEVICE_NO_CAMERA\n                            \n                        \n                        \n                            \n                                Value : DEVICE_NO_CAMERA\n                            \n                        \n                        \n                            \n                                 DEVICE_NO_PERMISSION\n                            \n                        \n                        \n                            \n                                Value : DEVICE_NO_PERMISSION\n                            \n                        \n            \n        \n\n    apps/snapodds/src/services/logger/log-level.ts\n    \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                    \n                        \n                            Possible LogLevels, ordered by severity\n\n                        \n                    \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 SILENT\n                            \n                        \n            \n        \n\n    apps/snapodds/src/states/media-device-state.store.ts\n    \n        \n            \n                \n                    \n                        \n                        MediaDeviceState\n                    \n                \n                    \n                        \n                            The various MediaDeviceState which are used rendering user feedback\n\n                        \n                    \n                        \n                            \n                                 DEVICE_INIT\n                            \n                        \n                        \n                            \n                                Value : DEVICE_INIT\n                            \n                        \n                        \n                            \n                                 DEVICE_CAMERA_READY\n                            \n                        \n                        \n                            \n                                Value : DEVICE_CAMERA_READY\n                            \n                        \n                        \n                            \n                                 DEVICE_NO_PERMISSION\n                            \n                        \n                        \n                            \n                                Value : DEVICE_NO_PERMISSION\n                            \n                        \n                        \n                            \n                                 DEVICE_NO_CAMERA\n                            \n                        \n                        \n                            \n                                Value : DEVICE_NO_CAMERA\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            fromLogLevel   (apps/.../log-level.ts)\n                        \n                        \n                            toLogLevel   (apps/.../log-level.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/snapodds/src/services/logger/log-level.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fromLogLevel\n                        \n                    \n                \n            \n            \n                \nfromLogLevel(logLevel: LogLevel)\n                \n            \n\n\n\n\n            \n                \n                    Convert LogLevel to string representation\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logLevel\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toLogLevel\n                        \n                    \n                \n            \n            \n                \ntoLogLevel(logLevel)\n                \n            \n\n\n\n\n            \n                \n                    Convert a string to a LogLevel\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logLevel\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LogLevel\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSnapOdds\nThis project was generated using Nx.\nDocumentation\nClient Documentation\nSource Code Documentation\nProjects\n\nSnapOdds\nSnapOdds is the main application and contains the angular element which is distributed as web component.\n\nSnapOdds Api\nSnapOdds API app is an express.js server which is used for development.\n\nSnapOdds Builder\nSnapOdds Builder is used to provide a wrapper for the initialization and configuration of the SnapOdds web component.\n\n\nLibraries\n\nResponses\nIt contains the typings for the REST endpoints of the SnapScreen API.\n\nDevelopment server\nRun ng serve snapodds for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nRun ng serve snapodds-api for a dev api server available on http://localhost:3333/\nCode scaffolding\nRun ng g component my-component --project=snapodds to generate a new component.\nBuild\nRun ng build snapodds to build the project. The build artifacts will be stored in the dist/snapodds directory. Use the --prod flag for a production build.\nRelease\nRun npm run build:elements to build the project and all its peer dependencies. The build artifacts will be stored in the dist/elements/ directory.\nRunning all unit tests\nRun npm run test to execute all unit tests via Jest.\nRun nx affected:test to execute only the unit tests affected by a change.\nUnderstand your workspace\nRun nx dep-graph to see a diagram of the dependencies of your projects.\nFurther help\nNx Documentation\n10-minute video showing all Nx features\nInteractive Tutorial\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nAppModule -->\n\nContentComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHelpComponent\n\nHelpComponent\n\nAppModule -->\n\nHelpComponent->AppModule\n\n\n\n\n\nOddsComponent\n\nOddsComponent\n\nAppModule -->\n\nOddsComponent->AppModule\n\n\n\n\n\nSnapComponent\n\nSnapComponent\n\nAppModule -->\n\nSnapComponent->AppModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nAppModule -->\n\nSpinnerComponent->AppModule\n\n\n\n\n\nSwitchSvgComponent\n\nSwitchSvgComponent\n\nAppModule -->\n\nSwitchSvgComponent->AppModule\n\n\n\n\n\nTriggerComponent\n\nTriggerComponent\n\nAppModule -->\n\nTriggerComponent->AppModule\n\n\n\n\n\nTriggerSvgComponent\n\nTriggerSvgComponent\n\nAppModule -->\n\nTriggerSvgComponent->AppModule\n\n\n\n\n\nUserFeedbackMessageComponent\n\nUserFeedbackMessageComponent\n\nAppModule -->\n\nUserFeedbackMessageComponent->AppModule\n\n\n\n\n\nWebcamComponent\n\nWebcamComponent\n\nAppModule -->\n\nWebcamComponent->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    19 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ManipulatedImage   (apps/.../manipulated-image.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/snapodds/src/services/image-manipulation/manipulated-image.ts\n    \n    \n        \n            \n                \n                    \n                    ManipulatedImage\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CONSOLE   (apps/.../console-token.ts)\n                        \n                        \n                            DEFAULT_APPLICATION_CONFIG   (apps/.../application-config.service.ts)\n                        \n                        \n                            DOCUMENT   (apps/.../document-token.ts)\n                        \n                        \n                            ga   (apps/.../google-analytics.service.ts)\n                        \n                        \n                            gtag   (apps/.../google-analytics.service.ts)\n                        \n                        \n                            LOCATION   (apps/.../location-token.ts)\n                        \n                        \n                            NAVIGATOR   (apps/.../navigator-token.ts)\n                        \n                        \n                            STORAGE   (apps/.../storage-token.ts)\n                        \n                        \n                            WINDOW   (apps/.../window-token.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/snapodds/src/services/tokens/console-token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CONSOLE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('browser console implementation', {\n  providedIn: 'root',\n  factory: () => console,\n})\n                    \n                \n\n            \n                \n                    InjectionToken for the browser console implementation\n\n                \n            \n\n        \n    \n\n    apps/snapodds/src/services/config/application-config.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_APPLICATION_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  apiUrl: 'https://api.us.snapscreen.com',\n  language: 'en',\n  autoSnap: false,\n  logLevel: LogLevel.SILENT,\n  vibrate: false,\n  logCallback: noop,\n  closeCallback: noop,\n  resultsCallback: noop,\n  accessTokenProvider: () => Promise.reject('No accessTokenProvider specified'),\n}\n                    \n                \n\n            \n                \n                    Default application configuration\n\n                \n            \n\n        \n    \n\n    apps/snapodds/src/services/tokens/document-token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DOCUMENT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('browser document implementation', {\n  providedIn: 'root',\n  factory: () => document,\n})\n                    \n                \n\n            \n                \n                    InjectionToken for the browser document implementation\n\n                \n            \n\n        \n    \n\n    apps/snapodds/src/services/tracking/google-analytics.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ga\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Function\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gtag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Function\n\n                    \n                \n\n\n        \n    \n\n    apps/snapodds/src/services/tokens/location-token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOCATION\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('browser location implementation', {\n  providedIn: 'root',\n  factory: () => location,\n})\n                    \n                \n\n            \n                \n                    InjectionToken for the browser location implementation\n\n                \n            \n\n        \n    \n\n    apps/snapodds/src/services/tokens/navigator-token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NAVIGATOR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('browser navigator implementation', {\n  providedIn: 'root',\n  factory: () => navigator,\n})\n                    \n                \n\n            \n                \n                    InjectionToken for the browser navigator implementation\n\n                \n            \n\n        \n    \n\n    apps/snapodds/src/services/tokens/storage-token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        STORAGE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('browser local storage implementation', {\n  providedIn: 'root',\n  factory: () => localStorage,\n})\n                    \n                \n\n            \n                \n                    InjectionToken for the browser local storage implementation\n\n                \n            \n\n        \n    \n\n    apps/snapodds/src/services/tokens/window-token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        WINDOW\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('browser window implementation', {\n  providedIn: 'root',\n  factory: () => window,\n})\n                    \n                \n\n            \n                \n                    InjectionToken for the browser window implementation\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
