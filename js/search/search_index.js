var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AccessToken.html",[0,0.358,1,1.819]],["body/interfaces/AccessToken.html",[0,0.488,1,3.033,2,1.405,3,0.23,4,0.23,5,0.23,6,4.347,7,3.877,8,0.29,9,1.039,10,6.965,11,1.316,12,6.965,13,6.965,14,6.965,15,6.965,16,6.965,17,1.752,18,0.462,19,0.019,20,2.257,21,0.26,22,0.015,23,0.015]],["title/components/AppComponent.html",[24,0.657,25,1.192]],["body/components/AppComponent.html",[1,1.139,3,0.106,4,0.106,5,0.106,8,0.133,9,0.604,11,0.637,17,1.35,18,0.421,19,0.019,21,0.119,22,0.009,23,0.009,24,0.949,25,1.592,26,1.343,27,1.73,28,0.962,29,1.73,30,0.913,31,1.995,32,2.14,33,3.371,34,0.867,35,2.694,36,2.559,37,4.343,38,1.49,39,4.402,40,1.573,41,3.597,42,2.369,43,3.398,44,1.048,45,4.256,46,3.796,47,4.956,48,4.956,49,4.956,50,2.948,51,3.452,52,2.948,53,2.948,54,3.452,55,3.635,56,3.452,57,2.977,58,3.452,59,3.177,60,3.452,61,1.276,62,1.618,63,2.349,64,5.913,65,3.371,66,2.948,67,3.284,68,1.694,69,2.323,70,1.048,71,0.745,72,2.948,73,2.323,74,2.323,75,1.948,76,2.323,77,2.323,78,2.323,79,2.323,80,2.323,81,2.323,82,3.597,83,2.323,84,2.323,85,3.597,86,2.755,87,3.597,88,3.597,89,1.998,90,2.14,91,1.873,92,1.696,93,2.408,94,2.323,95,2.755,96,3.09,97,1.763,98,3.09,99,3.452,100,3.597,101,3.597,102,2.323,103,1.414,104,3.09,105,3.09,106,2.323,107,3.597,108,2.505,109,1.998,110,3.597,111,3.597,112,2.323,113,2.505,114,3.09,115,3.09,116,2.505,117,3.45,118,3.635,119,0.824,120,1.283,121,2.323,122,3.597,123,2.755,124,2.14,125,1.873,126,3.09,127,3.597,128,2.323,129,2.323,130,1.414,131,2.755,132,2.323,133,0.612,134,4.182,135,0.48,136,1.489,137,1.618,138,1.074,139,1.618,140,1.139,141,1.779,142,1.995,143,1.618,144,1.995,145,1.779,146,1.29,147,1.489,148,1.489,149,0.39,150,1.489,151,1.139,152,1.29,153,1.995,154,2.323,155,3.597,156,2.323,157,0.824,158,1.516,159,2.323,160,2.323,161,2.323,162,2.323,163,2.323,164,2.323,165,2.323,166,2.323,167,2.323,168,2.323,169,2.323,170,2.323,171,2.323,172,2.323,173,2.323,174,2.323,175,1.779,176,1.49,177,1.139,178,1.074,179,0.962,180,1.998,181,1.763,182,1.873,183,1.139,184,1.074,185,1.873,186,1.016,187,2.445,188,3.597,189,2.107,190,2.323,191,1.21,192,2.323,193,1.489,194,1.779,195,1.382,196,1.489,197,2.323,198,0.913,199,1.414,200,1.276,201,0.913,202,0.913,203,0.913,204,0.747,205,0.913,206,0.747,207,0.913,208,0.747,209,0.913,210,0.747,211,0.913,212,0.747,213,0.913,214,0.747,215,0.913,216,0.747,217,0.913,218,0.747,219,0.867,220,1.414,221,0.747,222,0.913,223,0.747,224,0.747,225,0.614,226,0.747,227,0.913,228,0.747,229,0.784,230,0.913,231,0.913]],["title/modules/AppModule.html",[232,3.187,233,2.585]],["body/modules/AppModule.html",[3,0.154,4,0.154,5,0.154,19,0.019,21,0.174,22,0.012,23,0.012,24,1.054,25,2.189,32,2.015,37,2.595,44,0.987,68,0.813,92,0.94,93,1.202,113,3.311,133,0.775,135,0.7,136,3.52,137,2.36,149,0.569,204,2.089,206,2.089,208,2.089,210,2.089,212,2.089,214,2.089,216,2.089,218,2.089,221,2.089,223,2.089,224,2.089,225,0.896,226,1.527,228,2.089,229,1.144,233,5.308,234,2.595,235,3.047,236,2.91,237,2.91,238,3.825,239,1.882,240,2.595,241,3.388,242,4.753,243,4.753,244,5.491,245,3.388,246,4.083,247,4.083,248,4.753,249,2.595,250,4.753,251,5.953,252,4.753,253,3.388,254,2.91,255,4.753,256,2.91,257,2.015,258,4.083,259,3.388,260,4.753,261,2.595,262,4.753,263,3.311,264,3.388,265,1.567,266,4.753,267,3.388,268,3.388,269,3.388,270,3.388,271,3.388,272,3.388,273,3.388,274,3.388,275,3.388,276,3.388,277,3.388,278,2.595,279,3.388,280,2.91,281,3.388,282,3.388,283,3.388,284,2.36,285,2.91,286,3.388,287,2.015,288,1.764,289,4.753,290,3.388,291,3.388,292,3.388]],["title/injectables/AppStateStore.html",[67,2.061,293,0.89]],["body/injectables/AppStateStore.html",[3,0.182,4,0.182,5,0.182,8,0.229,9,0.894,11,0.708,18,0.338,19,0.019,21,0.273,22,0.013,23,0.013,42,2.307,44,1.552,67,2.957,68,1.594,70,1.165,71,0.601,89,2.221,92,1.478,93,1.889,103,1.711,119,2.124,120,1.744,130,1.571,133,0.551,135,0.826,146,3.935,149,0.671,157,1.419,158,2.195,293,1.277,294,1.656,295,5.235,296,2.785,297,5.141,298,5.985,299,5.991,300,4.573,301,4.888,302,4.573,303,3.998,304,4.078,305,3.998,306,4.573,307,4.078,308,3.257,309,1.987,310,4.573,311,3.998,312,5.324,313,5.324,314,3.998,315,4.078,316,5.324,317,3.708,318,4.573,319,3.998,320,2.379,321,3.434,322,1.749,323,2.785,324,3.434,325,3.434,326,2.563,327,3.434,328,4.573,329,4.573,330,4.078,331,4.573,332,4.573,333,4.573,334,4.078,335,4.078,336,1.656,337,1.656,338,3.434,339,1.493,340,3.434]],["title/interfaces/ApplicationConfig.html",[0,0.358,97,1.819]],["body/interfaces/ApplicationConfig.html",[0,0.37,1,2.874,2,1.066,3,0.175,4,0.175,5,0.175,8,0.22,9,0.87,17,1.577,18,0.452,19,0.019,21,0.197,22,0.013,23,0.013,37,5.174,43,2,51,4.373,52,4.018,53,3.735,54,4.373,55,4.33,56,4.373,57,4.03,58,4.373,59,4.33,72,4.177,75,2.655,89,3.487,90,3.082,93,2.081,97,2.539,117,3.27,130,2.655,131,3.969,133,0.536,138,1.776,142,3.298,143,2.674,150,2.462,151,1.882,152,2.133,341,3.298,342,3.298,343,4.33,344,5.174,345,3.969,346,6.278,347,6.278,348,3.969,349,5.181,350,5.181,351,4.45,352,2.539,353,5.181,354,5.181,355,4.45,356,3.969,357,5.181,358,2.698,359,3.969,360,3.609,361,5.181]],["title/injectables/ApplicationConfigService.html",[63,1.537,293,0.89]],["body/injectables/ApplicationConfigService.html",[1,1.106,3,0.103,4,0.103,5,0.103,8,0.129,9,0.59,11,0.936,17,1.114,18,0.404,19,0.019,20,2.042,21,0.116,22,0.009,23,0.009,42,2.372,44,1.025,51,4.074,52,2.57,53,3.146,54,1.571,55,2.77,56,1.571,57,3.596,58,1.571,59,2.77,60,2.449,63,1.457,68,1.675,70,1.541,71,0.795,75,2.299,90,2.092,91,1.831,92,2.008,93,2.147,97,2.965,103,1.13,108,1.571,109,1.953,116,3.398,117,2.917,119,2.206,120,1.812,123,2.693,125,1.831,130,1.382,133,0.547,135,0.466,138,1.043,143,1.571,149,0.379,150,2.254,151,2.592,152,1.253,157,2.206,158,2.012,225,0.93,240,2.693,284,1.571,288,1.175,293,0.843,294,0.935,322,0.987,336,0.935,337,0.935,339,2.091,343,3.591,352,1.723,358,1.831,362,5.383,363,1.728,364,4.32,365,4.32,366,4.32,367,5.602,368,4.32,369,4.878,370,3.516,371,3.516,372,4.878,373,3.516,374,4.878,375,4.878,376,4.878,377,4.878,378,4.878,379,3.516,380,3.516,381,2.256,382,3.902,383,3.02,384,3.516,385,2.256,386,1.953,387,2.092,388,3.516,389,2.256,390,3.516,391,2.902,392,3.516,393,2.256,394,2.693,395,1.831,396,3.02,397,3.516,398,3.516,399,2.256,400,3.398,401,2.693,402,0.443,403,5.288,404,2.709,405,2.693,406,3.02,407,3.02,408,3.02,409,2.092,410,2.693,411,2.256,412,2.256,413,2.256,414,3.02,415,3.516,416,3.02,417,2.256,418,3.398,419,3.02,420,2.256,421,2.693,422,1.953,423,3.516,424,6.05,425,2.256,426,3.02,427,2.693,428,4.878,429,2.77,430,3.516,431,2.256,432,3.516,433,3.516,434,2.256,435,3.516,436,2.256,437,3.516,438,2.256,439,3.736,440,2.256,441,3.516,442,2.256,443,2.256,444,2.256,445,4.19,446,1.342,447,1.728,448,2.256,449,1.728,450,1.938,451,1.938,452,1.938,453,1.938,454,2.256,455,2.256,456,2.256,457,4.32,458,3.516,459,2.256,460,2.256,461,2.256,462,2.256,463,2.256,464,2.256,465,2.256,466,2.256,467,2.256,468,2.256,469,2.256,470,2.256,471,2.256,472,2.256]],["title/injectables/AuthService.html",[293,0.89,473,2.379]],["body/injectables/AuthService.html",[1,3.612,3,0.153,4,0.153,5,0.153,8,0.193,9,0.794,11,1.148,17,1.522,18,0.397,19,0.019,20,1.136,21,0.173,22,0.012,23,0.012,42,2.433,44,1.379,61,1.194,62,2.343,63,2.687,68,1.658,70,1.379,71,0.711,75,2.333,86,3.623,92,1.85,95,3.623,109,2.627,119,1.194,120,0.98,133,0.647,135,0.695,138,1.556,140,1.649,149,0.565,157,2.301,158,1.816,287,2.001,293,1.135,294,1.394,308,2.681,309,1.766,320,2.001,322,1.471,336,1.394,337,1.394,339,1.256,343,3.032,360,3.295,402,0.661,429,3.032,446,2.001,473,3.032,474,2.889,475,5.471,476,5.471,477,5.935,478,5.935,479,5.935,480,5.935,481,4.73,482,4.73,483,3.364,484,4.73,485,3.364,486,4.063,487,3.531,488,4.73,489,5.935,490,5.366,491,3.364,492,3.623,493,4.73,494,5.935,495,4.73,496,4.73,497,3.364,498,5.935,499,3.295,500,4.73,501,4.73,502,4.73,503,4.73,504,3.364,505,4.73,506,4.063,507,4.73,508,3.623,509,4.73,510,3.364,511,3.364,512,4.063,513,3.364,514,3.364,515,2.889,516,3.364,517,3.364,518,3.364,519,3.364,520,3.364,521,3.364,522,3.364,523,3.364,524,5.471,525,3.364,526,3.364,527,3.364,528,3.364]],["title/interfaces/Competitor.html",[0,0.358,529,2.208]],["body/interfaces/Competitor.html",[0,0.511,2,1.47,3,0.241,4,0.241,5,0.241,8,0.304,9,1.068,17,1.557,18,0.404,19,0.019,20,2.302,21,0.272,22,0.016,23,0.016,71,1.104,352,3.341,402,1.04,529,4.419,530,4.547,531,4.055,532,2.757,533,4.056,534,4.371]],["title/components/ContentComponent.html",[24,0.657,204,1.192]],["body/components/ContentComponent.html",[3,0.207,4,0.207,5,0.207,19,0.019,21,0.234,22,0.014,23,0.014,24,1.128,25,1.461,26,2.161,27,2.275,28,1.884,29,1.787,30,1.787,34,1.697,35,2.981,36,2.831,38,2.398,71,0.87,103,1.461,133,0.471,135,0.94,149,0.763,179,1.884,184,2.103,185,3.317,189,2.635,198,1.787,199,2.275,200,2.054,201,1.787,202,1.787,203,1.787,204,2.154,205,1.787,206,1.461,207,1.787,208,1.461,209,1.787,210,1.461,211,1.787,212,1.461,213,1.787,214,1.461,215,1.787,216,1.461,217,1.787,218,1.461,219,1.697,220,2.275,221,1.461,222,1.787,223,1.461,224,1.461,225,1.203,226,1.461,227,1.787,228,1.461,229,1.535,230,1.787,231,1.787,535,3.906,536,3.789,537,6.369,538,4.972,539,2.915,540,2.915,541,3.483,542,3.483,543,3.167,544,3.483]],["title/classes/FileTranslateLoader.html",[149,0.623,263,2.585]],["body/classes/FileTranslateLoader.html",[3,0.195,4,0.195,5,0.195,8,0.246,9,0.937,11,0.761,17,1.416,18,0.354,19,0.019,21,0.221,22,0.014,23,0.014,32,3.321,42,2.216,44,1.627,55,4.208,68,1.339,70,1.252,71,0.646,92,1.193,98,5.325,114,6.097,119,1.525,120,1.252,133,0.704,136,2.755,137,2.993,149,0.721,157,1.525,158,1.897,258,5.325,263,3.888,265,2.867,284,3.888,308,3.039,309,2.084,320,4.148,322,1.879,339,1.604,391,3.321,402,0.844,427,5.21,545,3.291,546,5.325,547,3.691,548,5.582,549,6.2,550,5.582,551,6.2,552,4.297,553,5.582,554,5.582,555,4.794,556,3.888,557,5.582,558,5.582,559,4.794,560,5.582,561,4.297,562,4.794,563,5.582,564,5.582,565,5.582,566,3.888,567,2.993,568,4.297,569,4.297,570,4.297]],["title/components/FooterComponent.html",[24,0.657,206,1.192]],["body/components/FooterComponent.html",[3,0.202,4,0.202,5,0.202,19,0.019,21,0.228,22,0.014,23,0.014,24,1.115,25,1.426,26,2.128,27,2.24,28,1.839,29,1.745,30,1.745,34,1.657,35,2.972,36,2.823,38,2.362,71,0.857,103,1.426,133,0.459,135,0.917,149,0.745,176,2.362,177,2.175,178,2.053,179,1.839,184,2.053,185,3.28,189,2.611,198,1.745,199,2.24,200,2.023,201,1.745,202,1.745,203,1.745,204,1.426,205,1.745,206,2.135,207,1.745,208,1.426,209,1.745,210,1.426,211,1.745,212,1.426,213,1.745,214,1.426,215,1.745,216,1.426,217,1.745,218,1.426,219,1.657,220,2.24,221,1.426,222,1.745,223,1.426,224,1.426,225,1.174,226,1.426,227,1.745,228,1.426,229,1.498,230,1.745,231,1.745,539,2.846,540,2.846,571,3.813,572,3.97,573,6.297,574,4.439,575,2.175,576,3.97,577,3.654,578,3.166,579,3.092,580,2.312,581,2.641,582,2.641,583,2.641,584,2.641]],["title/injectables/GoogleAnalyticsService.html",[66,2.208,293,0.89]],["body/injectables/GoogleAnalyticsService.html",[3,0.122,4,0.122,5,0.122,8,0.153,9,0.672,11,1.099,17,1.593,18,0.415,19,0.019,20,2.308,21,0.137,22,0.01,23,0.01,42,2.446,44,1.166,61,0.948,66,2.381,68,1.688,70,1.809,71,0.933,72,3.169,75,2.094,92,1.898,93,2.426,99,3.71,109,2.223,115,3.437,119,1.42,120,1.902,133,0.414,135,0.552,149,0.449,157,1.42,158,1.899,287,1.59,288,2.084,293,0.96,294,1.107,336,1.107,337,1.107,339,1.988,352,3.258,386,2.223,402,0.525,585,5.428,586,2.047,587,4.121,588,4.121,589,5.327,590,5.327,591,5.327,592,5.327,593,5.327,594,5.327,595,4.002,596,4.002,597,4.002,598,4.002,599,4.002,600,4.002,601,2.047,602,2.935,603,4.002,604,2.673,605,5.327,606,5.988,607,5.327,608,3.798,609,2.673,610,5.988,611,2.673,612,2.673,613,2.673,614,2.673,615,4.002,616,2.673,617,5.143,618,4.002,619,2.673,620,4.002,621,2.673,622,4.002,623,2.673,624,4.002,625,4.002,626,6.749,627,6.528,628,2.295,629,4.002,630,2.673,631,4.575,632,4.002,633,2.673,634,4.002,635,2.673,636,4.002,637,1.861,638,4.002,639,3.065,640,3.065,641,2.295,642,2.673,643,2.673,644,2.673,645,2.673,646,2.673,647,2.673,648,4.798,649,2.673,650,2.673,651,2.673,652,2.673,653,2.295,654,1.851,655,2.295,656,3.437,657,2.673,658,2.673,659,2.673,660,2.673,661,2.673,662,1.861,663,4.002,664,2.295,665,2.673,666,2.673,667,2.673,668,2.673,669,2.673,670,2.673,671,2.673,672,2.673,673,2.673,674,2.673,675,2.673]],["title/components/HeaderComponent.html",[24,0.657,208,1.192]],["body/components/HeaderComponent.html",[3,0.159,4,0.159,5,0.159,8,0.201,11,0.62,18,0.222,19,0.019,21,0.18,22,0.012,23,0.012,24,0.99,25,1.125,26,1.815,27,1.376,28,1.45,29,1.376,30,1.376,34,1.307,35,2.885,36,2.74,38,2.015,40,2.127,44,1.417,61,1.242,62,2.438,63,2.846,68,1.167,70,1.02,71,0.84,92,0.972,93,1.726,103,1.125,133,0.503,135,0.724,139,2.438,140,1.716,149,0.588,158,1.071,176,2.015,177,1.716,178,1.619,179,1.45,182,1.823,183,2.739,184,1.619,185,3.145,186,2.444,187,2.701,189,2.373,191,2.533,198,1.376,199,1.911,200,1.726,201,1.376,202,1.376,203,1.376,204,1.125,205,1.376,206,1.125,207,1.376,208,1.94,209,1.376,210,1.125,211,1.376,212,1.125,213,1.376,214,1.125,215,1.376,216,1.125,217,1.376,218,1.125,219,1.307,220,1.911,221,1.125,222,1.376,223,1.125,224,1.125,225,0.926,226,1.125,227,1.376,228,1.125,229,1.182,230,1.376,231,1.376,239,1.944,265,2.249,287,2.083,315,3.725,345,3.725,383,4.177,409,3.593,542,2.681,577,2.244,578,3.648,580,2.911,581,2.893,582,2.083,583,3.325,584,3.775,664,3.007,676,3.007,677,4.281,678,5.589,679,4.863,680,6.039,681,3.501,682,3.501,683,4.863,684,4.177,685,3.501,686,4.177,687,2.438,688,3.501,689,2.438,690,3.007,691,2.681,692,3.007,693,3.871,694,3.007,695,3.007,696,3.118,697,3.007,698,2.438,699,2.244,700,3.118,701,1.823,702,3.118,703,2.893,704,3.007,705,2.244,706,3.501,707,3.501,708,3.387,709,3.501,710,2.438,711,2.244]],["title/components/HelpComponent.html",[24,0.657,210,1.192]],["body/components/HelpComponent.html",[3,0.127,4,0.127,5,0.127,8,0.16,11,0.493,18,0.177,19,0.019,21,0.143,22,0.01,23,0.01,24,0.87,25,0.894,26,1.54,27,1.094,28,1.153,29,1.094,30,1.094,34,1.039,35,2.784,36,2.679,38,1.709,40,1.804,44,1.202,61,0.988,67,3.376,68,0.99,70,0.811,71,0.739,90,2.454,92,0.773,93,1.464,103,0.894,133,0.427,135,0.575,146,2.73,147,1.784,148,1.784,149,0.467,158,0.852,175,2.132,176,1.709,177,1.364,178,1.287,179,1.153,180,1.546,181,2.022,182,2.148,183,1.364,184,1.287,185,2.56,186,1.217,187,2.73,189,2.136,191,2.148,193,1.784,194,2.132,198,1.094,199,1.621,200,1.464,201,1.094,202,1.094,203,1.094,204,0.894,205,1.094,206,0.894,207,1.094,208,0.894,209,1.094,210,1.746,211,1.094,212,0.894,213,1.094,214,0.894,215,1.094,216,0.894,217,1.094,218,0.894,219,1.039,220,1.621,221,0.894,222,1.094,223,0.894,224,0.894,225,0.736,226,0.894,227,1.094,228,0.894,229,0.94,230,1.094,231,1.094,239,1.546,265,2.811,287,1.656,387,2.454,536,1.656,539,1.784,540,1.784,572,1.939,575,1.364,578,3.223,579,2.873,580,1.45,584,3.453,662,2.873,693,3.151,701,1.45,703,2.454,710,2.873,711,1.784,712,2.391,713,3.764,714,4.915,715,4.125,716,5.435,717,2.783,718,2.783,719,2.783,720,3.159,721,3.543,722,3.543,723,2.873,724,6.461,725,6.461,726,6.461,727,6.461,728,6.461,729,5.435,730,5.435,731,5.435,732,6.461,733,6.461,734,5.435,735,5.435,736,5.435,737,5.435,738,5.435,739,5.435,740,7.134,741,5.435,742,5.435,743,5.435,744,5.435,745,5.435,746,5.435,747,5.435,748,5.435,749,5.435,750,5.435,751,5.435,752,5.435,753,5.435,754,5.435,755,5.435,756,5.435,757,5.435,758,5.435,759,5.435,760,5.435,761,5.435,762,3.543,763,2.132,764,1.784,765,2.391,766,2.783,767,1.939,768,2.132]],["title/injectables/ImageManipulationService.html",[293,0.89,769,2.585]],["body/injectables/ImageManipulationService.html",[3,0.094,4,0.304,5,0.094,8,0.118,11,1,17,0.748,18,0.384,19,0.019,20,2.5,21,0.106,22,0.008,23,0.008,34,0.769,42,2.336,44,0.954,61,0.731,68,1.355,70,1.647,71,0.849,75,1.286,91,3.775,92,1.496,109,1.818,119,0.731,120,0.6,133,0.48,135,0.426,149,0.346,150,2.611,157,1.796,158,1.002,186,0.901,196,2.611,200,1.162,225,1.425,287,1.226,288,2.416,293,0.785,294,0.853,309,0.769,336,0.853,337,0.853,339,2.521,360,1.435,386,1.818,402,0.911,414,3.985,418,3.232,487,1.226,575,2.274,601,1.578,602,2.274,637,1.435,641,1.769,653,1.769,654,1.514,699,2.098,764,2.611,769,2.28,770,4.491,771,4.491,772,1.769,773,3.273,774,4.073,775,3.498,776,3.273,777,3.273,778,3.273,779,4.328,780,2.06,781,2.06,782,3.273,783,3.985,784,4.64,785,2.06,786,1.578,787,5.062,788,3.526,789,2.06,790,1.769,791,1.769,792,2.06,793,4.073,794,2.06,795,2.06,796,2.06,797,2.06,798,6.04,799,6.136,800,5.188,801,6.611,802,2.06,803,2.811,804,4.64,805,3.985,806,3.273,807,4.629,808,4.128,809,4.128,810,5.036,811,5.389,812,5.389,813,1.01,814,2.06,815,6.966,816,2.06,817,3.273,818,3.985,819,3.273,820,6.87,821,2.06,822,2.811,823,4.64,824,6.611,825,6.525,826,6.686,827,3.273,828,2.06,829,3.273,830,3.273,831,2.06,832,3.273,833,3.273,834,3.273,835,1.321,836,2.06,837,1.435,838,1.769,839,2.06,840,5.389,841,5.062,842,2.06,843,3.273,844,2.06,845,2.06,846,2.06,847,2.06,848,2.06,849,3.273,850,3.273,851,2.06,852,2.06,853,2.06,854,2.06,855,4.073,856,2.06,857,2.06,858,2.06,859,2.06,860,2.06,861,2.06,862,2.06,863,2.06,864,2.06,865,2.06,866,2.06,867,3.273,868,2.06,869,3.273,870,3.273,871,2.507,872,2.06,873,2.06,874,3.273]],["title/interfaces/LineOdds.html",[0,0.358,125,1.933]],["body/interfaces/LineOdds.html",[0,0.472,2,1.36,3,0.223,4,0.223,5,0.223,8,0.281,9,1.018,11,1.219,18,0.418,19,0.019,21,0.252,22,0.015,23,0.015,124,3.608,125,3.586,130,2.384,133,0.628,138,2.265,151,2.972,402,0.962,529,4.097,875,4.206,876,4.206,877,4.224,878,4.623,879,5.523,880,5.274,881,6.194,882,4.097,883,3.586,884,4.645,885,3.411,886,2.72]],["title/interfaces/Link.html",[0,0.358,887,1.716]],["body/interfaces/Link.html",[0,0.536,2,1.544,3,0.253,4,0.253,5,0.253,8,0.319,9,1.099,11,1.16,17,1.59,18,0.416,19,0.018,21,0.286,22,0.016,23,0.016,75,2.736,887,3.029,888,4.777,889,7.188,890,7.188]],["title/injectables/LoggerService.html",[293,0.89,602,1.819]],["body/injectables/LoggerService.html",[3,0.251,4,0.156,5,0.156,8,0.196,11,1.185,18,0.425,19,0.019,21,0.176,22,0.012,23,0.012,42,2.373,44,1.395,57,4.063,61,1.698,62,2.383,63,2.701,68,1.606,70,1.951,71,1.006,75,1.881,92,1.81,93,2.495,97,2.346,109,2.658,116,4.165,133,0.619,135,0.707,140,1.677,143,2.383,149,0.574,151,3.541,152,3.495,157,1.214,158,1.464,219,1.277,293,1.148,294,1.417,336,1.417,337,1.417,339,2.061,351,5.405,418,3.334,446,2.035,487,2.035,602,2.346,654,2.213,835,2.193,891,2.939,892,3.666,893,4.786,894,3.666,895,5.127,896,3.421,897,4.786,898,3.421,899,4.786,900,3.421,901,4.786,902,3.421,903,4.786,904,3.421,905,5.135,906,4.786,907,5.135,908,5.979,909,4.786,910,3.421,911,4.786,912,4.786,913,4.786,914,4.786,915,4.786,916,4.786,917,4.786,918,3.421,919,3.421,920,3.421,921,3.421,922,3.421,923,3.421,924,3.421,925,3.421,926,5.979,927,3.421,928,3.421,929,5.979,930,3.421,931,3.421,932,3.421,933,3.421,934,3.421,935,3.421,936,3.421,937,3.421]],["title/injectables/MediaDeviceStateStore.html",[293,0.89,938,2.379]],["body/injectables/MediaDeviceStateStore.html",[3,0.18,4,0.18,5,0.18,8,0.227,9,0.887,11,0.7,18,0.378,19,0.019,21,0.271,22,0.013,23,0.013,42,2.299,44,1.54,68,1.588,70,1.152,71,0.594,92,1.467,93,1.875,103,1.698,119,2.112,120,1.734,124,2.352,130,1.553,133,0.547,135,0.817,149,0.663,157,1.403,158,2.19,225,1.045,226,1.27,229,1.783,293,1.267,294,1.637,296,2.753,297,5.111,299,5.974,300,4.538,301,4.865,302,4.538,304,4.047,306,4.538,307,4.047,308,3.409,309,1.972,310,4.538,315,4.047,318,4.538,321,3.395,322,1.729,323,2.753,327,3.395,334,4.047,335,4.047,336,1.637,337,1.637,338,3.395,339,1.475,340,3.395,358,3.548,426,3.395,938,3.387,939,5.217,940,5.951,941,4.985,942,3.953,943,3.953,944,3.953,945,3.953,946,5.283,947,5.283,948,5.283,949,5.283,950,3.953,951,4.047,952,5.283,953,3.953,954,4.538,955,4.538]],["title/injectables/NotificationService.html",[293,0.89,956,2.585]],["body/injectables/NotificationService.html",[3,0.21,4,0.21,5,0.21,8,0.264,11,0.816,18,0.293,19,0.019,21,0.237,22,0.014,23,0.014,42,2.397,44,1.701,59,3.743,61,2.072,63,2.988,68,1.537,70,1.343,71,0.693,72,2.741,75,2.294,92,1.621,93,2.072,133,0.663,135,0.952,140,2.258,149,0.774,157,1.635,158,1.786,293,1.4,294,1.909,336,1.909,337,1.909,358,3.041,418,4.066,446,2.741,487,2.741,656,3.958,835,2.954,956,4.066,957,3.958,958,6.737,959,5.787,960,4.608,961,5.44,962,4.608,963,4.608,964,5.838,965,5.838,966,5.838,967,4.608,968,5.838,969,4.608,970,4.608,971,4.608,972,4.608,973,4.608,974,4.608]],["title/components/OddsComponent.html",[24,0.657,212,1.192]],["body/components/OddsComponent.html",[3,0.073,4,0.073,5,0.073,8,0.093,9,0.451,11,0.789,17,0.787,18,0.363,19,0.019,20,1.163,21,0.083,22,0.007,23,0.007,24,0.61,25,0.519,26,1.002,27,1.354,28,0.669,29,0.634,30,0.634,32,1.597,34,0.603,35,2.48,36,2.386,38,1.112,40,1.174,42,2.099,44,0.782,45,2.96,50,1.597,61,0.573,68,1.407,70,1.299,71,0.766,92,1.237,93,2.028,103,0.519,117,2.886,118,3.4,119,1.223,120,1.004,123,3.905,125,3.584,133,0.461,134,1.721,135,0.334,138,0.747,149,0.271,158,0.821,176,1.112,177,0.791,178,0.747,179,0.669,180,3.174,181,2.716,182,3.055,183,2.185,184,2.827,185,3.519,186,1.507,187,3.55,189,1.578,191,2.886,193,3.269,195,1.597,196,1.721,198,0.634,199,1.055,200,0.953,201,0.634,202,0.634,203,0.634,204,0.519,205,0.634,206,0.519,207,0.634,208,0.519,209,0.634,210,0.519,211,0.634,212,1.29,213,0.634,214,0.519,215,0.634,216,0.519,217,0.634,218,0.519,219,0.603,220,1.055,221,0.519,222,0.634,223,0.519,224,0.519,225,0.427,226,0.863,227,0.634,228,0.519,229,0.545,230,0.634,231,0.634,239,0.897,257,1.597,265,2.469,307,2.056,309,1.664,317,1.87,339,1.664,343,2.574,352,1.689,359,2.056,391,2.389,402,0.789,404,2.832,409,2.652,422,2.23,429,1.035,487,0.96,490,2.056,492,2.056,533,0.96,536,3.176,539,2.574,540,2.574,541,3.905,542,3.076,543,2.797,544,2.056,575,1.968,576,3.86,577,2.858,578,2.965,580,1.795,581,1.597,582,1.597,583,1.597,584,3.176,628,1.387,654,1.594,677,1.236,687,2.797,689,3.551,690,2.96,691,3.076,692,3.828,693,3.423,696,1.035,700,3.269,701,2.656,703,3.297,705,2.574,708,1.87,710,1.124,711,1.035,723,1.87,763,4.245,764,2.858,765,1.387,767,1.124,768,1.236,813,1.316,835,1.035,871,2.056,878,1.035,884,3.076,975,1.387,976,3.446,977,1.594,978,3.446,979,2.685,980,3.446,981,2.685,982,2.685,983,2.685,984,4.015,985,2.685,986,2.306,987,1.614,988,3.684,989,3.551,990,2.685,991,1.614,992,3.449,993,2.685,994,1.614,995,4.015,996,1.968,997,2.685,998,2.306,999,2.685,1000,2.306,1001,2.306,1002,2.056,1003,2.685,1004,1.614,1005,2.685,1006,2.685,1007,2.685,1008,1.614,1009,2.685,1010,1.614,1011,2.685,1012,4.457,1013,3.414,1014,1.614,1015,2.685,1016,2.797,1017,4.015,1018,2.306,1019,1.614,1020,1.614,1021,1.614,1022,2.056,1023,2.685,1024,1.387,1025,1.614,1026,1.614,1027,1.614,1028,1.614,1029,1.614,1030,1.614,1031,1.614,1032,1.614,1033,3.446,1034,2.685,1035,1.614,1036,1.124,1037,1.614,1038,1.614,1039,2.685,1040,1.614,1041,2.685,1042,2.306,1043,2.685,1044,2.685,1045,2.685,1046,2.685,1047,2.685,1048,2.306,1049,2.306,1050,2.685,1051,1.721,1052,2.306,1053,2.685,1054,2.685,1055,2.685,1056,2.685,1057,2.685,1058,2.685,1059,2.685,1060,2.685,1061,2.685,1062,1.236,1063,1.387,1064,3.446,1065,1.614,1066,4.015,1067,3.446,1068,1.614,1069,1.614,1070,2.685,1071,1.614,1072,1.387,1073,1.236,1074,1.614,1075,3.076,1076,1.614,1077,1.387,1078,1.614,1079,2.96,1080,1.614,1081,1.614,1082,2.639,1083,1.614,1084,2.306,1085,3.446,1086,1.614,1087,1.124,1088,1.614,1089,1.614,1090,2.685,1091,3.446,1092,1.614,1093,1.614,1094,2.685,1095,1.614,1096,1.614,1097,1.236,1098,1.614,1099,1.614,1100,1.614,1101,1.387,1102,1.614,1103,1.614]],["title/interfaces/OddsOffer.html",[0,0.358,1104,2.585]],["body/interfaces/OddsOffer.html",[0,0.447,2,1.287,3,0.211,4,0.211,5,0.211,8,0.266,9,0.984,11,1.195,17,1.467,18,0.477,19,0.019,21,0.238,22,0.015,23,0.015,133,0.606,402,0.911,532,3.052,588,6.109,813,2.872,887,2.971,977,2.971,1051,4.119,1104,4.081,1105,3.228,1106,3.981,1107,5.859,1108,5.137,1109,4.017,1110,7.112,1111,4.702,1112,5.032,1113,5.032,1114,4.921,1115,5.519,1116,3.55,1117,3.228]],["title/interfaces/OddsOfferOutcome.html",[0,0.358,1111,2.585]],["body/interfaces/OddsOfferOutcome.html",[0,0.411,2,1.182,3,0.194,4,0.194,5,0.194,8,0.244,9,0.932,11,1.272,18,0.48,19,0.019,20,2.507,21,0.219,22,0.014,23,0.014,118,3.673,120,1.617,133,0.441,391,3.302,402,0.837,529,3.302,532,2.89,534,3.892,813,2.72,882,3.302,887,2.855,977,3.322,1051,3.558,1105,2.966,1108,2.966,1109,3.892,1111,3.866,1113,5.974,1116,5.327,1117,2.966,1118,3.658,1119,6.541,1120,6.541,1121,5.974,1122,4.767,1123,5.55,1124,5.302,1125,5.302,1126,5.302]],["title/interfaces/OddsResponse.html",[0,0.358,1127,2.585]],["body/interfaces/OddsResponse.html",[0,0.426,2,1.228,3,0.201,4,0.201,5,0.201,8,0.254,9,0.955,11,1.175,17,1.436,18,0.454,19,0.019,21,0.227,22,0.014,23,0.014,133,0.687,352,3.614,387,3.383,402,0.869,529,4.084,532,2.962,533,4.387,556,3.961,608,3.948,813,2.787,878,4.504,879,5.382,880,5.082,882,4.084,883,3.456,885,3.08,886,2.456,887,2.907,977,3.069,1062,4.356,1105,3.08,1109,3.948,1127,3.961,1128,3.799,1129,5.699,1130,3.387]],["title/injectables/OddsService.html",[293,0.89,989,2.585]],["body/injectables/OddsService.html",[1,1.42,3,0.132,4,0.132,5,0.132,8,0.166,11,0.981,18,0.352,19,0.019,20,2.206,21,0.149,22,0.011,23,0.011,42,2.32,44,1.238,52,2.527,60,2.959,61,1.507,63,2.64,68,1.415,70,1.615,71,0.887,92,1.397,97,2.082,118,3.51,124,2.527,125,3.53,133,0.676,135,0.599,138,1.34,140,1.42,149,0.486,151,2.082,157,1.785,158,1.539,186,1.267,249,2.219,288,3.073,293,1.019,294,1.2,308,2.465,309,1.081,320,1.723,322,1.267,336,1.2,337,1.2,339,1.878,356,3.254,395,2.212,402,0.569,446,1.723,473,4.085,575,1.42,786,3.254,877,2.959,878,2.723,879,3.254,880,3.254,883,2.212,886,1.609,977,2.946,989,2.959,996,2.082,1001,4.759,1002,3.254,1013,5.192,1024,2.488,1051,1.857,1114,2.219,1115,3.649,1124,3.649,1125,2.488,1126,2.488,1127,3.859,1131,2.488,1132,4.248,1133,4.248,1134,4.248,1135,4.321,1136,2.488,1137,4.759,1138,2.897,1139,3.649,1140,4.248,1141,2.897,1142,3.649,1143,4.248,1144,4.248,1145,4.248,1146,4.248,1147,2.897,1148,4.248,1149,2.897,1150,4.248,1151,2.488,1152,2.897,1153,3.649,1154,2.219,1155,2.897,1156,2.488,1157,2.488,1158,2.488,1159,2.488,1160,2.897,1161,2.488,1162,2.897,1163,2.488,1164,2.488,1165,2.897,1166,2.897,1167,4.248,1168,2.897,1169,2.897,1170,2.897,1171,2.488,1172,2.897,1173,2.897,1174,2.897,1175,2.897,1176,2.897,1177,2.897,1178,2.897,1179,4.248,1180,2.897,1181,2.897,1182,2.897,1183,5.03,1184,2.897,1185,5.541,1186,5.541,1187,2.897,1188,5.541,1189,2.897,1190,2.897,1191,5.03,1192,2.897,1193,2.897,1194,2.897,1195,2.897,1196,2.897,1197,2.897,1198,2.897,1199,2.897,1200,2.897,1201,2.897,1202,2.897]],["title/interfaces/Player.html",[0,0.358,882,2.208]],["body/interfaces/Player.html",[0,0.517,2,1.489,3,0.244,4,0.244,5,0.244,8,0.308,9,1.076,17,1.566,18,0.407,19,0.019,20,2.315,21,0.276,22,0.016,23,0.016,71,1.108,402,1.054,532,2.794,534,4.384,882,4.431,1075,4.109,1203,4.608]],["title/interfaces/Point2d.html",[0,0.358,1204,2.585]],["body/interfaces/Point2d.html",[0,0.512,2,1.473,3,0.241,4,0.241,5,0.241,8,0.304,9,1.069,18,0.404,19,0.019,20,2.481,21,0.272,22,0.016,23,0.016,120,2.063,402,1.042,1204,4.436,1205,2.947,1206,4.557,1207,4.557,1208,4.557,1209,4.557,1210,7.35,1211,7.35,1212,7.077]],["title/interfaces/Quadrangle2d.html",[0,0.358,1213,2.585]],["body/interfaces/Quadrangle2d.html",[0,0.468,2,1.346,3,0.22,4,0.22,5,0.22,8,0.278,9,1.012,18,0.436,19,0.019,21,0.249,22,0.015,23,0.015,133,0.502,402,0.953,701,3.574,1204,5.303,1205,2.693,1207,6.331,1208,5.177,1209,5.177,1213,4.198,1214,4.164,1215,7.483,1216,6.862,1217,6.862,1218,5.177,1219,6.027,1220,6.027,1221,6.027]],["title/components/SnapComponent.html",[24,0.657,214,1.192]],["body/components/SnapComponent.html",[3,0.068,4,0.068,5,0.068,8,0.086,9,0.425,11,0.68,18,0.272,19,0.019,21,0.077,22,0.006,23,0.006,24,0.759,25,0.484,26,0.945,27,0.591,28,0.623,29,0.591,30,0.591,32,1.506,33,2.509,34,0.562,35,2.434,36,2.425,38,1.049,40,1.107,42,2.416,43,2.001,44,1.12,46,2.942,53,2.762,61,0.898,63,2.234,65,2.509,66,2.285,67,2.995,68,1.525,70,1.12,71,0.698,89,2.578,90,3.083,91,0.784,92,1.59,93,2.228,95,1.939,96,2.174,99,2.676,103,0.813,104,2.174,109,1.406,113,1.763,116,1.763,119,1.163,120,0.955,130,0.995,133,0.631,135,0.311,138,0.696,139,1.048,140,0.737,144,1.292,145,1.153,146,2.995,147,0.965,148,1.623,149,0.253,152,0.836,157,1.363,158,1.865,175,1.153,176,1.357,177,0.737,178,0.696,179,0.623,180,0.836,181,1.606,182,1.706,183,0.737,184,2.283,185,3.471,186,2.03,187,2.134,189,1.51,191,1.706,193,0.965,194,1.153,198,0.591,199,0.995,200,0.898,201,0.591,202,0.591,203,0.591,204,0.484,205,0.591,206,0.484,207,0.591,208,0.484,209,0.591,210,0.484,211,0.591,212,0.484,213,0.591,214,1.234,215,0.591,216,0.484,217,0.591,218,0.484,219,0.562,220,0.995,221,0.484,222,0.591,223,0.484,224,0.484,225,1.133,226,0.484,227,0.591,228,1.586,229,1.567,230,0.591,231,0.591,239,1.82,265,2.147,280,1.292,301,1.939,308,2.1,309,1.733,322,0.658,330,1.939,339,1.223,344,1.939,345,2.942,352,1.883,358,0.784,359,1.939,382,2.676,386,1.406,387,1.506,391,1.506,394,1.939,396,4.452,400,2.282,402,0.296,404,1.406,406,2.174,407,3.299,408,2.174,409,1.949,410,3.282,416,2.174,421,1.939,422,1.406,429,2.463,487,0.895,499,1.763,508,2.509,536,2.285,539,2.976,540,2.1,541,2.509,559,2.174,562,2.174,572,1.763,576,3.234,578,3.095,579,3.438,580,2.418,581,1.949,582,1.506,583,2.549,584,2.285,601,1.153,602,1.883,654,2.283,662,1.763,687,1.048,693,0.965,694,2.174,695,2.174,698,1.048,700,1.623,701,0.784,702,0.965,703,1.949,705,2.463,708,1.048,710,2.676,711,2.1,713,1.939,720,1.939,721,2.174,723,1.763,767,1.763,768,1.153,835,0.965,837,1.763,938,3.457,941,3.438,951,1.939,956,3.438,959,2.174,977,0.696,996,1.241,998,2.174,1018,2.174,1036,1.048,1154,1.939,1218,3.299,1222,1.292,1223,3.276,1224,3.276,1225,2.531,1226,3.276,1227,4.87,1228,2.531,1229,2.531,1230,2.531,1231,3.842,1232,3.842,1233,3.842,1234,3.842,1235,3.842,1236,3.842,1237,3.842,1238,3.438,1239,3.781,1240,2.531,1241,2.531,1242,1.505,1243,3.842,1244,2.174,1245,2.174,1246,2.531,1247,2.531,1248,2.509,1249,2.531,1250,1.505,1251,2.531,1252,2.531,1253,1.939,1254,2.531,1255,2.531,1256,2.531,1257,1.505,1258,2.531,1259,2.531,1260,2.531,1261,1.505,1262,2.531,1263,2.531,1264,3.842,1265,1.505,1266,2.531,1267,2.531,1268,1.505,1269,2.531,1270,3.842,1271,3.276,1272,3.842,1273,2.531,1274,3.842,1275,1.505,1276,2.174,1277,2.531,1278,1.505,1279,1.505,1280,2.531,1281,2.531,1282,2.531,1283,3.842,1284,2.531,1285,2.531,1286,2.531,1287,1.505,1288,2.531,1289,2.531,1290,1.505,1291,2.531,1292,2.531,1293,1.505,1294,3.68,1295,1.505,1296,1.505,1297,1.292,1298,2.531,1299,1.505,1300,1.292,1301,2.531,1302,2.531,1303,1.505,1304,1.505,1305,1.505,1306,1.505,1307,1.506,1308,1.505,1309,1.292,1310,1.153,1311,1.292,1312,1.505,1313,1.505,1314,1.153,1315,1.505,1316,1.505,1317,1.292,1318,1.505,1319,1.292,1320,1.505,1321,1.505,1322,1.505,1323,1.505,1324,2.531,1325,1.505,1326,1.505,1327,1.505,1328,1.505,1329,1.505,1330,1.505,1331,1.505,1332,1.505,1333,1.505,1334,1.505,1335,2.531,1336,1.505,1337,1.505,1338,1.505,1339,1.505,1340,1.505,1341,1.505,1342,1.505,1343,1.505,1344,1.505,1345,1.505,1346,1.505,1347,1.505,1348,1.505,1349,1.505,1350,1.505,1351,1.292,1352,1.505,1353,1.505,1354,1.505,1355,1.505,1356,1.505,1357,1.505,1358,1.505,1359,1.505,1360,1.505,1361,2.174,1362,2.174,1363,1.153,1364,3.276,1365,3.299,1366,2.531,1367,2.531,1368,3.276,1369,1.505,1370,1.505,1371,1.292,1372,1.505]],["title/injectables/SnapOddsFacade.html",[293,0.89,1238,2.585]],["body/injectables/SnapOddsFacade.html",[3,0.175,4,0.175,5,0.175,8,0.22,11,1.038,18,0.372,19,0.019,21,0.197,22,0.016,23,0.013,42,1.98,43,2,44,1.51,61,1.839,65,4.492,66,3.735,68,1.407,70,1.709,71,0.881,91,2.698,92,1.438,99,3.609,103,1.665,113,3.609,133,0.715,135,0.794,138,1.776,145,2.941,149,0.645,157,2.081,158,1.794,288,2.698,293,1.243,294,1.591,308,3.213,322,1.679,336,1.591,337,1.591,339,1.934,386,3.257,395,3.27,401,3.969,602,3.077,617,3.298,637,2.674,654,1.776,788,4.705,871,3.969,977,2.903,996,3.077,1238,3.609,1248,2.941,1307,3.082,1314,4.809,1351,3.298,1373,5.392,1374,3.298,1375,4.45,1376,4.45,1377,3.84,1378,4.705,1379,3.84,1380,4.45,1381,3.84,1382,4.45,1383,4.45,1384,5.392,1385,4.45,1386,3.84,1387,4.45,1388,5.181,1389,5.181,1390,3.84,1391,4.45,1392,3.84,1393,3.84,1394,3.84,1395,3.84,1396,3.84,1397,3.84,1398,5.864,1399,4.45,1400,3.84,1401,3.84,1402,3.84,1403,3.84,1404,3.84,1405,3.84,1406,3.84]],["title/components/SpinnerComponent.html",[24,0.657,216,1.192]],["body/components/SpinnerComponent.html",[3,0.151,4,0.151,5,0.151,8,0.19,18,0.211,19,0.019,21,0.17,22,0.012,23,0.012,24,0.961,25,1.066,26,1.749,27,1.304,28,1.375,29,1.304,30,1.304,34,1.239,35,2.863,36,2.719,38,1.941,40,2.049,50,2.787,68,0.796,71,0.704,103,1.066,119,1.177,120,0.967,133,0.343,134,3.003,135,0.686,149,0.557,176,1.375,179,1.375,180,1.843,181,1.626,184,2.166,186,2.049,189,2.318,191,2.828,196,3.782,198,1.304,199,1.841,200,1.662,201,1.304,202,1.304,203,1.304,204,1.066,205,1.304,206,1.066,207,1.304,208,1.066,209,1.304,210,1.066,211,1.304,212,1.066,213,1.304,214,1.066,215,1.304,216,1.895,217,1.304,218,1.066,219,1.239,220,1.841,221,1.066,222,1.304,223,1.066,224,1.066,225,0.877,226,1.066,227,1.304,228,1.066,229,1.12,230,1.304,231,1.304,400,2.311,536,1.974,575,2.296,584,3.509,689,2.311,696,3.003,697,4.023,698,5.073,699,4.139,702,3.003,764,4.862,1072,2.85,1073,3.588,1363,2.541,1407,2.85,1408,7.065,1409,5.43,1410,4.684,1411,3.318,1412,3.318,1413,3.318,1414,6.892,1415,6.778,1416,4.684,1417,6.222,1418,3.318,1419,4.684,1420,3.588,1421,2.541,1422,4.684,1423,4.684,1424,5.43,1425,3.318,1426,3.318,1427,4.159,1428,4.684,1429,4.684,1430,2.85,1431,3.318,1432,6.457,1433,5.899,1434,2.541,1435,3.318,1436,3.318,1437,3.318,1438,3.318,1439,3.318,1440,3.318,1441,4.023,1442,2.541]],["title/interfaces/SportEvent.html",[0,0.358,996,1.819]],["body/interfaces/SportEvent.html",[0,0.312,2,0.899,3,0.147,4,0.244,5,0.147,8,0.186,9,0.773,17,1.718,18,0.463,19,0.019,20,2.162,21,0.166,22,0.011,23,0.011,71,0.487,133,0.335,151,3.301,352,3.679,355,5.502,387,3.471,402,0.636,421,4.469,531,3.526,532,2.398,533,4.563,534,4.224,556,4.064,566,3.207,587,5.502,813,2.86,878,4.106,887,2.851,996,2.256,1062,3.526,1082,3.526,1109,3.471,1129,5.011,1130,2.48,1205,1.798,1443,2.781,1444,2.781,1445,4.604,1446,3.471,1447,4.469,1448,5.835,1449,5.835,1450,5.835,1451,5.835,1452,6.406,1453,5.835,1454,4.604,1455,5.835,1456,5.835,1457,5.835,1458,5.835,1459,5.835,1460,5.835,1461,5.011,1462,4.604,1463,3.954,1464,4.604,1465,3.954,1466,3.526,1467,3.954,1468,2.076,1469,3.238]],["title/interfaces/SportsBook.html",[0,0.358,883,1.933]],["body/interfaces/SportsBook.html",[0,0.464,2,1.335,3,0.219,4,0.219,5,0.219,8,0.276,9,1.007,11,1.062,17,1.64,18,0.415,19,0.019,21,0.247,22,0.015,23,0.015,71,1.079,125,3.124,130,2.689,133,0.498,151,2.939,195,3.888,225,1.586,323,4.177,326,3.845,402,0.945,877,4.177,883,3.124,884,4.594,885,4.552,886,3.63,887,2.773,905,5.151,1013,5.241,1117,4.177,1171,5.877,1470,3.684,1471,3.684,1472,4.766,1473,5.151,1474,5.997,1475,5.151]],["title/interfaces/SportsBook-1.html",[0,0.299,186,1.356,883,1.614]],["body/interfaces/SportsBook-1.html",[0,0.464,2,1.335,3,0.219,4,0.219,5,0.219,8,0.276,9,1.007,11,1.062,17,1.492,18,0.447,19,0.019,21,0.247,22,0.015,23,0.015,71,1.079,133,0.621,391,4.071,402,0.945,532,3.124,608,3.568,813,2.939,883,3.124,885,5,886,3.987,887,3.022,977,3.256,1075,4.594,1104,4.766,1108,3.35,1109,4.071,1117,3.35,1461,5.151,1471,3.684,1476,4.131,1477,6.166]],["title/interfaces/SportsBookLine.html",[0,0.358,1472,2.585]],["body/interfaces/SportsBookLine.html",[0,0.372,2,1.071,3,0.236,4,0.175,5,0.175,8,0.221,9,0.873,11,1.198,17,1.626,18,0.446,19,0.019,20,2.51,21,0.198,22,0.013,23,0.013,118,4.537,120,1.971,130,1.516,151,1.891,195,3.742,326,2.473,402,0.758,877,2.687,886,2.143,977,2.909,1016,4.711,1051,4.614,1052,5.403,1114,4.818,1116,4.818,1121,5.81,1122,5.81,1470,2.955,1472,3.62,1475,3.314,1477,3.314,1478,3.314,1479,6.29,1480,6.29,1481,6.29,1482,6.29,1483,6.29,1484,6.29,1485,6.764]],["title/components/SwitchSvgComponent.html",[24,0.657,218,1.192]],["body/components/SwitchSvgComponent.html",[3,0.208,4,0.208,5,0.208,19,0.019,21,0.235,22,0.014,23,0.014,24,1.131,25,1.469,26,2.169,27,1.797,28,1.895,29,1.797,30,1.797,34,1.707,35,2.982,36,2.833,38,2.407,40,2.541,71,0.873,103,1.469,133,0.473,135,0.945,149,0.768,176,1.895,178,2.115,179,1.895,181,2.241,182,2.382,183,2.241,189,2.64,198,1.797,199,2.283,200,2.062,201,1.797,202,1.797,203,1.797,204,1.469,205,1.797,206,1.469,207,1.797,208,1.469,209,1.797,210,1.469,211,1.797,212,1.469,213,1.797,214,1.469,215,1.797,216,1.469,217,1.797,218,2.159,219,2.384,220,2.283,221,1.469,222,1.797,223,1.469,224,1.469,225,1.209,226,1.469,227,1.797,228,1.469,229,1.544,230,1.797,231,1.797,1486,3.928,1487,4.45,1488,6.386,1489,5.81]],["title/interfaces/TranslationEntries.html",[0,0.358,567,2.585]],["body/interfaces/TranslationEntries.html",[0,0.412,2,1.187,3,0.194,4,0.194,5,0.194,8,0.245,9,0.934,17,1.787,18,0.48,19,0.019,21,0.219,22,0.014,23,0.014,89,2.374,183,2.095,402,0.84,567,3.874,608,2.543,686,5.626,722,5.626,723,4.562,762,5.626,1042,5.626,1048,5.626,1049,5.626,1361,5.626,1362,5.626,1490,3.671,1491,3.671,1492,4.274,1493,4.274,1494,6.55,1495,5.626,1496,6.55,1497,5.626,1498,6.55,1499,5.626,1500,6.55]],["title/components/TriggerComponent.html",[24,0.657,221,1.192]],["body/components/TriggerComponent.html",[3,0.179,4,0.179,5,0.179,8,0.225,18,0.377,19,0.019,21,0.202,22,0.013,23,0.013,24,1.05,25,1.262,26,1.963,27,1.543,28,1.627,29,1.543,30,1.543,34,1.466,35,2.929,36,2.782,38,2.179,40,2.3,50,3.129,68,1.423,71,0.791,75,2.067,103,2.036,119,1.867,120,1.533,133,0.406,134,3.802,135,0.812,149,0.659,176,2.179,177,1.925,178,1.816,179,1.627,180,2.181,181,2.578,182,2.74,189,2.49,198,1.543,199,2.067,200,1.867,201,1.543,202,1.543,203,1.543,204,1.262,205,1.543,206,1.262,207,1.543,208,1.262,209,1.543,210,1.262,211,1.543,212,1.262,213,1.543,214,1.262,215,1.543,216,1.262,217,1.543,218,1.262,219,1.466,220,2.067,221,2.036,222,1.543,223,1.262,224,1.262,225,1.039,226,1.262,227,1.543,228,1.262,229,1.326,230,1.543,231,1.543,239,2.181,265,1.816,309,1.466,404,3.519,580,2.045,696,2.517,701,2.045,702,2.517,711,2.517,767,2.735,986,4.518,992,5.094,1022,4.029,1063,3.373,1087,2.735,1097,3.008,1420,4.029,1421,3.008,1427,3.008,1434,3.008,1441,3.373,1501,3.373,1502,5.931,1503,5.26,1504,6.336,1505,5.094,1506,5.931,1507,3.927,1508,3.927,1509,3.927,1510,3.927,1511,3.927,1512,3.008,1513,4.853]],["title/components/TriggerSvgComponent.html",[24,0.657,223,1.192]],["body/components/TriggerSvgComponent.html",[3,0.214,4,0.214,5,0.214,19,0.019,21,0.241,22,0.015,23,0.015,24,1.145,25,1.509,26,2.206,27,1.846,29,1.846,30,1.846,34,1.754,35,2.991,36,2.841,40,2.584,71,0.888,103,2.077,133,0.486,135,0.971,149,0.789,189,2.666,198,1.846,199,2.322,200,2.097,201,1.846,202,1.846,203,1.846,204,1.509,205,1.846,206,1.509,207,1.846,208,1.509,209,1.846,210,1.509,211,1.846,212,1.509,213,1.846,214,1.509,215,1.846,216,1.509,217,1.846,218,1.509,219,1.754,220,2.322,221,1.509,222,1.846,223,2.18,224,1.509,225,1.242,226,1.509,227,1.846,228,1.509,229,1.586,230,1.846,231,1.846,1487,4.526,1514,4.035,1515,5.909]],["title/interfaces/TvChannel.html",[0,0.358,1468,2.379]],["body/interfaces/TvChannel.html",[0,0.417,2,1.199,3,0.196,4,0.196,5,0.196,8,0.248,9,0.94,11,0.992,17,1.663,18,0.457,19,0.019,20,2.098,21,0.222,22,0.014,23,0.014,71,1.05,75,2.443,133,0.447,402,0.849,531,4.29,532,2.917,534,4.154,566,4.863,813,2.745,887,3.151,1016,3.901,1109,3.913,1130,3.309,1205,2.399,1244,4.811,1446,4.427,1447,5.699,1463,4.811,1465,4.811,1466,5.037,1468,3.591,1516,3.009,1517,3.71,1518,5.649,1519,6.982,1520,4.811,1521,5.601,1522,5.601,1523,4.32,1524,4.32]],["title/classes/TvSearchNoResultError.html",[149,0.623,1307,2.208]],["body/classes/TvSearchNoResultError.html",[3,0.251,4,0.251,5,0.251,19,0.019,21,0.284,22,0.017,23,0.016,61,2.463,68,1.325,149,0.927,360,3.848,395,2.877,402,1.085,422,3.068,533,3.286,545,4.231,654,3.21,1307,4.13,1512,4.231,1525,5.603,1526,4.745,1527,5.524,1528,6.523,1529,5.524,1530,5.524,1531,5.524]],["title/interfaces/TvSearchResult.html",[0,0.358,43,1.933]],["body/interfaces/TvSearchResult.html",[0,0.462,2,1.33,3,0.218,4,0.218,5,0.218,8,0.275,9,1.004,17,1.49,18,0.414,19,0.019,21,0.246,22,0.015,23,0.015,43,3.116,117,3.558,130,2.351,133,0.619,395,3.83,402,0.941,422,3.323,427,4.582,881,5.138,1205,2.661,1213,4.898,1253,3.669,1446,4.413,1516,3.337,1532,4.115,1533,5.572,1534,6.832,1535,6.832,1536,6.832,1537,5.983,1538,5.983,1539,5.983]],["title/interfaces/TvSearchResultEntry.html",[0,0.358,117,1.933]],["body/interfaces/TvSearchResultEntry.html",[0,0.422,2,1.214,3,0.199,4,0.199,5,0.199,8,0.359,9,0.948,18,0.42,19,0.019,20,2.365,21,0.225,22,0.014,23,0.014,91,3.442,117,2.941,133,0.585,225,1.493,317,3.933,352,3.065,387,3.931,395,3.257,402,0.859,422,3.136,499,3.933,533,3.72,996,3.54,1082,4.325,1205,2.43,1253,5.532,1446,4.241,1447,5.24,1466,4.325,1467,5.676,1468,4.63,1516,3.047,1518,4.85,1533,5.24,1540,3.757,1541,5.647,1542,5.647,1543,7.006,1544,6.608,1545,5.676,1546,6.608]],["title/injectables/TvSearchService.html",[293,0.89,1378,2.585]],["body/injectables/TvSearchService.html",[1,2.223,3,0.111,4,0.111,5,0.111,8,0.14,9,0.627,11,1.024,17,1.417,18,0.394,19,0.019,20,1.531,21,0.125,22,0.009,23,0.009,42,2.402,43,1.27,44,1.088,52,2.221,60,2.6,61,1.325,63,2.492,68,1.526,70,1.685,71,0.869,75,1.783,90,3.024,91,3.01,92,1.67,93,1.325,97,1.83,119,1.325,120,1.088,133,0.642,135,0.504,138,1.127,140,1.195,149,0.409,157,2.135,158,1.555,225,0.987,249,1.867,288,1.27,293,0.896,294,1.01,308,2.948,309,1.394,320,1.45,322,1.066,336,1.01,337,1.01,339,2.316,356,2.859,382,2.6,386,2.52,394,3.894,395,3.232,400,2.6,401,2.859,402,1.077,404,2.073,405,2.859,446,1.45,473,3.857,492,1.867,499,2.6,506,4.366,508,4.873,543,3.541,556,1.698,575,1.83,602,2.491,637,1.698,677,3.894,783,2.094,788,4.431,791,2.094,809,1.867,822,3.206,996,2.491,1016,2.6,1135,3.896,1136,2.094,1137,4.366,1139,3.206,1151,2.094,1153,4.366,1154,1.867,1156,2.094,1157,2.094,1158,2.094,1159,2.094,1161,4.965,1163,2.094,1164,2.094,1227,3.894,1245,3.206,1248,1.867,1307,2.221,1375,3.206,1376,3.206,1378,2.6,1380,3.206,1382,4.366,1383,3.206,1384,5.671,1385,3.206,1387,3.206,1391,2.094,1399,3.206,1446,2.221,1545,4.707,1547,5.576,1548,2.094,1549,4.537,1550,3.733,1551,3.733,1552,6.016,1553,3.733,1554,2.438,1555,3.733,1556,3.733,1557,5.083,1558,3.733,1559,6.492,1560,2.438,1561,3.733,1562,3.733,1563,5.167,1564,3.733,1565,3.206,1566,5.083,1567,2.438,1568,3.733,1569,3.733,1570,3.733,1571,2.438,1572,3.733,1573,3.733,1574,3.733,1575,3.733,1576,5.083,1577,2.438,1578,5.78,1579,3.733,1580,3.733,1581,3.733,1582,2.438,1583,2.438,1584,2.438,1585,3.733,1586,3.733,1587,4.537,1588,3.733,1589,2.438,1590,2.438,1591,2.438,1592,2.438,1593,2.438,1594,2.438,1595,2.438,1596,2.438,1597,2.438,1598,2.438,1599,2.094,1600,2.438,1601,2.438,1602,2.438,1603,2.438,1604,3.206,1605,2.438,1606,2.438,1607,3.733,1608,2.438,1609,2.438,1610,2.438,1611,2.438,1612,2.438]],["title/components/UserFeedbackMessageComponent.html",[24,0.657,224,1.192]],["body/components/UserFeedbackMessageComponent.html",[3,0.163,4,0.163,5,0.163,8,0.206,18,0.228,19,0.019,21,0.184,22,0.012,23,0.012,24,1.003,25,1.153,26,1.847,27,1.41,28,1.487,29,1.41,30,1.41,34,1.34,35,2.908,36,2.749,38,2.05,40,2.164,50,2.944,68,0.861,71,0.744,103,1.153,133,0.512,134,3.172,135,0.742,146,3.676,147,2.301,148,2.301,149,0.602,152,1.993,176,2.05,177,1.759,178,1.66,179,1.487,181,1.759,182,1.869,183,1.759,184,2.288,187,2.748,189,2.399,191,2.577,195,2.135,198,1.41,199,1.945,200,2.009,201,1.41,202,1.41,203,1.41,204,1.153,205,1.41,206,1.153,207,1.41,208,1.153,209,1.41,210,1.153,211,1.41,212,1.153,213,1.41,214,1.153,215,1.41,216,1.153,217,1.41,218,1.153,219,1.34,220,1.945,221,1.153,222,1.41,223,1.153,224,1.961,225,1.855,226,2.34,227,1.41,228,1.153,229,1.212,230,1.41,231,1.41,265,3.061,278,3.79,348,2.749,409,2.135,576,2.5,577,2.301,578,1.993,579,2.5,580,3.335,581,3.631,582,3.369,583,3.369,654,1.66,698,2.5,700,2.301,701,1.869,703,2.944,704,3.082,705,2.301,894,2.749,1000,4.25,1036,2.5,1087,3.446,1365,3.082,1495,4.25,1497,4.25,1499,4.25,1613,4.25,1614,3.082,1615,5.663,1616,4.948,1617,3.589,1618,3.082,1619,3.082,1620,2.749,1621,3.082,1622,3.589,1623,3.589,1624,3.589]],["title/components/WebcamComponent.html",[24,0.657,228,1.192]],["body/components/WebcamComponent.html",[3,0.068,4,0.068,5,0.068,8,0.245,9,0.423,11,0.678,17,0.976,18,0.372,19,0.019,21,0.077,22,0.006,23,0.006,24,0.756,25,0.481,26,1.429,27,1.282,28,0.62,29,0.588,30,0.588,32,1.499,33,2.499,34,0.559,35,2.464,36,2.37,38,1.044,40,1.102,42,2.19,44,0.734,46,2.932,50,1.499,53,1.499,61,0.894,63,2.04,67,2.735,68,1.571,70,1.116,71,0.696,75,0.99,89,2.126,91,2.896,92,1.544,93,2.121,103,0.481,105,2.164,118,1.499,119,1.358,120,1.116,124,2.277,126,2.164,130,1.819,131,1.93,133,0.592,135,0.309,136,2.454,139,1.042,140,0.733,146,0.831,147,0.959,148,1.615,149,0.251,150,1.615,152,0.831,153,2.164,157,1.835,158,1.307,176,1.352,177,0.733,178,0.692,179,0.62,180,0.831,181,1.235,183,0.733,184,1.975,185,1.994,186,1.868,187,1.399,189,1.504,191,0.779,193,0.959,195,1.499,196,1.615,198,0.588,199,0.99,200,1.158,201,0.588,202,0.588,203,0.588,204,0.481,205,0.588,206,0.481,207,0.588,208,0.481,209,0.588,210,0.481,211,0.588,212,0.481,213,0.588,214,0.481,215,0.588,216,0.481,217,0.588,218,0.481,219,0.559,220,0.99,221,0.481,222,0.588,223,0.481,224,0.481,225,0.863,226,0.481,227,0.588,228,1.661,229,1.93,230,0.588,231,0.588,238,3.601,257,2.277,261,2.932,265,1.509,288,0.779,308,1.599,309,1.218,317,1.755,320,1.499,322,0.654,326,1.615,339,1.218,343,1.615,344,1.93,348,1.93,358,2.411,382,2.666,386,1.812,402,0.294,404,1.399,405,1.93,409,1.499,410,1.146,419,2.164,422,1.399,429,1.615,486,2.164,534,1.499,536,1.499,538,1.285,543,1.755,544,1.93,572,1.042,575,2.637,577,2.738,578,1.399,580,1.994,581,1.499,582,1.499,583,1.499,602,1.876,608,2.277,654,2.277,655,1.285,662,1.755,687,1.042,689,2.666,691,2.499,693,0.959,696,1.615,699,1.615,700,0.959,701,0.779,702,2.738,703,0.89,705,2.454,708,1.042,763,1.146,764,3.449,769,3.224,771,1.146,775,1.285,786,1.93,788,3.429,790,2.164,799,5.454,800,2.164,803,2.164,805,3.288,807,3.976,808,4.121,809,3.546,810,2.164,818,2.803,837,2.273,838,2.164,892,2.932,938,3.157,941,1.042,951,1.93,1022,1.93,1036,1.755,1073,1.93,1077,1.285,1079,2.164,1084,2.164,1087,2.273,1097,1.146,1101,2.164,1227,1.93,1294,3.669,1297,3.288,1300,1.285,1309,2.164,1310,1.146,1311,1.285,1317,1.285,1319,1.285,1363,1.146,1371,1.285,1420,3.546,1421,1.93,1427,2.499,1430,1.285,1434,2.932,1442,1.93,1446,1.499,1505,2.803,1512,1.146,1513,4.121,1599,1.285,1618,2.164,1619,1.285,1620,1.146,1621,1.285,1625,1.285,1626,3.263,1627,3.263,1628,2.519,1629,3.263,1630,3.263,1631,4.629,1632,4.629,1633,3.263,1634,3.263,1635,2.519,1636,3.828,1637,4.272,1638,2.519,1639,3.828,1640,2.519,1641,3.828,1642,3.828,1643,3.828,1644,1.496,1645,2.519,1646,2.519,1647,1.496,1648,2.803,1649,3.828,1650,1.496,1651,2.519,1652,2.519,1653,2.519,1654,4.924,1655,2.519,1656,2.519,1657,1.496,1658,2.519,1659,2.519,1660,1.496,1661,2.519,1662,1.496,1663,3.263,1664,2.519,1665,2.519,1666,2.519,1667,3.828,1668,1.496,1669,2.519,1670,2.519,1671,1.496,1672,2.519,1673,2.519,1674,2.519,1675,1.496,1676,1.496,1677,2.519,1678,1.496,1679,2.519,1680,3.263,1681,3.263,1682,2.519,1683,1.496,1684,2.519,1685,1.496,1686,1.496,1687,2.519,1688,2.519,1689,1.496,1690,2.519,1691,2.519,1692,3.828,1693,3.263,1694,2.519,1695,2.519,1696,2.519,1697,1.496,1698,4.924,1699,2.519,1700,1.496,1701,3.263,1702,3.828,1703,1.496,1704,2.519,1705,1.496,1706,1.496,1707,1.496,1708,1.496,1709,1.496,1710,1.496,1711,1.496,1712,2.519,1713,1.496,1714,1.496,1715,1.496,1716,1.496,1717,1.496,1718,1.496,1719,1.496,1720,1.496,1721,1.496,1722,1.496,1723,1.496,1724,1.496,1725,1.496,1726,1.496,1727,1.496,1728,1.496,1729,1.496,1730,1.496,1731,1.496,1732,1.496,1733,1.496,1734,1.496,1735,1.496,1736,1.496,1737,1.496,1738,1.496,1739,1.496,1740,1.496,1741,1.496,1742,2.519,1743,1.496,1744,1.496,1745,2.519,1746,1.496,1747,1.496,1748,2.519,1749,3.828,1750,1.496,1751,4.629,1752,1.496,1753,1.496,1754,4.272,1755,4.272,1756,1.496,1757,1.496,1758,1.496,1759,1.285,1760,3.263,1761,1.285,1762,2.519,1763,2.519,1764,3.263,1765,3.828,1766,1.496,1767,1.496,1768,1.496,1769,1.496,1770,1.496,1771,1.496,1772,1.496,1773,1.496,1774,1.496,1775,1.496,1776,1.496]],["title/coverage.html",[1777,4.348]],["body/coverage.html",[0,0.707,1,1.482,5,0.137,6,2.597,7,4.945,18,0.192,19,0.019,22,0.011,23,0.011,24,1.253,25,0.971,31,2.597,43,1.575,63,1.253,66,1.799,67,1.679,72,2.607,97,1.482,117,1.575,125,1.575,141,2.316,149,0.736,204,0.971,206,0.971,208,0.971,210,0.971,212,0.971,214,0.971,216,0.971,218,0.971,221,0.971,223,0.971,224,0.971,226,1.408,228,0.971,263,2.106,265,1.398,278,2.316,293,1.663,295,2.316,296,3.053,309,1.129,341,2.597,342,2.597,358,1.575,362,3.357,363,3.357,395,2.283,439,2.316,447,2.316,473,1.938,474,2.597,512,2.597,529,1.799,530,2.597,535,2.597,546,2.597,547,2.597,567,2.106,571,2.597,575,3.398,585,3.949,586,3.949,602,1.482,639,2.316,640,2.316,676,2.597,712,2.597,769,2.106,770,2.316,771,2.316,772,2.597,779,2.316,875,2.597,876,2.597,882,1.799,883,2.283,886,1.679,887,1.398,888,2.597,891,2.597,895,2.316,938,1.938,939,2.316,956,2.106,957,2.597,961,2.316,975,2.597,977,1.398,988,2.316,989,2.106,996,1.482,1002,2.316,1104,2.106,1105,3.591,1106,2.597,1108,2.106,1111,2.106,1118,2.597,1127,2.106,1128,2.597,1131,2.597,1203,2.597,1204,2.106,1205,3.476,1206,2.597,1213,2.106,1214,2.597,1222,2.597,1238,2.106,1239,2.316,1307,1.799,1314,2.316,1373,2.597,1374,2.597,1378,2.106,1407,2.597,1442,5.592,1443,2.597,1444,2.597,1468,1.938,1470,3.357,1471,3.357,1472,2.106,1476,2.597,1478,2.597,1486,2.597,1490,2.597,1491,2.597,1501,2.597,1513,4.794,1514,2.597,1516,3.591,1517,2.597,1525,2.597,1526,2.597,1532,2.597,1533,2.316,1540,2.597,1547,2.597,1548,2.597,1613,2.597,1614,2.597,1625,2.597,1761,2.597,1777,2.597,1778,2.597,1779,3.023,1780,5.156,1781,3.023,1782,6.259,1783,4.383,1784,3.023,1785,3.023,1786,3.023,1787,3.023,1788,4.383,1789,3.023,1790,3.023,1791,3.023,1792,3.023,1793,5.156,1794,3.023,1795,3.023,1796,3.023,1797,3.023,1798,3.023,1799,3.023,1800,4.383,1801,3.023,1802,6.74,1803,6.74,1804,3.023,1805,3.023,1806,3.023,1807,4.383,1808,3.023,1809,3.357,1810,3.357,1811,3.023,1812,3.023,1813,4.383,1814,2.597,1815,2.597,1816,2.597,1817,2.597,1818,2.597,1819,2.597,1820,2.597,1821,3.023,1822,3.023,1823,4.383,1824,3.023,1825,3.023,1826,5.156,1827,4.383,1828,4.383,1829,3.023,1830,3.023,1831,3.023,1832,3.023,1833,3.023,1834,4.383,1835,3.023,1836,3.023,1837,3.023,1838,3.023]],["title/dependencies.html",[235,2.861,1839,3.1]],["body/dependencies.html",[19,0.019,22,0.015,23,0.015,135,1.064,136,4.318,137,3.585,229,1.738,235,3.3,238,3.585,254,4.421,256,5.371,257,3.72,261,3.943,322,2.251,490,3.943,515,4.421,1840,5.148,1841,7.507,1842,5.148,1843,5.148,1844,5.148,1845,5.148,1846,5.148,1847,5.148,1848,5.148,1849,5.148,1850,5.148,1851,5.148,1852,5.148,1853,5.148,1854,5.148,1855,5.148,1856,5.148,1857,5.148,1858,5.148,1859,5.148,1860,5.148,1861,5.148,1862,5.148,1863,5.148]],["title/miscellaneous/enumerations.html",[1864,1.614,1865,3.833]],["body/miscellaneous/enumerations.html",[3,0.223,8,0.281,19,0.019,22,0.015,23,0.015,57,3.373,89,2.726,120,2.206,124,2.92,130,2.387,146,3.373,225,1.298,226,1.577,295,3.759,296,4.8,323,4.23,324,4.215,325,4.215,326,3.146,328,5.216,329,5.216,330,4.651,331,5.216,332,5.216,333,5.216,334,5.278,335,5.278,358,3.163,654,2.269,892,3.759,894,3.759,907,4.215,939,3.759,941,4.593,954,5.216,955,5.216,1112,4.215,1809,3.759,1810,4.651,1864,2.556,1865,4.215,1866,4.907,1867,4.215,1868,4.907,1869,4.907,1870,4.907,1871,4.907]],["title/miscellaneous/functions.html",[1864,1.614,1872,3.833]],["body/miscellaneous/functions.html",[8,0.314,11,1.149,17,1.579,18,0.348,19,0.018,22,0.016,23,0.016,57,4.153,70,1.891,71,0.975,92,1.801,141,4.97,447,4.97,1142,5.573,1809,4.193,1810,5.297,1864,2.851,1867,5.573,1872,4.702,1873,5.474,1874,5.474,1875,5.474]],["title/index.html",[8,0.178,1876,3.1,1877,3.1]],["body/index.html",[4,0.254,19,0.014,22,0.014,23,0.014,24,1.205,36,2.759,86,4.28,108,2.998,130,2.196,176,1.783,200,1.527,235,3.583,246,3.697,247,4.8,285,3.697,304,4.28,309,1.607,449,3.297,555,6.099,566,3.892,608,2.561,631,3.697,684,4.8,713,3.297,720,3.297,808,3.297,1276,3.697,1473,4.8,1520,3.697,1563,5.846,1565,3.697,1604,3.697,1620,5.031,1648,3.697,1759,3.697,1778,5.641,1878,6.205,1879,4.305,1880,6.807,1881,5.588,1882,4.305,1883,4.305,1884,4.305,1885,6.568,1886,5.588,1887,5.588,1888,4.305,1889,4.305,1890,4.305,1891,4.305,1892,4.305,1893,4.305,1894,7.34,1895,5.588,1896,5.588,1897,4.305,1898,4.305,1899,4.305,1900,4.305,1901,4.305,1902,4.305,1903,4.305,1904,4.305,1905,5.588,1906,4.305,1907,5.588,1908,4.305,1909,4.305,1910,4.305,1911,5.588,1912,4.305,1913,4.305,1914,4.305,1915,4.305,1916,6.205,1917,6.205,1918,4.305,1919,5.588,1920,4.305,1921,4.305,1922,4.305,1923,4.305,1924,4.305,1925,4.305,1926,4.305,1927,4.305,1928,4.305,1929,4.305,1930,4.305,1931,4.305,1932,4.305,1933,4.305,1934,4.305,1935,4.305]],["title/modules.html",[234,3.878]],["body/modules.html",[19,0.017,22,0.017,23,0.017,233,4.141,234,4.554,257,3.537,1487,4.554,1936,5.945,1937,5.945]],["title/overview.html",[1938,4.348]],["body/overview.html",[2,1.343,19,0.019,22,0.015,23,0.015,25,2.106,26,1.806,186,2.116,204,2.106,206,2.106,208,2.106,210,2.106,212,2.106,214,2.106,216,2.106,218,2.106,221,2.106,223,2.106,224,2.106,228,2.106,232,4.156,233,5.422,235,3.859,236,4.156,237,4.156,238,4.193,239,2.687,240,3.706,294,2.005,545,3.706,699,3.102,1938,4.156,1939,4.839,1940,4.839,1941,4.839]],["title/miscellaneous/typealiases.html",[1864,1.614,1942,4.462]],["body/miscellaneous/typealiases.html",[8,0.335,18,0.428,19,0.017,22,0.017,23,0.017,770,4.477,813,2.864,837,4.696,1310,4.477,1864,3.044,1943,5.845,1944,5.845,1945,6.742]],["title/miscellaneous/variables.html",[1864,1.614,1946,3.833]],["body/miscellaneous/variables.html",[7,5.626,8,0.227,18,0.378,19,0.019,22,0.013,23,0.013,51,3.684,52,2.355,53,2.355,54,2.758,55,2.538,56,2.758,57,2.199,58,2.758,59,2.538,72,3.147,97,1.94,108,2.758,119,2.509,120,2.028,257,4.054,284,2.758,309,2.544,336,2.823,337,2.823,362,3.032,363,4.051,404,2.937,439,4.051,445,5.115,449,3.032,450,3.4,451,3.4,452,3.4,453,3.4,585,3.032,586,4.562,639,4.051,640,4.051,779,5.073,895,5.073,961,5.073,988,5.073,1239,5.073,1814,3.4,1815,3.4,1816,3.4,1817,3.4,1818,3.4,1819,5.459,1820,3.4,1864,2.062,1946,3.4,1947,3.959,1948,3.959,1949,3.959,1950,5.289,1951,3.959,1952,3.959,1953,3.959,1954,3.959,1955,6.815,1956,7.345,1957,6.815,1958,6.815,1959,5.289,1960,3.959]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"components/SwitchSvgComponent.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":575,"title":{},"body":{"components/FooterComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SpinnerComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["0.11.4",{"_index":1863,"title":{},"body":{"dependencies.html":{}}}],["0.1s",{"_index":1424,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["0.2rem",{"_index":1085,"title":{},"body":{"components/OddsComponent.html":{}}}],["0.3rem",{"_index":1094,"title":{},"body":{"components/OddsComponent.html":{}}}],["0.4",{"_index":1071,"title":{},"body":{"components/OddsComponent.html":{}}}],["0.4.1",{"_index":1858,"title":{},"body":{"dependencies.html":{}}}],["0.4rem",{"_index":1091,"title":{},"body":{"components/OddsComponent.html":{}}}],["0.5",{"_index":1511,"title":{},"body":{"components/TriggerComponent.html":{}}}],["0.5rem",{"_index":1074,"title":{},"body":{"components/OddsComponent.html":{}}}],["0.6rem",{"_index":1089,"title":{},"body":{"components/OddsComponent.html":{}}}],["0.9",{"_index":794,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["0.9rem",{"_index":1102,"title":{},"body":{"components/OddsComponent.html":{}}}],["0/1",{"_index":1782,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1788,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1825,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1789,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1824,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":1758,"title":{},"body":{"components/WebcamComponent.html":{}}}],["1",{"_index":186,"title":{"interfaces/SportsBook-1.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{},"overview.html":{}}}],["1.3",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["1.5rem",{"_index":1413,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["1/1",{"_index":1803,"title":{},"body":{"coverage.html":{}}}],["1/17",{"_index":1806,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1795,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1930,"title":{},"body":{"index.html":{}}}],["10.0.0",{"_index":1854,"title":{},"body":{"dependencies.html":{}}}],["10/21",{"_index":1791,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1442,"title":{},"body":{"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["1000",{"_index":433,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["1024",{"_index":441,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["11",{"_index":1940,"title":{},"body":{"overview.html":{}}}],["11/18",{"_index":1787,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":1836,"title":{},"body":{"coverage.html":{}}}],["12/18",{"_index":1801,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":1939,"title":{},"body":{"overview.html":{}}}],["13.1.3",{"_index":1841,"title":{},"body":{"dependencies.html":{}}}],["13.4.6",{"_index":1849,"title":{},"body":{"dependencies.html":{}}}],["14.0.0",{"_index":1847,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1772,"title":{},"body":{"components/WebcamComponent.html":{}}}],["16",{"_index":1770,"title":{},"body":{"components/WebcamComponent.html":{}}}],["19",{"_index":1941,"title":{},"body":{"overview.html":{}}}],["1920",{"_index":1695,"title":{},"body":{"components/WebcamComponent.html":{}}}],["1em",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["1px",{"_index":690,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{}}}],["2",{"_index":699,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/ImageManipulationService.html":{},"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":1861,"title":{},"body":{"dependencies.html":{}}}],["2.28.0",{"_index":1852,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":1857,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1851,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1804,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1813,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":1812,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1431,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["200",{"_index":1774,"title":{},"body":{"components/WebcamComponent.html":{}}}],["25",{"_index":1811,"title":{},"body":{"coverage.html":{}}}],["2500",{"_index":435,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["255",{"_index":1070,"title":{},"body":{"components/OddsComponent.html":{}}}],["2560",{"_index":1696,"title":{},"body":{"components/WebcamComponent.html":{}}}],["2d",{"_index":1208,"title":{},"body":{"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{}}}],["2px",{"_index":1076,"title":{},"body":{"components/OddsComponent.html":{}}}],["3",{"_index":697,"title":{},"body":{"components/HeaderComponent.html":{},"components/SpinnerComponent.html":{}}}],["3/2.2",{"_index":1757,"title":{},"body":{"components/WebcamComponent.html":{}}}],["3/3",{"_index":1826,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1833,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1796,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":1823,"title":{},"body":{"coverage.html":{}}}],["31",{"_index":1821,"title":{},"body":{"coverage.html":{}}}],["320",{"_index":1694,"title":{},"body":{"components/WebcamComponent.html":{}}}],["33",{"_index":1780,"title":{},"body":{"coverage.html":{}}}],["375/295",{"_index":1756,"title":{},"body":{"components/WebcamComponent.html":{}}}],["3rem",{"_index":1412,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["4",{"_index":1416,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["4.17.1",{"_index":1856,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1793,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1830,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1064,"title":{},"body":{"components/OddsComponent.html":{}}}],["41",{"_index":1784,"title":{},"body":{"coverage.html":{}}}],["47",{"_index":1790,"title":{},"body":{"coverage.html":{}}}],["4px",{"_index":1750,"title":{},"body":{"components/WebcamComponent.html":{}}}],["4rem",{"_index":765,"title":{},"body":{"components/HelpComponent.html":{},"components/OddsComponent.html":{}}}],["5",{"_index":1805,"title":{},"body":{"coverage.html":{}}}],["5/10",{"_index":1799,"title":{},"body":{"coverage.html":{}}}],["5/12",{"_index":1785,"title":{},"body":{"coverage.html":{}}}],["5/16",{"_index":1822,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":1834,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1832,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":1798,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1513,"title":{},"body":{"components/TriggerComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["500",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{}}}],["512",{"_index":437,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["5px",{"_index":1771,"title":{},"body":{"components/WebcamComponent.html":{}}}],["6",{"_index":1433,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["6/18",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1828,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":1808,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["61",{"_index":1786,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1797,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1800,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1752,"title":{},"body":{"components/WebcamComponent.html":{}}}],["7.4.0",{"_index":1859,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":1066,"title":{},"body":{"components/OddsComponent.html":{}}}],["75",{"_index":1807,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1418,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["80",{"_index":1829,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":1831,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1827,"title":{},"body":{"coverage.html":{}}}],["9/10",{"_index":1792,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1794,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1761,"title":{},"body":{"components/WebcamComponent.html":{},"coverage.html":{}}}],["92",{"_index":1835,"title":{},"body":{"coverage.html":{}}}],["999px",{"_index":1767,"title":{},"body":{"components/WebcamComponent.html":{}}}],["__box",{"_index":1093,"title":{},"body":{"components/OddsComponent.html":{}}}],["__boxes",{"_index":1092,"title":{},"body":{"components/OddsComponent.html":{}}}],["__button",{"_index":1510,"title":{},"body":{"components/TriggerComponent.html":{}}}],["__close",{"_index":766,"title":{},"body":{"components/HelpComponent.html":{}}}],["__column",{"_index":1366,"title":{},"body":{"components/SnapComponent.html":{}}}],["__competitor",{"_index":1088,"title":{},"body":{"components/OddsComponent.html":{}}}],["__headline",{"_index":1624,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{}}}],["__line",{"_index":1083,"title":{},"body":{"components/OddsComponent.html":{}}}],["__lines",{"_index":1081,"title":{},"body":{"components/OddsComponent.html":{}}}],["__odds",{"_index":1103,"title":{},"body":{"components/OddsComponent.html":{}}}],["__powered",{"_index":1371,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["__reload",{"_index":1370,"title":{},"body":{"components/SnapComponent.html":{}}}],["__row",{"_index":1367,"title":{},"body":{"components/SnapComponent.html":{}}}],["__separator",{"_index":1068,"title":{},"body":{"components/OddsComponent.html":{}}}],["__spacer",{"_index":1372,"title":{},"body":{"components/SnapComponent.html":{}}}],["__spinner",{"_index":1063,"title":{},"body":{"components/OddsComponent.html":{},"components/TriggerComponent.html":{}}}],["__sportbook",{"_index":1078,"title":{},"body":{"components/OddsComponent.html":{}}}],["__switch",{"_index":1369,"title":{},"body":{"components/SnapComponent.html":{}}}],["__target",{"_index":1100,"title":{},"body":{"components/OddsComponent.html":{}}}],["__tournament",{"_index":1065,"title":{},"body":{"components/OddsComponent.html":{}}}],["__tv",{"_index":1764,"title":{},"body":{"components/WebcamComponent.html":{}}}],["_blank",{"_index":1030,"title":{},"body":{"components/OddsComponent.html":{}}}],["_links",{"_index":1109,"title":{},"body":{"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook-1.html":{},"interfaces/TvChannel.html":{}}}],["_state",{"_index":297,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["absolute",{"_index":1434,"title":{},"body":{"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["acc",{"_index":457,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["accent",{"_index":692,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{}}}],["access_token",{"_index":10,"title":{},"body":{"interfaces/AccessToken.html":{}}}],["accessed",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/WebcamComponent.html":{}}}],["accessors",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationConfigService.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["accesstoken",{"_index":1,"title":{"interfaces/AccessToken.html":{}},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{},"coverage.html":{}}}],["accesstokenprovider",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["according",{"_index":1670,"title":{},"body":{"components/WebcamComponent.html":{}}}],["account",{"_index":1655,"title":{},"body":{"components/WebcamComponent.html":{}}}],["accusam",{"_index":748,"title":{},"body":{"components/HelpComponent.html":{}}}],["action",{"_index":626,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["actual_component",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["add",{"_index":1566,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["added",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["additional",{"_index":789,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["addseconds",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["addseconds(new",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["affected",{"_index":1923,"title":{},"body":{"index.html":{}}}],["affected:test",{"_index":1922,"title":{},"body":{"index.html":{}}}],["afterviewinit",{"_index":1626,"title":{},"body":{"components/WebcamComponent.html":{}}}],["afterwards",{"_index":1282,"title":{},"body":{"components/SnapComponent.html":{}}}],["against",{"_index":397,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["agianst",{"_index":1573,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["aired",{"_index":1467,"title":{},"body":{"interfaces/SportEvent.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["aliases",{"_index":1943,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":409,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["aliquyam",{"_index":743,"title":{},"body":{"components/HelpComponent.html":{}}}],["allow",{"_index":1674,"title":{},"body":{"components/WebcamComponent.html":{}}}],["allowed",{"_index":834,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["american",{"_index":1144,"title":{},"body":{"injectables/OddsService.html":{}}}],["amet",{"_index":728,"title":{},"body":{"components/HelpComponent.html":{}}}],["analytics",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{}}}],["analytics.service",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{}}}],["analytics.service.ts",{"_index":586,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["analytics.service.ts:10",{"_index":635,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:103",{"_index":619,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:107",{"_index":612,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:11",{"_index":603,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:22",{"_index":623,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:45",{"_index":604,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:54",{"_index":630,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:67",{"_index":609,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:76",{"_index":633,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:83",{"_index":611,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:87",{"_index":613,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:91",{"_index":614,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:95",{"_index":621,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:99",{"_index":616,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analyticsservice",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{}}}],["analyzed",{"_index":1574,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["angular",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["angular/animations",{"_index":1840,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1842,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["angular/compiler",{"_index":1843,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1844,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":1846,"title":{},"body":{"dependencies.html":{}}}],["animation",{"_index":1423,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["api",{"_index":1563,"title":{},"body":{"injectables/TvSearchService.html":{},"index.html":{}}}],["api/api",{"_index":1393,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["api/tv",{"_index":1394,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["apiurl",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":684,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["app.component",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":25,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationConfigService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application/octet",{"_index":1602,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["applicationconfig",{"_index":97,"title":{"interfaces/ApplicationConfig.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/LoggerService.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationconfigservice",{"_index":63,"title":{"injectables/ApplicationConfigService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"injectables/LoggerService.html":{},"injectables/NotificationService.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["applicationstate",{"_index":1267,"title":{},"body":{"components/SnapComponent.html":{}}}],["appmodule",{"_index":233,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps/.../app",{"_index":1866,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../application",{"_index":1948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../console",{"_index":1947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../document",{"_index":1949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../google",{"_index":1950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../location",{"_index":1951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../log",{"_index":1867,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["apps/.../manipulated",{"_index":1944,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../media",{"_index":1868,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../navigator",{"_index":1952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../storage",{"_index":1953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../window",{"_index":1954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/snapodds/src/app/app.component.ts",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/app.component.ts:104",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:21",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:23",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:24",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:25",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:26",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:27",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:28",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:29",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:30",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:31",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:34",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:45",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:47",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:60",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:70",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:78",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:87",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.module.ts",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/snapodds/src/app/app.module.ts:61",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/snapodds/src/app/content/content.component.ts",{"_index":535,"title":{},"body":{"components/ContentComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/footer/footer.component.ts",{"_index":571,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/header/header.component.ts",{"_index":676,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/header/header.component.ts:15",{"_index":682,"title":{},"body":{"components/HeaderComponent.html":{}}}],["apps/snapodds/src/app/header/header.component.ts:9",{"_index":681,"title":{},"body":{"components/HeaderComponent.html":{}}}],["apps/snapodds/src/app/help/help.component.ts",{"_index":712,"title":{},"body":{"components/HelpComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/help/help.component.ts:15",{"_index":719,"title":{},"body":{"components/HelpComponent.html":{}}}],["apps/snapodds/src/app/help/help.component.ts:9",{"_index":718,"title":{},"body":{"components/HelpComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts",{"_index":975,"title":{},"body":{"components/OddsComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:13",{"_index":1019,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:14",{"_index":1020,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:15",{"_index":1021,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:17",{"_index":991,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:18",{"_index":990,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:28",{"_index":1014,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:40",{"_index":1004,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:54",{"_index":994,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:76",{"_index":1008,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:86",{"_index":1010,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts",{"_index":1222,"title":{},"body":{"components/SnapComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:102",{"_index":1268,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:118",{"_index":1279,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:135",{"_index":1250,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:146",{"_index":1242,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:159",{"_index":1257,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:177",{"_index":1278,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:184",{"_index":1275,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:22",{"_index":1299,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:24",{"_index":1293,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:25",{"_index":1296,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:27",{"_index":1295,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:28",{"_index":1240,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:48",{"_index":1265,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:63",{"_index":1287,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:79",{"_index":1261,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:89",{"_index":1290,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/spinner/spinner.component.ts",{"_index":1407,"title":{},"body":{"components/SpinnerComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/spinner/spinner.component.ts:10",{"_index":1411,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["apps/snapodds/src/app/svgs/switch.svg.component.ts",{"_index":1486,"title":{},"body":{"components/SwitchSvgComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/svgs/trigger.svg.component.ts",{"_index":1514,"title":{},"body":{"components/TriggerSvgComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/trigger/trigger.component.ts",{"_index":1501,"title":{},"body":{"components/TriggerComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/trigger/trigger.component.ts:10",{"_index":1508,"title":{},"body":{"components/TriggerComponent.html":{}}}],["apps/snapodds/src/app/trigger/trigger.component.ts:11",{"_index":1509,"title":{},"body":{"components/TriggerComponent.html":{}}}],["apps/snapodds/src/app/trigger/trigger.component.ts:9",{"_index":1507,"title":{},"body":{"components/TriggerComponent.html":{}}}],["apps/snapodds/src/app/user",{"_index":1613,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts",{"_index":1625,"title":{},"body":{"components/WebcamComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:105",{"_index":1660,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:115",{"_index":1668,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:124",{"_index":1676,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:132",{"_index":1647,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:140",{"_index":1657,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:148",{"_index":1650,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:19",{"_index":1685,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:20",{"_index":1697,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:25",{"_index":1703,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:26",{"_index":1705,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:27",{"_index":1689,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:28",{"_index":1700,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:30",{"_index":1683,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:32",{"_index":1686,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:33",{"_index":1645,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:46",{"_index":1675,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:60",{"_index":1671,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:72",{"_index":1678,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:94",{"_index":1662,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/config/application",{"_index":341,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"coverage.html":{}}}],["apps/snapodds/src/models/line",{"_index":875,"title":{},"body":{"interfaces/LineOdds.html":{},"coverage.html":{}}}],["apps/snapodds/src/models/sports",{"_index":1470,"title":{},"body":{"interfaces/SportsBook.html":{},"interfaces/SportsBookLine.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/api/api",{"_index":1525,"title":{},"body":{"classes/TvSearchNoResultError.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/api/odds.service.ts",{"_index":1131,"title":{},"body":{"injectables/OddsService.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/api/odds.service.ts:116",{"_index":1141,"title":{},"body":{"injectables/OddsService.html":{}}}],["apps/snapodds/src/services/api/odds.service.ts:13",{"_index":1138,"title":{},"body":{"injectables/OddsService.html":{}}}],["apps/snapodds/src/services/api/odds.service.ts:23",{"_index":1152,"title":{},"body":{"injectables/OddsService.html":{}}}],["apps/snapodds/src/services/api/odds.service.ts:31",{"_index":1147,"title":{},"body":{"injectables/OddsService.html":{}}}],["apps/snapodds/src/services/api/odds.service.ts:47",{"_index":1149,"title":{},"body":{"injectables/OddsService.html":{}}}],["apps/snapodds/src/services/api/tv",{"_index":1547,"title":{},"body":{"injectables/TvSearchService.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts:11",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts:12",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts:14",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts:22",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts:36",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts:45",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts:52",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts:60",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/snapodds/src/services/config/application",{"_index":362,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/snapodds/src/services/i18n/file",{"_index":546,"title":{},"body":{"classes/FileTranslateLoader.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/i18n/translation",{"_index":1490,"title":{},"body":{"interfaces/TranslationEntries.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/image",{"_index":770,"title":{},"body":{"injectables/ImageManipulationService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/snapodds/src/services/logger/log",{"_index":1809,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["apps/snapodds/src/services/logger/logger.service.ts",{"_index":891,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/logger/logger.service.ts:11",{"_index":896,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/snapodds/src/services/logger/logger.service.ts:17",{"_index":898,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/snapodds/src/services/logger/logger.service.ts:21",{"_index":900,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/snapodds/src/services/logger/logger.service.ts:25",{"_index":918,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/snapodds/src/services/logger/logger.service.ts:29",{"_index":902,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/snapodds/src/services/logger/logger.service.ts:41",{"_index":910,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/snapodds/src/services/logger/logger.service.ts:66",{"_index":904,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/snapodds/src/services/notification/notification.service.ts",{"_index":957,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/notification/notification.service.ts:17",{"_index":967,"title":{},"body":{"injectables/NotificationService.html":{}}}],["apps/snapodds/src/services/notification/notification.service.ts:27",{"_index":963,"title":{},"body":{"injectables/NotificationService.html":{}}}],["apps/snapodds/src/services/notification/notification.service.ts:8",{"_index":962,"title":{},"body":{"injectables/NotificationService.html":{}}}],["apps/snapodds/src/services/snap",{"_index":1373,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/tokens/console",{"_index":1814,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/snapodds/src/services/tokens/document",{"_index":1815,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/snapodds/src/services/tokens/location",{"_index":1816,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/snapodds/src/services/tokens/navigator",{"_index":1817,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/snapodds/src/services/tokens/storage",{"_index":1818,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/snapodds/src/services/tokens/window",{"_index":1820,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/snapodds/src/services/tracking/google",{"_index":585,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/snapodds/src/states/app",{"_index":295,"title":{},"body":{"injectables/AppStateStore.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["apps/snapodds/src/states/media",{"_index":939,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["appstate",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{}}}],["appstate.show_help",{"_index":313,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["appstates",{"_index":324,"title":{},"body":{"injectables/AppStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["appstatestore",{"_index":67,"title":{"injectables/AppStateStore.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["area",{"_index":1679,"title":{},"body":{"components/WebcamComponent.html":{}}}],["arraybuffer",{"_index":1684,"title":{},"body":{"components/WebcamComponent.html":{}}}],["artifacts",{"_index":1905,"title":{},"body":{"index.html":{}}}],["aspect",{"_index":1754,"title":{},"body":{"components/WebcamComponent.html":{}}}],["assign",{"_index":1009,"title":{},"body":{"components/OddsComponent.html":{}}}],["assigned",{"_index":997,"title":{},"body":{"components/OddsComponent.html":{}}}],["assigns",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["auth/auth.service",{"_index":1156,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["authenticate",{"_index":1564,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["authorities",{"_index":12,"title":{},"body":{"interfaces/AccessToken.html":{}}}],["authorization",{"_index":1162,"title":{},"body":{"injectables/OddsService.html":{}}}],["authresponse",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresponse.access_token",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresponse.expires_in",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice",{"_index":473,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{},"coverage.html":{}}}],["auto",{"_index":538,"title":{},"body":{"components/ContentComponent.html":{},"components/WebcamComponent.html":{}}}],["automatically",{"_index":1898,"title":{},"body":{"index.html":{}}}],["autosearchsport",{"_index":1375,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["autosearchsport(imagedata",{"_index":1380,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["autosnap",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/variables.html":{}}}],["autosnap_delay",{"_index":364,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["autosnap_delay_initial",{"_index":365,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["autosnap_max_dimension",{"_index":366,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["autosnapping",{"_index":349,"title":{},"body":{"interfaces/ApplicationConfig.html":{}}}],["available",{"_index":608,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"interfaces/OddsResponse.html":{},"interfaces/SportsBook-1.html":{},"interfaces/TranslationEntries.html":{},"components/WebcamComponent.html":{},"index.html":{}}}],["b",{"_index":1216,"title":{},"body":{"interfaces/Quadrangle2d.html":{}}}],["background",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["bar",{"_index":1414,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["base",{"_index":584,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{}}}],["based",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"components/SnapComponent.html":{}}}],["baseline",{"_index":688,"title":{},"body":{"components/HeaderComponent.html":{}}}],["baseurl",{"_index":1135,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["beacon",{"_index":661,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["bearer",{"_index":1163,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["beneath",{"_index":806,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["best",{"_index":1252,"title":{},"body":{"components/SnapComponent.html":{}}}],["bet",{"_index":1113,"title":{},"body":{"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{}}}],["bets",{"_index":1123,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{}}}],["better",{"_index":1150,"title":{},"body":{"injectables/OddsService.html":{}}}],["between",{"_index":543,"title":{},"body":{"components/ContentComponent.html":{},"components/OddsComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["bit",{"_index":1280,"title":{},"body":{"components/SnapComponent.html":{}}}],["blob",{"_index":788,"title":{},"body":{"injectables/ImageManipulationService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["block",{"_index":1073,"title":{},"body":{"components/OddsComponent.html":{},"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{}}}],["book",{"_index":886,"title":{},"body":{"interfaces/LineOdds.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"coverage.html":{}}}],["book.ts",{"_index":1471,"title":{},"body":{"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"coverage.html":{}}}],["boolean",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/NotificationService.html":{},"components/TriggerComponent.html":{},"interfaces/TvChannel.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["boolean(this.accesstoken",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["border",{"_index":689,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{}}}],["bottom",{"_index":577,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["box",{"_index":763,"title":{},"body":{"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/WebcamComponent.html":{}}}],["break",{"_index":929,"title":{},"body":{"injectables/LoggerService.html":{}}}],["breaks",{"_index":1623,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{}}}],["broadcasted",{"_index":1445,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["browse",{"_index":1937,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"components/OddsComponent.html":{},"components/WebcamComponent.html":{},"dependencies.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["browserapi",{"_index":964,"title":{},"body":{"injectables/NotificationService.html":{}}}],["browsermodule",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":555,"title":{},"body":{"classes/FileTranslateLoader.html":{},"index.html":{}}}],["build:elements",{"_index":1912,"title":{},"body":{"index.html":{}}}],["builder",{"_index":1887,"title":{},"body":{"index.html":{}}}],["button",{"_index":710,"title":{},"body":{"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{}}}],["c",{"_index":701,"title":{},"body":{"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["calculate",{"_index":1585,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["calculated",{"_index":1581,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["calculates",{"_index":822,"title":{},"body":{"injectables/ImageManipulationService.html":{},"injectables/TvSearchService.html":{}}}],["call",{"_index":998,"title":{},"body":{"components/OddsComponent.html":{},"components/SnapComponent.html":{}}}],["callback",{"_index":343,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"components/OddsComponent.html":{},"components/WebcamComponent.html":{}}}],["callbacks",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["called",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["camera",{"_index":410,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["cameras",{"_index":1569,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["cameraswitched",{"_index":1635,"title":{},"body":{"components/WebcamComponent.html":{}}}],["cameraswitched(deviceid",{"_index":1646,"title":{},"body":{"components/WebcamComponent.html":{}}}],["can't",{"_index":1669,"title":{},"body":{"components/WebcamComponent.html":{}}}],["cancel",{"_index":709,"title":{},"body":{"components/HeaderComponent.html":{}}}],["cancelsnap",{"_index":680,"title":{},"body":{"components/HeaderComponent.html":{}}}],["canvas",{"_index":787,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["canvas.getcontext('2d",{"_index":852,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["canvas.height",{"_index":850,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["canvas.toblob",{"_index":865,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["canvas.width",{"_index":849,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["case",{"_index":926,"title":{},"body":{"injectables/LoggerService.html":{}}}],["catch",{"_index":653,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{}}}],["catcherror",{"_index":1390,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["catcherror((error",{"_index":1401,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["category",{"_index":587,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"interfaces/SportEvent.html":{}}}],["center",{"_index":705,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["centercontentonzoom",{"_index":1636,"title":{},"body":{"components/WebcamComponent.html":{}}}],["change",{"_index":304,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{},"index.html":{}}}],["changed",{"_index":1005,"title":{},"body":{"components/OddsComponent.html":{}}}],["changes",{"_index":307,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{}}}],["changes.tvsearchresultentry.currentvalue",{"_index":1031,"title":{},"body":{"components/OddsComponent.html":{}}}],["channel",{"_index":1447,"title":{},"body":{"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["channel.ts",{"_index":1517,"title":{},"body":{"interfaces/TvChannel.html":{},"coverage.html":{}}}],["channels",{"_index":1542,"title":{},"body":{"interfaces/TvSearchResultEntry.html":{}}}],["checks",{"_index":605,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["child(#{$i",{"_index":1437,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["class",{"_index":149,"title":{"classes/FileTranslateLoader.html":{},"classes/TvSearchNoResultError.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"classes/TvSearchNoResultError.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["classes",{"_index":545,"title":{},"body":{"classes/FileTranslateLoader.html":{},"classes/TvSearchNoResultError.html":{},"overview.html":{}}}],["clean",{"_index":1262,"title":{},"body":{"components/SnapComponent.html":{}}}],["clears",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["clickable",{"_index":1095,"title":{},"body":{"components/OddsComponent.html":{}}}],["clicked",{"_index":1506,"title":{},"body":{"components/TriggerComponent.html":{}}}],["client",{"_index":1565,"title":{},"body":{"injectables/TvSearchService.html":{},"index.html":{}}}],["clita",{"_index":755,"title":{},"body":{"components/HelpComponent.html":{}}}],["closecallback",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["closed",{"_index":345,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"components/HeaderComponent.html":{},"components/SnapComponent.html":{}}}],["closeevent",{"_index":383,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/HeaderComponent.html":{}}}],["closeoddsview",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/OddsComponent.html":{}}}],["cluster_appmodule",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":566,"title":{},"body":{"classes/FileTranslateLoader.html":{},"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{},"index.html":{}}}],["color",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["column",{"_index":540,"title":{},"body":{"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{}}}],["combined",{"_index":1475,"title":{},"body":{"interfaces/SportsBook.html":{},"interfaces/SportsBookLine.html":{}}}],["competitor",{"_index":529,"title":{"interfaces/Competitor.html":{}},"body":{"interfaces/Competitor.html":{},"interfaces/LineOdds.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"coverage.html":{}}}],["competitor.id",{"_index":1181,"title":{},"body":{"injectables/OddsService.html":{}}}],["competitor.name",{"_index":1047,"title":{},"body":{"components/OddsComponent.html":{}}}],["competitorid",{"_index":1119,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{}}}],["competitorindex",{"_index":1179,"title":{},"body":{"injectables/OddsService.html":{}}}],["competitors",{"_index":878,"title":{},"body":{"interfaces/LineOdds.html":{},"components/OddsComponent.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/SportEvent.html":{}}}],["competitors.findindex((competitor",{"_index":1180,"title":{},"body":{"injectables/OddsService.html":{}}}],["competitors.map",{"_index":1172,"title":{},"body":{"injectables/OddsService.html":{}}}],["competitors?.length",{"_index":1166,"title":{},"body":{"injectables/OddsService.html":{}}}],["component",{"_index":24,"title":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["components",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"overview.html":{}}}],["compression",{"_index":796,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["config",{"_index":367,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"injectables/LoggerService.html":{},"injectables/NotificationService.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["config.service.ts",{"_index":363,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.service.ts:106",{"_index":385,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:113",{"_index":381,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:121",{"_index":389,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:128",{"_index":420,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:24",{"_index":440,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:26",{"_index":442,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:27",{"_index":438,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:28",{"_index":436,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:29",{"_index":434,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:35",{"_index":431,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:44",{"_index":425,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:54",{"_index":444,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:61",{"_index":417,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:68",{"_index":413,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:76",{"_index":399,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:83",{"_index":411,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:90",{"_index":412,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:97",{"_index":393,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.ts",{"_index":342,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"coverage.html":{}}}],["config/application",{"_index":446,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/LoggerService.html":{},"injectables/NotificationService.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["configuration",{"_index":449,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["configure",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["configured",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationConfigService.html":{},"injectables/LoggerService.html":{},"components/SnapComponent.html":{}}}],["connector",{"_index":1773,"title":{},"body":{"components/WebcamComponent.html":{}}}],["consetetur",{"_index":729,"title":{},"body":{"components/HelpComponent.html":{}}}],["consideration",{"_index":1555,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["console",{"_index":895,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationConfigService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/OddsService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["constructor",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"classes/TvSearchNoResultError.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["constructor(@inject(window",{"_index":1027,"title":{},"body":{"components/OddsComponent.html":{}}}],["constructor(applicationconfigservice",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"injectables/LoggerService.html":{}}}],["constructor(appstatestore",{"_index":717,"title":{},"body":{"components/HelpComponent.html":{}}}],["constructor(http",{"_index":1136,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["constructor(imagemanipulationservice",{"_index":1644,"title":{},"body":{"components/WebcamComponent.html":{}}}],["constructor(logger",{"_index":601,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"components/SnapComponent.html":{}}}],["constructor(navigator",{"_index":960,"title":{},"body":{"injectables/NotificationService.html":{}}}],["constructor(private",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{}}}],["constructor(tvsearchservice",{"_index":1377,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["constructor(window",{"_index":987,"title":{},"body":{"components/OddsComponent.html":{}}}],["container",{"_index":1077,"title":{},"body":{"components/OddsComponent.html":{},"components/WebcamComponent.html":{}}}],["contains",{"_index":1473,"title":{},"body":{"interfaces/SportsBook.html":{},"index.html":{}}}],["content",{"_index":536,"title":{},"body":{"components/ContentComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{}}}],["content'},{'name",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["content.component.scss",{"_index":537,"title":{},"body":{"components/ContentComponent.html":{}}}],["content/content.component",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["contentcomponent",{"_index":204,"title":{"components/ContentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["convert",{"_index":1142,"title":{},"body":{"injectables/OddsService.html":{},"miscellaneous/functions.html":{}}}],["converted",{"_index":1169,"title":{},"body":{"injectables/OddsService.html":{}}}],["converted.lines.length",{"_index":1200,"title":{},"body":{"injectables/OddsService.html":{}}}],["converted.lines[0].overunder",{"_index":1190,"title":{},"body":{"injectables/OddsService.html":{}}}],["converted.lines[0].overunderodds",{"_index":1192,"title":{},"body":{"injectables/OddsService.html":{}}}],["converted.lines[0].overunderurl",{"_index":1193,"title":{},"body":{"injectables/OddsService.html":{}}}],["converted.lines[1].overunder",{"_index":1194,"title":{},"body":{"injectables/OddsService.html":{}}}],["converted.lines[1].overunderodds",{"_index":1195,"title":{},"body":{"injectables/OddsService.html":{}}}],["converted.lines[1].overunderurl",{"_index":1196,"title":{},"body":{"injectables/OddsService.html":{}}}],["converted.lines[competitorindex].moneyline",{"_index":1187,"title":{},"body":{"injectables/OddsService.html":{}}}],["converted.lines[competitorindex].moneylineurl",{"_index":1189,"title":{},"body":{"injectables/OddsService.html":{}}}],["converted.lines[competitorindex].spread",{"_index":1197,"title":{},"body":{"injectables/OddsService.html":{}}}],["converted.lines[competitorindex].spreadodds",{"_index":1198,"title":{},"body":{"injectables/OddsService.html":{}}}],["converted.lines[competitorindex].spreadurl",{"_index":1199,"title":{},"body":{"injectables/OddsService.html":{}}}],["converts",{"_index":786,"title":{},"body":{"injectables/ImageManipulationService.html":{},"injectables/OddsService.html":{},"components/WebcamComponent.html":{}}}],["converttoamericanodds",{"_index":1132,"title":{},"body":{"injectables/OddsService.html":{}}}],["converttoamericanodds(odds",{"_index":1140,"title":{},"body":{"injectables/OddsService.html":{}}}],["coordinate",{"_index":1212,"title":{},"body":{"interfaces/Point2d.html":{}}}],["correctly",{"_index":408,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{}}}],["corresponding",{"_index":387,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/HelpComponent.html":{},"interfaces/OddsResponse.html":{},"components/SnapComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["cors",{"_index":1850,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":1417,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["coverage",{"_index":1777,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1561,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["createcustomelement",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["createcustomelement(appcomponent",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["createimagefromcanvas",{"_index":773,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["createimagefromcanvas(canvas",{"_index":781,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["creates",{"_index":817,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["createsnapscreenheaders",{"_index":1550,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["createsnapscreenheaders(accesstoken",{"_index":1558,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["crop",{"_index":774,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["crop(source",{"_index":797,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["cropandresizeimage",{"_index":775,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["cropandresizeimage(source",{"_index":814,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["cropped",{"_index":810,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["crops",{"_index":803,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["current",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TvSearchService.html":{}}}],["currentcolor",{"_index":1419,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["currently",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["currenttimestamp",{"_index":1552,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["cursor",{"_index":1096,"title":{},"body":{"components/OddsComponent.html":{}}}],["cursors",{"_index":1653,"title":{},"body":{"components/WebcamComponent.html":{}}}],["customelements.define('snapodds",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["d",{"_index":1217,"title":{},"body":{"interfaces/Quadrangle2d.html":{}}}],["data",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"interfaces/LineOdds.html":{},"injectables/LoggerService.html":{},"injectables/OddsService.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLine.html":{}}}],["dataurl",{"_index":1661,"title":{},"body":{"components/WebcamComponent.html":{}}}],["date",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"components/OddsComponent.html":{},"dependencies.html":{}}}],["date.now",{"_index":1399,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["date.parse(responsedate",{"_index":1609,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["datetime",{"_index":1456,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["dd't'hh:mm:ss.ssszz",{"_index":1460,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["de",{"_index":550,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["debug",{"_index":892,"title":{},"body":{"injectables/LoggerService.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{}}}],["debug(...data",{"_index":897,"title":{},"body":{"injectables/LoggerService.html":{}}}],["debugimagemanipulations",{"_index":1637,"title":{},"body":{"components/WebcamComponent.html":{}}}],["declarations",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["declare",{"_index":638,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["decoration",{"_index":1086,"title":{},"body":{"components/OddsComponent.html":{}}}],["decorators",{"_index":1297,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["deep",{"_index":1621,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["default",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"miscellaneous/variables.html":{}}}],["default_application_config",{"_index":439,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultlanguage",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["defer",{"_index":1301,"title":{},"body":{"components/SnapComponent.html":{}}}],["defined",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"classes/TvSearchNoResultError.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["delay",{"_index":400,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"injectables/TvSearchService.html":{}}}],["dep",{"_index":1926,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":235,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["depending",{"_index":1243,"title":{},"body":{"components/SnapComponent.html":{}}}],["depth",{"_index":1776,"title":{},"body":{"components/WebcamComponent.html":{}}}],["description",{"_index":402,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"interfaces/TranslationEntries.html":{},"interfaces/TvChannel.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["destroyed",{"_index":1226,"title":{},"body":{"components/SnapComponent.html":{}}}],["determine",{"_index":1658,"title":{},"body":{"components/WebcamComponent.html":{}}}],["determines",{"_index":418,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/NotificationService.html":{}}}],["determining",{"_index":325,"title":{},"body":{"injectables/AppStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["dev",{"_index":1896,"title":{},"body":{"index.html":{}}}],["development",{"_index":1886,"title":{},"body":{"index.html":{}}}],["device",{"_index":358,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["device_camera_ready",{"_index":955,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["device_init",{"_index":954,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["device_no_camera",{"_index":334,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["device_no_permission",{"_index":335,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["deviceid",{"_index":1649,"title":{},"body":{"components/WebcamComponent.html":{}}}],["diagram",{"_index":1929,"title":{},"body":{"index.html":{}}}],["diam",{"_index":733,"title":{},"body":{"components/HelpComponent.html":{}}}],["difference",{"_index":1578,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["differenceinseconds",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["differenceinseconds(this.tokenexpirationdate",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["different",{"_index":1260,"title":{},"body":{"components/SnapComponent.html":{}}}],["dimension",{"_index":414,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/ImageManipulationService.html":{}}}],["direction",{"_index":539,"title":{},"body":{"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{}}}],["directive",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["directives",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["directory",{"_index":1907,"title":{},"body":{"index.html":{}}}],["disable",{"_index":348,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["disabled",{"_index":1504,"title":{},"body":{"components/TriggerComponent.html":{}}}],["discipline",{"_index":1462,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["dispatch",{"_index":300,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["dispatch(state",{"_index":302,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["display",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["displayed",{"_index":1143,"title":{},"body":{"injectables/OddsService.html":{}}}],["dist/elements",{"_index":1914,"title":{},"body":{"index.html":{}}}],["dist/snapodds",{"_index":1906,"title":{},"body":{"index.html":{}}}],["distributed",{"_index":1883,"title":{},"body":{"index.html":{}}}],["div",{"_index":1422,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["div::after",{"_index":1429,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["div:nth",{"_index":1436,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["dobootstrap",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["document",{"_index":779,"title":{},"body":{"injectables/ImageManipulationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":1778,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doesn't",{"_index":1522,"title":{},"body":{"interfaces/TvChannel.html":{}}}],["dolor",{"_index":726,"title":{},"body":{"components/HelpComponent.html":{}}}],["dolore",{"_index":741,"title":{},"body":{"components/HelpComponent.html":{}}}],["dolores",{"_index":751,"title":{},"body":{"components/HelpComponent.html":{}}}],["dom",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["don't",{"_index":557,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["dotenv",{"_index":1853,"title":{},"body":{"dependencies.html":{}}}],["downscale",{"_index":776,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["downscale(sourcewidth",{"_index":819,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["drawdebugimage",{"_index":1638,"title":{},"body":{"components/WebcamComponent.html":{}}}],["drawdebugimage(blob",{"_index":1659,"title":{},"body":{"components/WebcamComponent.html":{}}}],["due",{"_index":1246,"title":{},"body":{"components/SnapComponent.html":{}}}],["duo",{"_index":750,"title":{},"body":{"components/HelpComponent.html":{}}}],["duration",{"_index":617,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"injectables/SnapOddsFacade.html":{}}}],["during",{"_index":554,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["dynamic",{"_index":1845,"title":{},"body":{"dependencies.html":{}}}],["ea",{"_index":752,"title":{},"body":{"components/HelpComponent.html":{}}}],["eirmod",{"_index":735,"title":{},"body":{"components/HelpComponent.html":{}}}],["el",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["element",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"index.html":{}}}],["elementref",{"_index":1698,"title":{},"body":{"components/WebcamComponent.html":{}}}],["elitr",{"_index":731,"title":{},"body":{"components/HelpComponent.html":{}}}],["ellipsis",{"_index":1080,"title":{},"body":{"components/OddsComponent.html":{}}}],["emit",{"_index":1251,"title":{},"body":{"components/SnapComponent.html":{}}}],["emitcloseevent",{"_index":369,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["emitloggerevent",{"_index":370,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["emitloggerevent(loglevel",{"_index":384,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["emitresultsevent",{"_index":371,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["emitresultsevent(resultentry",{"_index":388,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["emits",{"_index":315,"title":{},"body":{"injectables/AppStateStore.html":{},"components/HeaderComponent.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["empty",{"_index":868,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["en",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationConfigService.html":{},"classes/FileTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["enable",{"_index":347,"title":{},"body":{"interfaces/ApplicationConfig.html":{}}}],["enabled",{"_index":419,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/WebcamComponent.html":{}}}],["end",{"_index":1082,"title":{},"body":{"components/OddsComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["endpoint",{"_index":1572,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["endpoints",{"_index":1893,"title":{},"body":{"index.html":{}}}],["endtime",{"_index":1448,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["entity",{"_index":531,"title":{},"body":{"interfaces/Competitor.html":{},"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{}}}],["entries",{"_index":427,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"classes/FileTranslateLoader.html":{},"interfaces/TvSearchResult.html":{}}}],["entries.de",{"_index":568,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["entries.en",{"_index":569,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["entries.ts",{"_index":1491,"title":{},"body":{"interfaces/TranslationEntries.html":{},"coverage.html":{}}}],["entry",{"_index":1253,"title":{},"body":{"components/SnapComponent.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["entry.ts",{"_index":1540,"title":{},"body":{"interfaces/TvSearchResultEntry.html":{},"coverage.html":{}}}],["entrycomponents",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["enum",{"_index":327,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["enumerations",{"_index":1865,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1693,"title":{},"body":{"components/WebcamComponent.html":{}}}],["environment.debugimagemanipulations",{"_index":1680,"title":{},"body":{"components/WebcamComponent.html":{}}}],["environments/environment",{"_index":1707,"title":{},"body":{"components/WebcamComponent.html":{}}}],["eos",{"_index":747,"title":{},"body":{"components/HelpComponent.html":{}}}],["erat",{"_index":744,"title":{},"body":{"components/HelpComponent.html":{}}}],["error",{"_index":654,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"classes/TvSearchNoResultError.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{}}}],["error(...data",{"_index":899,"title":{},"body":{"injectables/LoggerService.html":{}}}],["errormessage",{"_index":867,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["errors",{"_index":1248,"title":{},"body":{"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["errors.pipe(delay(this.applicationconfigservice.getautosnapdelay",{"_index":1346,"title":{},"body":{"components/SnapComponent.html":{}}}],["errors.ts",{"_index":1526,"title":{},"body":{"classes/TvSearchNoResultError.html":{},"coverage.html":{}}}],["errors.ts:4",{"_index":1529,"title":{},"body":{"classes/TvSearchNoResultError.html":{}}}],["est",{"_index":761,"title":{},"body":{"components/HelpComponent.html":{}}}],["et",{"_index":740,"title":{},"body":{"components/HelpComponent.html":{}}}],["event",{"_index":352,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"interfaces/Competitor.html":{},"injectables/GoogleAnalyticsService.html":{},"components/OddsComponent.html":{},"interfaces/OddsResponse.html":{},"components/SnapComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["event.preventdefault",{"_index":1028,"title":{},"body":{"components/OddsComponent.html":{}}}],["event.ts",{"_index":1444,"title":{},"body":{"interfaces/SportEvent.html":{},"coverage.html":{}}}],["eventaction",{"_index":649,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["eventcategory",{"_index":647,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["eventemitter",{"_index":992,"title":{},"body":{"components/OddsComponent.html":{},"components/TriggerComponent.html":{}}}],["eventlabel",{"_index":650,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["events",{"_index":1512,"title":{},"body":{"components/TriggerComponent.html":{},"classes/TvSearchNoResultError.html":{},"components/WebcamComponent.html":{}}}],["eventvalue",{"_index":652,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["execute",{"_index":1919,"title":{},"body":{"index.html":{}}}],["executed",{"_index":344,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["existing",{"_index":1263,"title":{},"body":{"components/SnapComponent.html":{}}}],["expiration",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["expires_in",{"_index":13,"title":{},"body":{"interfaces/AccessToken.html":{}}}],["export",{"_index":21,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"components/SwitchSvgComponent.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["express",{"_index":1855,"title":{},"body":{"dependencies.html":{}}}],["express.js",{"_index":1884,"title":{},"body":{"index.html":{}}}],["extends",{"_index":1528,"title":{},"body":{"classes/TvSearchNoResultError.html":{}}}],["external",{"_index":1464,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["externalid",{"_index":1449,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["externally",{"_index":558,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["extracted",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["facade.service",{"_index":1315,"title":{},"body":{"components/SnapComponent.html":{}}}],["facade.service.ts",{"_index":1374,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"coverage.html":{}}}],["facade.service.ts:10",{"_index":1379,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["facade.service.ts:22",{"_index":1386,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["facade.service.ts:44",{"_index":1381,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["facingmode",{"_index":1691,"title":{},"body":{"components/WebcamComponent.html":{}}}],["factor",{"_index":811,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["factory",{"_index":1957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["failed",{"_index":871,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/OddsComponent.html":{},"injectables/SnapOddsFacade.html":{}}}],["fails",{"_index":999,"title":{},"body":{"components/OddsComponent.html":{}}}],["fallback",{"_index":625,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["false",{"_index":404,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["features",{"_index":1933,"title":{},"body":{"index.html":{}}}],["feedback",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["fff",{"_index":1765,"title":{},"body":{"components/WebcamComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"components/SwitchSvgComponent.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["filereader",{"_index":1730,"title":{},"body":{"components/WebcamComponent.html":{}}}],["files",{"_index":1899,"title":{},"body":{"index.html":{}}}],["filetranslateloader",{"_index":263,"title":{"classes/FileTranslateLoader.html":{}},"body":{"modules/AppModule.html":{},"classes/FileTranslateLoader.html":{},"coverage.html":{}}}],["filter",{"_index":426,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["filter((offer",{"_index":1175,"title":{},"body":{"injectables/OddsService.html":{}}}],["filter((state",{"_index":947,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["find",{"_index":1382,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["first",{"_index":1218,"title":{},"body":{"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{}}}],["flag",{"_index":1520,"title":{},"body":{"interfaces/TvChannel.html":{},"index.html":{}}}],["flex",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["fns",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["focus",{"_index":768,"title":{},"body":{"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{}}}],["font",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["footer",{"_index":572,"title":{},"body":{"components/FooterComponent.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["footer'},{'name",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["footer.component.scss",{"_index":573,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["footercomponent",{"_index":206,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["foreach((offer",{"_index":1177,"title":{},"body":{"injectables/OddsService.html":{}}}],["format",{"_index":1457,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["forwarded",{"_index":915,"title":{},"body":{"injectables/LoggerService.html":{}}}],["found",{"_index":422,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"components/WebcamComponent.html":{}}}],["fourth",{"_index":1221,"title":{},"body":{"interfaces/Quadrangle2d.html":{}}}],["frame",{"_index":1663,"title":{},"body":{"components/WebcamComponent.html":{}}}],["from(this.applicationconfigservice.accesstokenprovider()).pipe",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["fromloglevel",{"_index":447,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["fromloglevel(loglevel",{"_index":1873,"title":{},"body":{"miscellaneous/functions.html":{}}}],["function",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/NotificationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":1872,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1648,"title":{},"body":{"components/WebcamComponent.html":{},"index.html":{}}}],["g",{"_index":1902,"title":{},"body":{"index.html":{}}}],["ga",{"_index":640,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ga('send",{"_index":657,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["game",{"_index":1075,"title":{},"body":{"components/OddsComponent.html":{},"interfaces/Player.html":{},"interfaces/SportsBook-1.html":{}}}],["gamelineoddsbysporteventid",{"_index":1133,"title":{},"body":{"injectables/OddsService.html":{}}}],["gamelineoddsbysporteventid(sporteventid",{"_index":1146,"title":{},"body":{"injectables/OddsService.html":{}}}],["generate",{"_index":1904,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1879,"title":{},"body":{"index.html":{}}}],["get(settings.$z",{"_index":1763,"title":{},"body":{"components/WebcamComponent.html":{}}}],["getaccesstoken",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["getaccesstokenprovider",{"_index":443,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["getapiurl",{"_index":372,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["getautosnapdelay",{"_index":373,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["getautosnapdelay(initial",{"_index":398,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["getbaseurl",{"_index":1151,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["getcurrenttimestamp",{"_index":1583,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["getlanguage",{"_index":374,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["getloglevel",{"_index":375,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["getsnapdimension",{"_index":376,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["getstate",{"_index":301,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{},"components/SnapComponent.html":{}}}],["getting",{"_index":1876,"title":{"index.html":{}},"body":{}}],["gettranslation",{"_index":548,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["gettranslation(lang",{"_index":560,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["gettvsearchresult",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["getviewfinder",{"_index":1639,"title":{},"body":{"components/WebcamComponent.html":{}}}],["given",{"_index":391,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"classes/FileTranslateLoader.html":{},"components/OddsComponent.html":{},"interfaces/OddsOfferOutcome.html":{},"components/SnapComponent.html":{},"interfaces/SportsBook-1.html":{}}}],["globally",{"_index":607,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["googleanalytics",{"_index":606,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["googleanalyticsservice",{"_index":66,"title":{"injectables/GoogleAnalyticsService.html":{}},"body":{"components/AppComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"coverage.html":{}}}],["googletagmanager",{"_index":610,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["grabbed",{"_index":1518,"title":{},"body":{"interfaces/TvChannel.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["grabs",{"_index":1521,"title":{},"body":{"interfaces/TvChannel.html":{}}}],["graph",{"_index":1927,"title":{},"body":{"index.html":{}}}],["grow",{"_index":574,"title":{},"body":{"components/FooterComponent.html":{}}}],["gtag",{"_index":639,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gtag('event",{"_index":665,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["gubergren",{"_index":757,"title":{},"body":{"components/HelpComponent.html":{}}}],["handleerror",{"_index":1228,"title":{},"body":{"components/SnapComponent.html":{}}}],["handleerror(error",{"_index":1241,"title":{},"body":{"components/SnapComponent.html":{}}}],["handleiniterror",{"_index":1640,"title":{},"body":{"components/WebcamComponent.html":{}}}],["handleiniterror(error",{"_index":1666,"title":{},"body":{"components/WebcamComponent.html":{}}}],["handlesuccess",{"_index":1229,"title":{},"body":{"components/SnapComponent.html":{}}}],["handlesuccess(sporteventsresponse",{"_index":1249,"title":{},"body":{"components/SnapComponent.html":{}}}],["hascompetitor",{"_index":1183,"title":{},"body":{"injectables/OddsService.html":{}}}],["hasmultiplewebcams",{"_index":1629,"title":{},"body":{"components/WebcamComponent.html":{}}}],["hasvalidaccesstoken",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["hasvibrationapi",{"_index":958,"title":{},"body":{"injectables/NotificationService.html":{}}}],["header",{"_index":677,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"injectables/TvSearchService.html":{}}}],["header'},{'name",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["header.component.html",{"_index":679,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":678,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["headercomponent",{"_index":208,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headers",{"_index":1161,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["headers.set('x",{"_index":1605,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["height",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"injectables/ImageManipulationService.html":{},"components/OddsComponent.html":{},"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{}}}],["help",{"_index":713,"title":{},"body":{"components/HelpComponent.html":{},"components/SnapComponent.html":{},"index.html":{}}}],["help'},{'name",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["help.component.html",{"_index":715,"title":{},"body":{"components/HelpComponent.html":{}}}],["help.component.scss",{"_index":714,"title":{},"body":{"components/HelpComponent.html":{}}}],["help/help.component",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["helpcomponent",{"_index":210,"title":{"components/HelpComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["helppage",{"_index":316,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["hh:mm",{"_index":1046,"title":{},"body":{"components/OddsComponent.html":{}}}],["hidden",{"_index":1079,"title":{},"body":{"components/OddsComponent.html":{},"components/WebcamComponent.html":{}}}],["higher",{"_index":908,"title":{},"body":{"injectables/LoggerService.html":{}}}],["hittype",{"_index":658,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["holds",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["homepage",{"_index":1519,"title":{},"body":{"interfaces/TvChannel.html":{}}}],["host",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["href",{"_index":889,"title":{},"body":{"interfaces/Link.html":{}}}],["html",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["htmlcanvaselement",{"_index":782,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["htmlelement",{"_index":800,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["htmlvideoelement",{"_index":798,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["http",{"_index":1139,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["http://localhost:3333",{"_index":1900,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":1897,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":1137,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["httpclientmodule",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":1153,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["httpresponse",{"_index":1576,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["https://api.us.snapscreen.com",{"_index":450,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["i)}deg",{"_index":1439,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["i18n",{"_index":354,"title":{},"body":{"interfaces/ApplicationConfig.html":{}}}],["id",{"_index":534,"title":{},"body":{"interfaces/Competitor.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/Player.html":{},"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{},"components/WebcamComponent.html":{}}}],["ideal",{"_index":1692,"title":{},"body":{"components/WebcamComponent.html":{}}}],["identifier",{"_index":1002,"title":{},"body":{"components/OddsComponent.html":{},"injectables/OddsService.html":{},"coverage.html":{}}}],["image",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationConfigService.html":{},"injectables/ImageManipulationService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["image.ts",{"_index":1945,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["image/jpeg",{"_index":791,"title":{},"body":{"injectables/ImageManipulationService.html":{},"injectables/TvSearchService.html":{}}}],["imageasdataurl",{"_index":1630,"title":{},"body":{"components/WebcamComponent.html":{}}}],["imagedata",{"_index":1384,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["imagemanipulationservice",{"_index":769,"title":{"injectables/ImageManipulationService.html":{}},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["images",{"_index":1539,"title":{},"body":{"interfaces/TvSearchResult.html":{}}}],["implementation",{"_index":1956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/FileTranslateLoader.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["import",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["important",{"_index":1760,"title":{},"body":{"components/WebcamComponent.html":{}}}],["imports",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["include",{"_index":580,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":1527,"title":{},"body":{"classes/TvSearchNoResultError.html":{}}}],["indicates",{"_index":1244,"title":{},"body":{"components/SnapComponent.html":{},"interfaces/TvChannel.html":{}}}],["infinite",{"_index":1426,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"components/SwitchSvgComponent.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{}}}],["info(...data",{"_index":901,"title":{},"body":{"injectables/LoggerService.html":{}}}],["initial",{"_index":403,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["initialization",{"_index":1888,"title":{},"body":{"index.html":{}}}],["initialize",{"_index":1737,"title":{},"body":{"components/WebcamComponent.html":{}}}],["initialized",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/WebcamComponent.html":{}}}],["initializes",{"_index":1266,"title":{},"body":{"components/SnapComponent.html":{}}}],["inject",{"_index":835,"title":{},"body":{"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{}}}],["inject(console",{"_index":920,"title":{},"body":{"injectables/LoggerService.html":{}}}],["inject(document",{"_index":839,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["inject(location",{"_index":1318,"title":{},"body":{"components/SnapComponent.html":{}}}],["inject(navigator",{"_index":970,"title":{},"body":{"injectables/NotificationService.html":{}}}],["injectable",{"_index":293,"title":{"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"injectables/OddsService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}},"body":{"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"injectables/OddsService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"coverage.html":{}}}],["injectables",{"_index":294,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"injectables/OddsService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":1958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('browser",{"_index":1955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injector",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["inline",{"_index":1072,"title":{},"body":{"components/OddsComponent.html":{},"components/SpinnerComponent.html":{}}}],["inlined",{"_index":553,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["input",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/OddsComponent.html":{},"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["inputs",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/OddsComponent.html":{},"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["inside",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"components/WebcamComponent.html":{}}}],["instanceof",{"_index":1351,"title":{},"body":{"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{}}}],["instead",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["interaction",{"_index":952,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["interactive",{"_index":1934,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AccessToken.html":{},"interfaces/ApplicationConfig.html":{},"interfaces/Competitor.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"interfaces/TranslationEntries.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{}},"body":{"interfaces/AccessToken.html":{},"interfaces/ApplicationConfig.html":{},"interfaces/Competitor.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"interfaces/TranslationEntries.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AccessToken.html":{},"interfaces/ApplicationConfig.html":{},"interfaces/Competitor.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"interfaces/TranslationEntries.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"overview.html":{}}}],["interrupt",{"_index":1717,"title":{},"body":{"components/WebcamComponent.html":{}}}],["interval",{"_index":1612,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["invidunt",{"_index":737,"title":{},"body":{"components/HelpComponent.html":{}}}],["invoked",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["ipsum",{"_index":725,"title":{},"body":{"components/HelpComponent.html":{}}}],["isaboveloglevel",{"_index":893,"title":{},"body":{"injectables/LoggerService.html":{}}}],["isaboveloglevel(loglevel",{"_index":903,"title":{},"body":{"injectables/LoggerService.html":{}}}],["isautosnapenabled",{"_index":377,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["isgoogleanalytics",{"_index":589,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["isgoogletagmanager",{"_index":590,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["iso",{"_index":1455,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["istokenexpired",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["isvibrateenabled",{"_index":378,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["items",{"_index":687,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["jest",{"_index":1921,"title":{},"body":{"index.html":{}}}],["jpeg",{"_index":795,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["js/1.0.0",{"_index":636,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["justify",{"_index":541,"title":{},"body":{"components/ContentComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{}}}],["justo",{"_index":749,"title":{},"body":{"components/HelpComponent.html":{}}}],["kasd",{"_index":756,"title":{},"body":{"components/HelpComponent.html":{}}}],["key",{"_index":458,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["keyframes",{"_index":1440,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["keys",{"_index":1492,"title":{},"body":{"interfaces/TranslationEntries.html":{}}}],["l",{"_index":1364,"title":{},"body":{"components/SnapComponent.html":{}}}],["label",{"_index":588,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"interfaces/OddsOffer.html":{}}}],["labore",{"_index":739,"title":{},"body":{"components/HelpComponent.html":{}}}],["lag",{"_index":1611,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["landscape",{"_index":1365,"title":{},"body":{"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["lang",{"_index":563,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["language",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"classes/FileTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["larger",{"_index":833,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["left",{"_index":702,"title":{},"body":{"components/HeaderComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["legend",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["lets",{"_index":968,"title":{},"body":{"injectables/NotificationService.html":{}}}],["letter",{"_index":565,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["level",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/LoggerService.html":{}}}],["level.ts",{"_index":1810,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["levels",{"_index":911,"title":{},"body":{"injectables/LoggerService.html":{}}}],["lg",{"_index":579,"title":{},"body":{"components/FooterComponent.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["libraries",{"_index":1889,"title":{},"body":{"index.html":{}}}],["library",{"_index":1672,"title":{},"body":{"components/WebcamComponent.html":{}}}],["libs/response/src/lib/typings/auth/access",{"_index":6,"title":{},"body":{"interfaces/AccessToken.html":{},"coverage.html":{}}}],["libs/response/src/lib/typings/link.ts",{"_index":888,"title":{},"body":{"interfaces/Link.html":{},"coverage.html":{}}}],["libs/response/src/lib/typings/odds/competitor.ts",{"_index":530,"title":{},"body":{"interfaces/Competitor.html":{},"coverage.html":{}}}],["libs/response/src/lib/typings/odds/odds",{"_index":1105,"title":{},"body":{"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"coverage.html":{}}}],["libs/response/src/lib/typings/odds/player.ts",{"_index":1203,"title":{},"body":{"interfaces/Player.html":{},"coverage.html":{}}}],["libs/response/src/lib/typings/odds/sports",{"_index":1476,"title":{},"body":{"interfaces/SportsBook-1.html":{},"coverage.html":{}}}],["libs/response/src/lib/typings/tv",{"_index":1205,"title":{},"body":{"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"coverage.html":{}}}],["lifetime",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["line",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/OddsComponent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLine.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["line.moneyline",{"_index":1057,"title":{},"body":{"components/OddsComponent.html":{}}}],["line.overunder",{"_index":1060,"title":{},"body":{"components/OddsComponent.html":{}}}],["line.overunderodds",{"_index":1061,"title":{},"body":{"components/OddsComponent.html":{}}}],["line.spread",{"_index":1055,"title":{},"body":{"components/OddsComponent.html":{}}}],["line.spreadodds",{"_index":1056,"title":{},"body":{"components/OddsComponent.html":{}}}],["line.ts",{"_index":1478,"title":{},"body":{"interfaces/SportsBookLine.html":{},"coverage.html":{}}}],["linear",{"_index":1425,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lineodds",{"_index":125,"title":{"interfaces/LineOdds.html":{}},"body":{"components/AppComponent.html":{},"injectables/ApplicationConfigService.html":{},"interfaces/LineOdds.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"interfaces/SportsBook.html":{},"coverage.html":{}}}],["lineodds.competitors[i].name",{"_index":1054,"title":{},"body":{"components/OddsComponent.html":{}}}],["lineodds.sportsbooks",{"_index":1037,"title":{},"body":{"components/OddsComponent.html":{}}}],["lineodds.sportsbooks.length",{"_index":1038,"title":{},"body":{"components/OddsComponent.html":{}}}],["lines",{"_index":1171,"title":{},"body":{"injectables/OddsService.html":{},"interfaces/SportsBook.html":{}}}],["link",{"_index":887,"title":{"interfaces/Link.html":{}},"body":{"interfaces/Link.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/TvChannel.html":{},"coverage.html":{}}}],["list",{"_index":881,"title":{},"body":{"interfaces/LineOdds.html":{},"interfaces/TvSearchResult.html":{}}}],["listen",{"_index":306,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["literal",{"_index":813,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook-1.html":{},"interfaces/TvChannel.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":1274,"title":{},"body":{"components/SnapComponent.html":{}}}],["loaded",{"_index":559,"title":{},"body":{"classes/FileTranslateLoader.html":{},"components/SnapComponent.html":{}}}],["loader",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["loader.ts",{"_index":547,"title":{},"body":{"classes/FileTranslateLoader.html":{},"coverage.html":{}}}],["loader.ts:12",{"_index":552,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["loader.ts:21",{"_index":561,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["loading",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationConfigService.html":{},"components/OddsComponent.html":{}}}],["loadlineodds",{"_index":981,"title":{},"body":{"components/OddsComponent.html":{}}}],["loadlineodds(sporteventid",{"_index":993,"title":{},"body":{"components/OddsComponent.html":{}}}],["loads",{"_index":995,"title":{},"body":{"components/OddsComponent.html":{}}}],["loadsportevents",{"_index":1230,"title":{},"body":{"components/SnapComponent.html":{}}}],["loadsportevents(autosnap",{"_index":1256,"title":{},"body":{"components/SnapComponent.html":{}}}],["local",{"_index":1959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstorage",{"_index":1960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["location",{"_index":1239,"title":{},"body":{"components/SnapComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["log",{"_index":351,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"injectables/LoggerService.html":{}}}],["log(loglevel",{"_index":909,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logcallback",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["logged",{"_index":913,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logger",{"_index":386,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["logger/log",{"_index":448,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["logger/logger.service",{"_index":637,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["loggereventcallback",{"_index":916,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loggerservice",{"_index":602,"title":{"injectables/LoggerService.html":{}},"body":{"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["loglevel",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["loglevel's",{"_index":906,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loglevel.debug",{"_index":927,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loglevel.error",{"_index":934,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loglevel.info",{"_index":930,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loglevel.silent",{"_index":451,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["loglevel.warn",{"_index":932,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loglevels",{"_index":1869,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logo",{"_index":1523,"title":{},"body":{"interfaces/TvChannel.html":{}}}],["logs",{"_index":914,"title":{},"body":{"injectables/LoggerService.html":{}}}],["longer",{"_index":406,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{}}}],["lookup",{"_index":1259,"title":{},"body":{"components/SnapComponent.html":{}}}],["lorem",{"_index":724,"title":{},"body":{"components/HelpComponent.html":{}}}],["made",{"_index":1541,"title":{},"body":{"interfaces/TvSearchResultEntry.html":{}}}],["magna",{"_index":742,"title":{},"body":{"components/HelpComponent.html":{}}}],["main",{"_index":1882,"title":{},"body":{"index.html":{}}}],["manage",{"_index":1281,"title":{},"body":{"components/SnapComponent.html":{}}}],["manipulated",{"_index":838,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["manipulatedimage",{"_index":837,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/typealiases.html":{}}}],["manipulation",{"_index":870,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["manipulation.service",{"_index":1708,"title":{},"body":{"components/WebcamComponent.html":{}}}],["manipulation.service.ts",{"_index":772,"title":{},"body":{"injectables/ImageManipulationService.html":{},"coverage.html":{}}}],["manipulation.service.ts:105",{"_index":785,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["manipulation.service.ts:144",{"_index":831,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["manipulation.service.ts:155",{"_index":821,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["manipulation.service.ts:19",{"_index":816,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["manipulation.service.ts:59",{"_index":828,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["manipulation.service.ts:70",{"_index":802,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["manipulation.service.ts:9",{"_index":780,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["manipulation/image",{"_index":771,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["manipulation/manipulated",{"_index":1310,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/typealiases.html":{}}}],["manually",{"_index":1568,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["map",{"_index":320,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["map((accesstoken",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["map((response",{"_index":1164,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["map((sportsbook",{"_index":1168,"title":{},"body":{"injectables/OddsService.html":{}}}],["maplineoddsresponse",{"_index":1134,"title":{},"body":{"injectables/OddsService.html":{}}}],["maplineoddsresponse(lineodds",{"_index":1148,"title":{},"body":{"injectables/OddsService.html":{}}}],["mapto",{"_index":953,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["mapto(true",{"_index":949,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["margin",{"_index":576,"title":{},"body":{"components/FooterComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["match",{"_index":421,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{},"interfaces/SportEvent.html":{}}}],["matching",{"_index":23,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"components/SwitchSvgComponent.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.abs((this.element.offsetheight",{"_index":1747,"title":{},"body":{"components/WebcamComponent.html":{}}}],["math.abs((this.element.offsetwidth",{"_index":1744,"title":{},"body":{"components/WebcamComponent.html":{}}}],["math.div($bar",{"_index":1432,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["math.div($spinner",{"_index":1415,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["math.div(9",{"_index":1769,"title":{},"body":{"components/WebcamComponent.html":{}}}],["math.floor((maxdimension",{"_index":874,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["math.floor((source.videoheight",{"_index":862,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["math.floor((source.videowidth",{"_index":861,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["math.floor((viewfinder.clientheight",{"_index":860,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["math.floor((viewfinder.clientwidth",{"_index":859,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["math.max(source.videowidth",{"_index":856,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["max",{"_index":818,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["maxdimension",{"_index":815,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["media",{"_index":694,"title":{},"body":{"components/HeaderComponent.html":{},"components/SnapComponent.html":{}}}],["mediadeviceinfo",{"_index":1710,"title":{},"body":{"components/WebcamComponent.html":{}}}],["mediadevices.length",{"_index":1712,"title":{},"body":{"components/WebcamComponent.html":{}}}],["mediadevicestate",{"_index":941,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{}}}],["mediadevicestate.device_camera_ready",{"_index":948,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["mediadevicestatestore",{"_index":938,"title":{"injectables/MediaDeviceStateStore.html":{}},"body":{"injectables/MediaDeviceStateStore.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["mediatrackconstraints",{"_index":1690,"title":{},"body":{"components/WebcamComponent.html":{}}}],["mergemap",{"_index":1302,"title":{},"body":{"components/SnapComponent.html":{}}}],["merges",{"_index":432,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["message",{"_index":1000,"title":{},"body":{"components/OddsComponent.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["message'},{'name",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["message.component",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["message.component.html",{"_index":1616,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{}}}],["message.component.scss",{"_index":1615,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{}}}],["message.component.ts",{"_index":1614,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{},"coverage.html":{}}}],["message.component.ts:10",{"_index":1617,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{}}}],["message/user",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"components/UserFeedbackMessageComponent.html":{},"coverage.html":{}}}],["metadata",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["method",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/SnapComponent.html":{}}}],["methods",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["mime",{"_index":792,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["mimetype",{"_index":783,"title":{},"body":{"injectables/ImageManipulationService.html":{},"injectables/TvSearchService.html":{}}}],["min",{"_index":1101,"title":{},"body":{"components/OddsComponent.html":{},"components/WebcamComponent.html":{}}}],["minute",{"_index":1931,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":1864,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mixin",{"_index":1753,"title":{},"body":{"components/WebcamComponent.html":{}}}],["mm",{"_index":1459,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["mode",{"_index":416,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{}}}],["models/line",{"_index":1024,"title":{},"body":{"components/OddsComponent.html":{},"injectables/OddsService.html":{}}}],["models/sports",{"_index":1155,"title":{},"body":{"injectables/OddsService.html":{}}}],["module",{"_index":232,"title":{"modules/AppModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":234,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["money",{"_index":1052,"title":{},"body":{"components/OddsComponent.html":{},"interfaces/SportsBookLine.html":{}}}],["moneyline",{"_index":1114,"title":{},"body":{"interfaces/OddsOffer.html":{},"injectables/OddsService.html":{},"interfaces/SportsBookLine.html":{}}}],["moneylineurl",{"_index":1479,"title":{},"body":{"interfaces/SportsBookLine.html":{}}}],["mouseevent",{"_index":1012,"title":{},"body":{"components/OddsComponent.html":{}}}],["movex",{"_index":1743,"title":{},"body":{"components/WebcamComponent.html":{}}}],["movey",{"_index":1746,"title":{},"body":{"components/WebcamComponent.html":{}}}],["name",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/functions.html":{}}}],["navigate",{"_index":720,"title":{},"body":{"components/HelpComponent.html":{},"components/SnapComponent.html":{},"index.html":{}}}],["navigator",{"_index":961,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["neartimestamp",{"_index":1559,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["necessary",{"_index":1562,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["needs",{"_index":832,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["negative",{"_index":1389,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["nesting",{"_index":1775,"title":{},"body":{"components/WebcamComponent.html":{}}}],["never",{"_index":1173,"title":{},"body":{"injectables/OddsService.html":{}}}],["new",{"_index":309,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/ImageManipulationService.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":1036,"title":{},"body":{"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["nextwebcam",{"_index":1631,"title":{},"body":{"components/WebcamComponent.html":{}}}],["ng",{"_index":1620,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":1641,"title":{},"body":{"components/WebcamComponent.html":{}}}],["ngdobootstrap",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["ngonchanges",{"_index":982,"title":{},"body":{"components/OddsComponent.html":{}}}],["ngonchanges(changes",{"_index":1003,"title":{},"body":{"components/OddsComponent.html":{}}}],["ngondestroy",{"_index":1231,"title":{},"body":{"components/SnapComponent.html":{}}}],["ngoninit",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["ngx",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/FileTranslateLoader.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["ngxwebcamcomponent",{"_index":1701,"title":{},"body":{"components/WebcamComponent.html":{}}}],["none",{"_index":1087,"title":{},"body":{"components/OddsComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["nonumy",{"_index":734,"title":{},"body":{"components/HelpComponent.html":{}}}],["noop",{"_index":445,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["noresults",{"_index":980,"title":{},"body":{"components/OddsComponent.html":{}}}],["notificationservice",{"_index":956,"title":{"injectables/NotificationService.html":{}},"body":{"injectables/NotificationService.html":{},"components/SnapComponent.html":{},"coverage.html":{}}}],["notifies",{"_index":1291,"title":{},"body":{"components/SnapComponent.html":{}}}],["notify",{"_index":959,"title":{},"body":{"injectables/NotificationService.html":{},"components/SnapComponent.html":{}}}],["now",{"_index":1579,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["nowrap",{"_index":707,"title":{},"body":{"components/HeaderComponent.html":{}}}],["npm",{"_index":1911,"title":{},"body":{"index.html":{}}}],["nrwl/angular",{"_index":1848,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/OddsComponent.html":{},"interfaces/OddsOfferOutcome.html":{},"injectables/OddsService.html":{},"interfaces/SportsBookLine.html":{},"components/WebcamComponent.html":{}}}],["number",{"_index":20,"title":{},"body":{"interfaces/AccessToken.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOfferOutcome.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBookLine.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{}}}],["nx",{"_index":1880,"title":{},"body":{"index.html":{}}}],["o",{"_index":1058,"title":{},"body":{"components/OddsComponent.html":{}}}],["object.defineproperty(this.pinchzoomcomponent.pinchzoom",{"_index":1742,"title":{},"body":{"components/WebcamComponent.html":{}}}],["object.entries(config).reduce",{"_index":456,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["observable",{"_index":308,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["observe",{"_index":1594,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["odds",{"_index":977,"title":{},"body":{"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"coverage.html":{}}}],["odds'},{'name",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["odds.component.html",{"_index":979,"title":{},"body":{"components/OddsComponent.html":{}}}],["odds.component.scss",{"_index":978,"title":{},"body":{"components/OddsComponent.html":{}}}],["odds.ts",{"_index":876,"title":{},"body":{"interfaces/LineOdds.html":{},"coverage.html":{}}}],["odds/odds.component",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["odds/snap",{"_index":1314,"title":{},"body":{"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"coverage.html":{}}}],["oddscomponent",{"_index":212,"title":{"components/OddsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["oddsoffer",{"_index":1104,"title":{"interfaces/OddsOffer.html":{}},"body":{"interfaces/OddsOffer.html":{},"interfaces/SportsBook-1.html":{},"coverage.html":{}}}],["oddsofferoutcome",{"_index":1111,"title":{"interfaces/OddsOfferOutcome.html":{}},"body":{"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"coverage.html":{}}}],["oddsoffers",{"_index":1474,"title":{},"body":{"interfaces/SportsBook.html":{}}}],["oddsresponse",{"_index":1127,"title":{"interfaces/OddsResponse.html":{}},"body":{"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"coverage.html":{}}}],["oddsservice",{"_index":989,"title":{"injectables/OddsService.html":{}},"body":{"components/OddsComponent.html":{},"injectables/OddsService.html":{},"coverage.html":{}}}],["of(this.accesstoken",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["of(this.translations.get(lang",{"_index":570,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["offer",{"_index":1108,"title":{},"body":{"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/SportsBook-1.html":{},"coverage.html":{}}}],["offer.outcomes",{"_index":1176,"title":{},"body":{"injectables/OddsService.html":{}}}],["offer.outcomes.foreach((outcome",{"_index":1178,"title":{},"body":{"injectables/OddsService.html":{}}}],["offer.ts",{"_index":1106,"title":{},"body":{"interfaces/OddsOffer.html":{},"coverage.html":{}}}],["offer.type",{"_index":1185,"title":{},"body":{"injectables/OddsService.html":{}}}],["offers",{"_index":1477,"title":{},"body":{"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{}}}],["offset",{"_index":1654,"title":{},"body":{"components/WebcamComponent.html":{}}}],["omitundefinedproperties",{"_index":379,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["omitundefinedproperties(config",{"_index":423,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["onchanges",{"_index":976,"title":{},"body":{"components/OddsComponent.html":{}}}],["ondestroy",{"_index":1223,"title":{},"body":{"components/SnapComponent.html":{}}}],["one",{"_index":905,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/SportsBook.html":{}}}],["oninit",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["onlineoddsloaded",{"_index":983,"title":{},"body":{"components/OddsComponent.html":{}}}],["onlineoddsloaded(lineodds",{"_index":1007,"title":{},"body":{"components/OddsComponent.html":{}}}],["onlineoddsloadfailed",{"_index":984,"title":{},"body":{"components/OddsComponent.html":{}}}],["opacity",{"_index":1441,"title":{},"body":{"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{}}}],["opened",{"_index":1018,"title":{},"body":{"components/OddsComponent.html":{},"components/SnapComponent.html":{}}}],["openoutcomeredirecturl",{"_index":985,"title":{},"body":{"components/OddsComponent.html":{}}}],["openoutcomeredirecturl($event",{"_index":1011,"title":{},"body":{"components/OddsComponent.html":{}}}],["opens",{"_index":1015,"title":{},"body":{"components/OddsComponent.html":{}}}],["optional",{"_index":11,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"interfaces/TvChannel.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":407,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{}}}],["ordered",{"_index":1870,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["orientation",{"_index":695,"title":{},"body":{"components/HeaderComponent.html":{},"components/SnapComponent.html":{}}}],["origin",{"_index":1428,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["otherwise",{"_index":1664,"title":{},"body":{"components/WebcamComponent.html":{}}}],["out",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationConfigService.html":{},"overview.html":{}}}],["outcome",{"_index":1116,"title":{},"body":{"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/SportsBookLine.html":{}}}],["outcome._links?.redirect?.href",{"_index":1184,"title":{},"body":{"injectables/OddsService.html":{}}}],["outcome.competitorid",{"_index":1182,"title":{},"body":{"injectables/OddsService.html":{}}}],["outcome.target",{"_index":1191,"title":{},"body":{"injectables/OddsService.html":{}}}],["outcome.ts",{"_index":1118,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{},"coverage.html":{}}}],["outcome.type",{"_index":1186,"title":{},"body":{"injectables/OddsService.html":{}}}],["outcomes",{"_index":1110,"title":{},"body":{"interfaces/OddsOffer.html":{}}}],["output",{"_index":1022,"title":{},"body":{"components/OddsComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["outputs",{"_index":986,"title":{},"body":{"components/OddsComponent.html":{},"components/TriggerComponent.html":{}}}],["outside",{"_index":357,"title":{},"body":{"interfaces/ApplicationConfig.html":{}}}],["over",{"_index":1125,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{},"injectables/OddsService.html":{}}}],["over/under",{"_index":1122,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{},"interfaces/SportsBookLine.html":{}}}],["over_under",{"_index":1115,"title":{},"body":{"interfaces/OddsOffer.html":{},"injectables/OddsService.html":{}}}],["overflow",{"_index":544,"title":{},"body":{"components/ContentComponent.html":{},"components/OddsComponent.html":{},"components/WebcamComponent.html":{}}}],["overunder",{"_index":1480,"title":{},"body":{"interfaces/SportsBookLine.html":{}}}],["overunderodds",{"_index":1481,"title":{},"body":{"interfaces/SportsBookLine.html":{}}}],["overunderurl",{"_index":1482,"title":{},"body":{"interfaces/SportsBookLine.html":{}}}],["overview",{"_index":1938,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1839,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":693,"title":{},"body":{"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["page",{"_index":662,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["page_path",{"_index":667,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["page_title",{"_index":668,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["page_view",{"_index":666,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["pageview",{"_index":659,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["param",{"_index":339,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["parameters",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":804,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["partial",{"_index":424,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["participating",{"_index":1454,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["parts",{"_index":829,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["patched",{"_index":1673,"title":{},"body":{"components/WebcamComponent.html":{}}}],["patches",{"_index":1651,"title":{},"body":{"components/WebcamComponent.html":{}}}],["peer",{"_index":1913,"title":{},"body":{"index.html":{}}}],["perform",{"_index":394,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{},"injectables/TvSearchService.html":{}}}],["performed",{"_index":1292,"title":{},"body":{"components/SnapComponent.html":{}}}],["performs",{"_index":1387,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["periodically",{"_index":1270,"title":{},"body":{"components/SnapComponent.html":{}}}],["pinch",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["pinchzoomcomponent",{"_index":1632,"title":{},"body":{"components/WebcamComponent.html":{}}}],["pinchzoommodule",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe",{"_index":1338,"title":{},"body":{"components/SnapComponent.html":{}}}],["pipe(takeuntil(this.destroyed",{"_index":1324,"title":{},"body":{"components/SnapComponent.html":{}}}],["plane",{"_index":1209,"title":{},"body":{"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{}}}],["player",{"_index":882,"title":{"interfaces/Player.html":{}},"body":{"interfaces/LineOdds.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/Player.html":{},"coverage.html":{}}}],["playerid",{"_index":1120,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{}}}],["players",{"_index":879,"title":{},"body":{"interfaces/LineOdds.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{}}}],["point",{"_index":1207,"title":{},"body":{"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{}}}],["point2d",{"_index":1204,"title":{"interfaces/Point2d.html":{}},"body":{"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"coverage.html":{}}}],["pointer",{"_index":1097,"title":{},"body":{"components/OddsComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["pointing",{"_index":1485,"title":{},"body":{"interfaces/SportsBookLine.html":{}}}],["portrait",{"_index":583,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["position",{"_index":1420,"title":{},"body":{"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["positive",{"_index":1388,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["possible",{"_index":1112,"title":{},"body":{"interfaces/OddsOffer.html":{},"miscellaneous/enumerations.html":{}}}],["poster",{"_index":1524,"title":{},"body":{"interfaces/TvChannel.html":{}}}],["powered",{"_index":1748,"title":{},"body":{"components/WebcamComponent.html":{}}}],["preferredheight",{"_index":826,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["preferredwidth",{"_index":825,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["present",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["pressing",{"_index":1286,"title":{},"body":{"components/SnapComponent.html":{}}}],["primary",{"_index":767,"title":{},"body":{"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{}}}],["private",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["processed",{"_index":1245,"title":{},"body":{"components/SnapComponent.html":{},"injectables/TvSearchService.html":{}}}],["processing",{"_index":1505,"title":{},"body":{"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["prod",{"_index":1908,"title":{},"body":{"index.html":{}}}],["production",{"_index":1909,"title":{},"body":{"index.html":{}}}],["programmatically",{"_index":401,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["project",{"_index":1878,"title":{},"body":{"index.html":{}}}],["project=snapodds",{"_index":1903,"title":{},"body":{"index.html":{}}}],["projects",{"_index":1881,"title":{},"body":{"index.html":{}}}],["promise",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["promise((resolve",{"_index":863,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["promise.reject('no",{"_index":452,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":9,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"interfaces/TranslationEntries.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["property",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["provide",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["providedin",{"_index":336,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"injectables/OddsService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":355,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"interfaces/SportEvent.html":{}}}],["pseudo",{"_index":1619,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["quadrangle",{"_index":1215,"title":{},"body":{"interfaces/Quadrangle2d.html":{}}}],["quadrangle2d",{"_index":1213,"title":{"interfaces/Quadrangle2d.html":{}},"body":{"interfaces/Quadrangle2d.html":{},"interfaces/TvSearchResult.html":{},"coverage.html":{}}}],["quadrangles",{"_index":1537,"title":{},"body":{"interfaces/TvSearchResult.html":{}}}],["quality",{"_index":784,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["race",{"_index":1303,"title":{},"body":{"components/SnapComponent.html":{}}}],["radius",{"_index":1430,"title":{},"body":{"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{}}}],["ratio",{"_index":1755,"title":{},"body":{"components/WebcamComponent.html":{}}}],["reached",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["read",{"_index":1704,"title":{},"body":{"components/WebcamComponent.html":{}}}],["reader",{"_index":1729,"title":{},"body":{"components/WebcamComponent.html":{}}}],["reader.onloadend",{"_index":1731,"title":{},"body":{"components/WebcamComponent.html":{}}}],["reader.readasdataurl(blob",{"_index":1734,"title":{},"body":{"components/WebcamComponent.html":{}}}],["reader.result",{"_index":1733,"title":{},"body":{"components/WebcamComponent.html":{}}}],["readonly",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["ready",{"_index":951,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["rebum",{"_index":753,"title":{},"body":{"components/HelpComponent.html":{}}}],["redirect",{"_index":1117,"title":{},"body":{"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{}}}],["redirecturl",{"_index":1013,"title":{},"body":{"components/OddsComponent.html":{},"injectables/OddsService.html":{},"interfaces/SportsBook.html":{}}}],["refresh_token",{"_index":14,"title":{},"body":{"interfaces/AccessToken.html":{}}}],["register",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{}}}],["registerautosnap",{"_index":1232,"title":{},"body":{"components/SnapComponent.html":{}}}],["registered",{"_index":1465,"title":{},"body":{"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{}}}],["reject",{"_index":864,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["reject(error",{"_index":873,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["reject(errormessage",{"_index":872,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["relative",{"_index":1421,"title":{},"body":{"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["release",{"_index":1910,"title":{},"body":{"index.html":{}}}],["reload",{"_index":1276,"title":{},"body":{"components/SnapComponent.html":{},"index.html":{}}}],["reloadpage",{"_index":1233,"title":{},"body":{"components/SnapComponent.html":{}}}],["render",{"_index":326,"title":{},"body":{"injectables/AppStateStore.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLine.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{}}}],["rendered",{"_index":790,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["rendering",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"interfaces/LineOdds.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/OddsService.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{}}}],["renderingcontext",{"_index":851,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["renderingcontext?.drawimage(source",{"_index":853,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["renders",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["replaysubject",{"_index":321,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["replaysubject(1",{"_index":310,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["reported",{"_index":361,"title":{},"body":{"interfaces/ApplicationConfig.html":{}}}],["representation",{"_index":1874,"title":{},"body":{"miscellaneous/functions.html":{}}}],["represents",{"_index":532,"title":{},"body":{"interfaces/Competitor.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/Player.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook-1.html":{},"interfaces/TvChannel.html":{}}}],["request",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{},"components/SnapComponent.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{}}}],["requestaccesstoken",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["requestuuid",{"_index":1534,"title":{},"body":{"interfaces/TvSearchResult.html":{}}}],["reset",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{},"overview.html":{}}}],["resized",{"_index":823,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["resizing",{"_index":415,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["resolve",{"_index":866,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["respective",{"_index":1258,"title":{},"body":{"components/SnapComponent.html":{}}}],["response",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{},"components/SnapComponent.html":{},"injectables/TvSearchService.html":{}}}],["response.body",{"_index":1598,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["response.body?.resultentries.length",{"_index":1597,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["response.headers.get('date",{"_index":1608,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["response.ts",{"_index":1128,"title":{},"body":{"interfaces/OddsResponse.html":{},"coverage.html":{}}}],["response/typings",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/LineOdds.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["responsedate",{"_index":1607,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["responses",{"_index":1890,"title":{},"body":{"index.html":{}}}],["rest",{"_index":1892,"title":{},"body":{"index.html":{}}}],["result",{"_index":1533,"title":{},"body":{"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"coverage.html":{}}}],["result.sportevent.starttime",{"_index":1045,"title":{},"body":{"components/OddsComponent.html":{}}}],["result.sportevent.tournament",{"_index":1043,"title":{},"body":{"components/OddsComponent.html":{}}}],["result.ts",{"_index":1532,"title":{},"body":{"interfaces/TvSearchResult.html":{},"coverage.html":{}}}],["result.tvchannel.name",{"_index":1044,"title":{},"body":{"components/OddsComponent.html":{}}}],["resultcallback",{"_index":390,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["resultentries",{"_index":1535,"title":{},"body":{"interfaces/TvSearchResult.html":{}}}],["resultentry",{"_index":392,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["resulting",{"_index":793,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["results",{"_index":22,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"components/SwitchSvgComponent.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resultscallback",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":356,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["retrieves",{"_index":562,"title":{},"body":{"classes/FileTranslateLoader.html":{},"components/SnapComponent.html":{}}}],["retrywhen",{"_index":1304,"title":{},"body":{"components/SnapComponent.html":{}}}],["retrywhen((errors",{"_index":1345,"title":{},"body":{"components/SnapComponent.html":{}}}],["return",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["returned",{"_index":360,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"injectables/AuthService.html":{},"injectables/ImageManipulationService.html":{},"classes/TvSearchNoResultError.html":{}}}],["returns",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"miscellaneous/functions.html":{}}}],["rgb(0",{"_index":1768,"title":{},"body":{"components/WebcamComponent.html":{}}}],["rgba(255",{"_index":1069,"title":{},"body":{"components/OddsComponent.html":{}}}],["right",{"_index":708,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["root",{"_index":337,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"injectables/OddsService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"miscellaneous/variables.html":{}}}],["rotate(#{(math.div(360",{"_index":1438,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["row",{"_index":1368,"title":{},"body":{"components/SnapComponent.html":{}}}],["run",{"_index":1894,"title":{},"body":{"index.html":{}}}],["running",{"_index":1915,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":322,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["sadipscing",{"_index":730,"title":{},"body":{"components/HelpComponent.html":{}}}],["same",{"_index":912,"title":{},"body":{"injectables/LoggerService.html":{}}}],["sanctus",{"_index":760,"title":{},"body":{"components/HelpComponent.html":{}}}],["sass:math",{"_index":1363,"title":{},"body":{"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{}}}],["scaffolding",{"_index":1901,"title":{},"body":{"index.html":{}}}],["scalefactor",{"_index":801,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["scope",{"_index":15,"title":{},"body":{"interfaces/AccessToken.html":{}}}],["score",{"_index":1543,"title":{},"body":{"interfaces/TvSearchResultEntry.html":{}}}],["screen",{"_index":1538,"title":{},"body":{"interfaces/TvSearchResult.html":{}}}],["screenquadrangles",{"_index":1536,"title":{},"body":{"interfaces/TvSearchResult.html":{}}}],["sdk",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationConfig.html":{}}}],["sdk'},{'name",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["sdkinitialized",{"_index":591,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["sea",{"_index":758,"title":{},"body":{"components/HelpComponent.html":{}}}],["search",{"_index":395,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/OddsService.html":{},"injectables/SnapOddsFacade.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"coverage.html":{}}}],["search.service",{"_index":1395,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["search.service.ts",{"_index":1548,"title":{},"body":{"injectables/TvSearchService.html":{},"coverage.html":{}}}],["search.service.ts:104",{"_index":1577,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search.service.ts:14",{"_index":1553,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search.service.ts:26",{"_index":1582,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search.service.ts:33",{"_index":1584,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search.service.ts:41",{"_index":1567,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search.service.ts:50",{"_index":1554,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search.service.ts:61",{"_index":1571,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search.service.ts:86",{"_index":1560,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search/point2d.ts",{"_index":1206,"title":{},"body":{"interfaces/Point2d.html":{},"coverage.html":{}}}],["search/quadrangle2d.ts",{"_index":1214,"title":{},"body":{"interfaces/Quadrangle2d.html":{},"coverage.html":{}}}],["search/sport",{"_index":1443,"title":{},"body":{"interfaces/SportEvent.html":{},"coverage.html":{}}}],["search/sport/by",{"_index":1589,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search/sport/near",{"_index":1590,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search/tv",{"_index":1516,"title":{},"body":{"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"coverage.html":{}}}],["searchsport",{"_index":1376,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["searchsport(imagedata",{"_index":1385,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["second",{"_index":1219,"title":{},"body":{"interfaces/Quadrangle2d.html":{}}}],["sed",{"_index":732,"title":{},"body":{"components/HelpComponent.html":{}}}],["see",{"_index":1928,"title":{},"body":{"index.html":{}}}],["selector",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["self",{"_index":1130,"title":{},"body":{"interfaces/OddsResponse.html":{},"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{}}}],["sent",{"_index":1580,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["separator",{"_index":1090,"title":{},"body":{"components/OddsComponent.html":{}}}],["serve",{"_index":1895,"title":{},"body":{"index.html":{}}}],["server",{"_index":1885,"title":{},"body":{"index.html":{}}}],["service",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleAnalyticsService.html":{}}}],["services",{"_index":1254,"title":{},"body":{"components/SnapComponent.html":{}}}],["services/api/api",{"_index":1308,"title":{},"body":{"components/SnapComponent.html":{}}}],["services/api/odds.service",{"_index":1025,"title":{},"body":{"components/OddsComponent.html":{}}}],["services/config/application",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["services/i18n/file",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["services/image",{"_index":1309,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["services/logger/log",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{}}}],["services/logger/logger.service",{"_index":1311,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["services/notification/notification.service",{"_index":1312,"title":{},"body":{"components/SnapComponent.html":{}}}],["services/snap",{"_index":1313,"title":{},"body":{"components/SnapComponent.html":{}}}],["services/tokens/location",{"_index":1316,"title":{},"body":{"components/SnapComponent.html":{}}}],["services/tokens/window",{"_index":1026,"title":{},"body":{"components/OddsComponent.html":{}}}],["services/tracking/google",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/SnapComponent.html":{}}}],["set",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/WebcamComponent.html":{}}}],["set('authorization",{"_index":1600,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["set('content",{"_index":1601,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["set('x",{"_index":1603,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["setconfig",{"_index":380,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["setconfig(applicationconfig",{"_index":430,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["sets",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/SnapComponent.html":{}}}],["setting",{"_index":721,"title":{},"body":{"components/HelpComponent.html":{},"components/SnapComponent.html":{}}}],["settings",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["settings.$color",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["settings.$font",{"_index":703,"title":{},"body":{"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["settings.$spacing",{"_index":578,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["settvsearchresult(tvsearchresultentry",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["setupanalytics",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["setupapplicationconfig",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["setuptranslations",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["severity",{"_index":907,"title":{},"body":{"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["shadow",{"_index":1766,"title":{},"body":{"components/WebcamComponent.html":{}}}],["shouldcrop",{"_index":777,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["shouldcrop(scalefactor",{"_index":827,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["shoulddownscale",{"_index":778,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["shoulddownscale(sourcewidth",{"_index":830,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["show_help",{"_index":328,"title":{},"body":{"injectables/AppStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["show_odds",{"_index":329,"title":{},"body":{"injectables/AppStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["showhelp",{"_index":298,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["showhelppage",{"_index":1234,"title":{},"body":{"components/SnapComponent.html":{}}}],["showing",{"_index":1932,"title":{},"body":{"index.html":{}}}],["shown",{"_index":317,"title":{},"body":{"injectables/AppStateStore.html":{},"components/OddsComponent.html":{},"interfaces/TvSearchResultEntry.html":{},"components/WebcamComponent.html":{}}}],["showsnappage",{"_index":716,"title":{},"body":{"components/HelpComponent.html":{}}}],["signalize",{"_index":683,"title":{},"body":{"components/HeaderComponent.html":{}}}],["silent",{"_index":1871,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["simplechange",{"_index":1023,"title":{},"body":{"components/OddsComponent.html":{}}}],["simplechanges",{"_index":1006,"title":{},"body":{"components/OddsComponent.html":{}}}],["single",{"_index":1107,"title":{},"body":{"interfaces/OddsOffer.html":{}}}],["sit",{"_index":727,"title":{},"body":{"components/HelpComponent.html":{}}}],["size",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["sizing",{"_index":1067,"title":{},"body":{"components/OddsComponent.html":{}}}],["sm",{"_index":700,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["small",{"_index":698,"title":{},"body":{"components/HeaderComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["snap",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{},"injectables/TvSearchService.html":{}}}],["snap'},{'name",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["snap(url",{"_index":1570,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["snap.component.html",{"_index":1225,"title":{},"body":{"components/SnapComponent.html":{}}}],["snap.component.scss",{"_index":1224,"title":{},"body":{"components/SnapComponent.html":{}}}],["snap/snap.component",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["snap_failed",{"_index":332,"title":{},"body":{"injectables/AppStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["snap_in_progress",{"_index":331,"title":{},"body":{"injectables/AppStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["snap_max_dimension",{"_index":368,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["snap_no_results",{"_index":333,"title":{},"body":{"injectables/AppStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["snap_ready",{"_index":330,"title":{},"body":{"injectables/AppStateStore.html":{},"components/SnapComponent.html":{},"miscellaneous/enumerations.html":{}}}],["snapcomponent",{"_index":214,"title":{"components/SnapComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["snapodds",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"index.html":{}}}],["snapodds__font",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["snapodds_action_cancel",{"_index":686,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_action_close_help",{"_index":762,"title":{},"body":{"components/HelpComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_action_help",{"_index":1361,"title":{},"body":{"components/SnapComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_action_reload",{"_index":1362,"title":{},"body":{"components/SnapComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_device_no_permission",{"_index":1494,"title":{},"body":{"interfaces/TranslationEntries.html":{}}}],["snapodds_device_no_permission_headline",{"_index":1495,"title":{},"body":{"interfaces/TranslationEntries.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["snapodds_lines_loading",{"_index":1048,"title":{},"body":{"components/OddsComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_lines_no_results",{"_index":1049,"title":{},"body":{"components/OddsComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_snapping_failed",{"_index":1496,"title":{},"body":{"interfaces/TranslationEntries.html":{}}}],["snapodds_snapping_failed_headline",{"_index":1497,"title":{},"body":{"interfaces/TranslationEntries.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["snapodds_snapping_no_results",{"_index":1498,"title":{},"body":{"interfaces/TranslationEntries.html":{}}}],["snapodds_snapping_no_results_headline",{"_index":1499,"title":{},"body":{"interfaces/TranslationEntries.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["snapodds_title_help",{"_index":722,"title":{},"body":{"components/HelpComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_title_odds",{"_index":1042,"title":{},"body":{"components/OddsComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_title_snap_tv",{"_index":723,"title":{},"body":{"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_viewfinder_hint",{"_index":1500,"title":{},"body":{"interfaces/TranslationEntries.html":{}}}],["snapoddsfacade",{"_index":1238,"title":{"injectables/SnapOddsFacade.html":{}},"body":{"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"coverage.html":{}}}],["snapping",{"_index":346,"title":{},"body":{"interfaces/ApplicationConfig.html":{}}}],["snapscreen",{"_index":1604,"title":{},"body":{"injectables/TvSearchService.html":{},"index.html":{}}}],["snapscreensdk",{"_index":634,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapshot",{"_index":1227,"title":{},"body":{"components/SnapComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["snapshots",{"_index":1272,"title":{},"body":{"components/SnapComponent.html":{}}}],["snapstarttime",{"_index":1398,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["snapviewclosed",{"_index":592,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapviewopened",{"_index":593,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapviewsnap",{"_index":594,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapviewsnapfailed",{"_index":595,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapviewsnapfailed(duration",{"_index":615,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapviewsnapnegative",{"_index":596,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapviewsnapnegative(duration",{"_index":618,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapviewsnapresult",{"_index":597,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapviewsnapresult(duration",{"_index":620,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["solid",{"_index":691,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/WebcamComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"components/SwitchSvgComponent.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"index.html":{}}}],["source.clientheight",{"_index":858,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["source.clientwidth",{"_index":857,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["source.videoheight",{"_index":843,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["source.videowidth",{"_index":842,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["sourceheight",{"_index":820,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["sourcewidth",{"_index":824,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["space",{"_index":542,"title":{},"body":{"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/OddsComponent.html":{}}}],["specific",{"_index":1461,"title":{},"body":{"interfaces/SportEvent.html":{},"interfaces/SportsBook-1.html":{}}}],["specified",{"_index":453,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["spinner",{"_index":1408,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner'},{'name",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["spinner.component.html",{"_index":1410,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner.component.scss",{"_index":1409,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.component",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["spinnercomponent",{"_index":216,"title":{"components/SpinnerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sport",{"_index":533,"title":{},"body":{"interfaces/Competitor.html":{},"components/OddsComponent.html":{},"interfaces/OddsResponse.html":{},"interfaces/SportEvent.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["sportbook.name",{"_index":1050,"title":{},"body":{"components/OddsComponent.html":{}}}],["sportbooks",{"_index":884,"title":{},"body":{"interfaces/LineOdds.html":{},"components/OddsComponent.html":{},"interfaces/SportsBook.html":{}}}],["sportdataprovidercode",{"_index":1450,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["sportdataprovidermatchid",{"_index":1451,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["sportevent",{"_index":996,"title":{"interfaces/SportEvent.html":{}},"body":{"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"interfaces/SportEvent.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"coverage.html":{}}}],["sporteventid",{"_index":1001,"title":{},"body":{"components/OddsComponent.html":{},"injectables/OddsService.html":{}}}],["sportevents",{"_index":396,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{}}}],["sporteventsresponse",{"_index":1255,"title":{},"body":{"components/SnapComponent.html":{}}}],["sports",{"_index":885,"title":{},"body":{"interfaces/LineOdds.html":{},"interfaces/OddsResponse.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{}}}],["sportsbook",{"_index":883,"title":{"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{}},"body":{"interfaces/LineOdds.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"coverage.html":{}}}],["sportsbook._links?.redirect?.href",{"_index":1174,"title":{},"body":{"injectables/OddsService.html":{}}}],["sportsbook.name",{"_index":1170,"title":{},"body":{"injectables/OddsService.html":{}}}],["sportsbook.offers",{"_index":1167,"title":{},"body":{"injectables/OddsService.html":{}}}],["sportsbookline",{"_index":1472,"title":{"interfaces/SportsBookLine.html":{}},"body":{"interfaces/SportsBook.html":{},"interfaces/SportsBookLine.html":{},"coverage.html":{}}}],["sportsbooklines",{"_index":1202,"title":{},"body":{"injectables/OddsService.html":{}}}],["sportsbooklines.push(converted",{"_index":1201,"title":{},"body":{"injectables/OddsService.html":{}}}],["sportsbooks",{"_index":880,"title":{},"body":{"interfaces/LineOdds.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{}}}],["spread",{"_index":1051,"title":{},"body":{"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"injectables/OddsService.html":{},"interfaces/SportsBookLine.html":{}}}],["spreadodds",{"_index":1483,"title":{},"body":{"interfaces/SportsBookLine.html":{}}}],["spreadurl",{"_index":1484,"title":{},"body":{"interfaces/SportsBookLine.html":{}}}],["stand",{"_index":1751,"title":{},"body":{"components/WebcamComponent.html":{}}}],["start",{"_index":1062,"title":{},"body":{"components/OddsComponent.html":{},"interfaces/OddsResponse.html":{},"interfaces/SportEvent.html":{}}}],["startautosnapwithdelay",{"_index":1235,"title":{},"body":{"components/SnapComponent.html":{}}}],["started",{"_index":1877,"title":{"index.html":{}},"body":{}}],["starts",{"_index":1269,"title":{},"body":{"components/SnapComponent.html":{}}}],["starttime",{"_index":1129,"title":{},"body":{"interfaces/OddsResponse.html":{},"interfaces/SportEvent.html":{}}}],["state",{"_index":299,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["state.store",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["state.store.ts",{"_index":296,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["state.store.ts:16",{"_index":944,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["state.store.ts:17",{"_index":945,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["state.store.ts:20",{"_index":311,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["state.store.ts:21",{"_index":319,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["state.store.ts:22",{"_index":950,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["state.store.ts:26",{"_index":314,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["state.store.ts:30",{"_index":943,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["state.store.ts:31",{"_index":305,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["state.store.ts:38",{"_index":942,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["state.store.ts:39",{"_index":303,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["statements",{"_index":1779,"title":{},"body":{"coverage.html":{}}}],["states/app",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["states/media",{"_index":1317,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["stet",{"_index":754,"title":{},"body":{"components/HelpComponent.html":{}}}],["stops",{"_index":1285,"title":{},"body":{"components/SnapComponent.html":{}}}],["storage",{"_index":1819,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["stores",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["stream",{"_index":809,"title":{},"body":{"injectables/ImageManipulationService.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["string",{"_index":17,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"interfaces/Link.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsResponse.html":{},"interfaces/Player.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"interfaces/TranslationEntries.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"miscellaneous/functions.html":{}}}],["stroke",{"_index":1749,"title":{},"body":{"components/WebcamComponent.html":{}}}],["structure",{"_index":877,"title":{},"body":{"interfaces/LineOdds.html":{},"injectables/OddsService.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLine.html":{}}}],["style",{"_index":1145,"title":{},"body":{"injectables/OddsService.html":{}}}],["stylelint",{"_index":1618,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["styles",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["styleurls",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["subject",{"_index":1294,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["subscribe((appstate",{"_index":1325,"title":{},"body":{"components/SnapComponent.html":{}}}],["subscribe((mediadevicestate",{"_index":1328,"title":{},"body":{"components/SnapComponent.html":{}}}],["subscribe((response",{"_index":1342,"title":{},"body":{"components/SnapComponent.html":{}}}],["subscribes",{"_index":1288,"title":{},"body":{"components/SnapComponent.html":{}}}],["subscribetostatestores",{"_index":1236,"title":{},"body":{"components/SnapComponent.html":{}}}],["subscriptions",{"_index":1264,"title":{},"body":{"components/SnapComponent.html":{}}}],["successful",{"_index":359,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{}}}],["super('no",{"_index":1530,"title":{},"body":{"classes/TvSearchNoResultError.html":{}}}],["support",{"_index":1936,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":965,"title":{},"body":{"injectables/NotificationService.html":{}}}],["svg",{"_index":1487,"title":{},"body":{"components/SwitchSvgComponent.html":{},"components/TriggerSvgComponent.html":{},"modules.html":{}}}],["svg'},{'name",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["svgs/switch.svg.component",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["svgs/trigger.svg.component",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["switch",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/LoggerService.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["switch.svg",{"_index":1489,"title":{},"body":{"components/SwitchSvgComponent.html":{}}}],["switch.svg.styles.scss",{"_index":1488,"title":{},"body":{"components/SwitchSvgComponent.html":{}}}],["switched",{"_index":1741,"title":{},"body":{"components/WebcamComponent.html":{}}}],["switchmap",{"_index":1154,"title":{},"body":{"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/TvSearchService.html":{}}}],["switchmap((accesstoken",{"_index":1159,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["switchmap((webcamimage",{"_index":1356,"title":{},"body":{"components/SnapComponent.html":{}}}],["switchsvgcomponent",{"_index":218,"title":{"components/SwitchSvgComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["switchtonextwebcam",{"_index":1642,"title":{},"body":{"components/WebcamComponent.html":{}}}],["sx",{"_index":840,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["sy",{"_index":841,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["system",{"_index":1466,"title":{},"body":{"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["tab",{"_index":1017,"title":{},"body":{"components/OddsComponent.html":{}}}],["table",{"_index":1838,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1837,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1271,"title":{},"body":{"components/SnapComponent.html":{}}}],["take(1",{"_index":1339,"title":{},"body":{"components/SnapComponent.html":{}}}],["taken",{"_index":1283,"title":{},"body":{"components/SnapComponent.html":{}}}],["takes",{"_index":405,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["takesnapshot",{"_index":1237,"title":{},"body":{"components/SnapComponent.html":{}}}],["takeuntil",{"_index":1305,"title":{},"body":{"components/SnapComponent.html":{}}}],["takeuntil(race(this.destroyed",{"_index":1347,"title":{},"body":{"components/SnapComponent.html":{}}}],["takeuntil(this.destroyed",{"_index":1340,"title":{},"body":{"components/SnapComponent.html":{}}}],["takimata",{"_index":759,"title":{},"body":{"components/HelpComponent.html":{}}}],["taking",{"_index":1652,"title":{},"body":{"components/WebcamComponent.html":{}}}],["tap",{"_index":1391,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["tap((response",{"_index":1595,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["target",{"_index":1121,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{},"interfaces/SportsBookLine.html":{}}}],["technical",{"_index":1247,"title":{},"body":{"components/SnapComponent.html":{}}}],["template",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["templated",{"_index":890,"title":{},"body":{"interfaces/Link.html":{}}}],["templateurl",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["tempor",{"_index":736,"title":{},"body":{"components/HelpComponent.html":{}}}],["test",{"_index":1918,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1917,"title":{},"body":{"index.html":{}}}],["text",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SwitchSvgComponent.html":{},"interfaces/TranslationEntries.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["then((manipulatedimage",{"_index":1723,"title":{},"body":{"components/WebcamComponent.html":{}}}],["third",{"_index":1220,"title":{},"body":{"interfaces/Quadrangle2d.html":{}}}],["this.#tvsearchresult",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["this._state.asobservable",{"_index":318,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["this._state.next(state",{"_index":340,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["this.accesstoken",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.accesstokenprovider",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["this.analyticsservice.sdkinitialized",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["this.analyticsservice.snapviewclosed",{"_index":1330,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.analyticsservice.snapviewopened",{"_index":1322,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.analyticsservice.snapviewsnap",{"_index":1397,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["this.analyticsservice.snapviewsnapfailed(duration",{"_index":1403,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["this.analyticsservice.snapviewsnapnegative(duration",{"_index":1402,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["this.analyticsservice.snapviewsnapresult(date.now",{"_index":1405,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["this.apiurl",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["this.applicationconfigservice.emitcloseevent",{"_index":685,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.applicationconfigservice.emitloggerevent(loglevel",{"_index":936,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.applicationconfigservice.emitresultsevent(sporteventsresponse.resultentries[0",{"_index":1350,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.applicationconfigservice.getapiurl",{"_index":1157,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["this.applicationconfigservice.getloglevel",{"_index":937,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.applicationconfigservice.getsnapdimension",{"_index":1722,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.applicationconfigservice.isautosnapenabled",{"_index":1319,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["this.applicationconfigservice.isvibrateenabled",{"_index":971,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.applicationconfigservice.setconfig",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["this.appstate",{"_index":1326,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.appstatestore",{"_index":1323,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.appstatestore.dispatch(appstate.device_no_camera",{"_index":1714,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.appstatestore.dispatch(appstate.device_no_permission",{"_index":1736,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.appstatestore.dispatch(appstate.show_help",{"_index":1359,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.appstatestore.dispatch(appstate.show_odds",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["this.appstatestore.dispatch(appstate.snap_failed",{"_index":1353,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.appstatestore.dispatch(appstate.snap_in_progress",{"_index":1354,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.appstatestore.dispatch(appstate.snap_no_results",{"_index":1352,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.appstatestore.dispatch(appstate.snap_ready",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{}}}],["this.authservice.requestaccesstoken().pipe",{"_index":1158,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["this.autosnap",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["this.autosnap_delay",{"_index":465,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.autosnap_delay_initial",{"_index":464,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.autosnap_max_dimension",{"_index":462,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.category",{"_index":648,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.category}/${this.label}/${action",{"_index":663,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.centercontentonzoom",{"_index":1715,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.closecallback",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["this.config",{"_index":454,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.accesstokenprovider",{"_index":459,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.apiurl",{"_index":468,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.autosnap",{"_index":460,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.closecallback",{"_index":470,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.language",{"_index":466,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.logcallback(fromloglevel(loglevel",{"_index":469,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.loglevel",{"_index":467,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.resultscallback(resultentry",{"_index":471,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.vibrate",{"_index":472,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.console.debug(...data",{"_index":928,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.console.error(...data",{"_index":935,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.console.info(...data",{"_index":931,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.console.warn(...data",{"_index":933,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.converttoamericanodds(outcome.odds",{"_index":1188,"title":{},"body":{"injectables/OddsService.html":{}}}],["this.createimagefromcanvas(canvas",{"_index":854,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["this.createsnapscreenheaders(accesstoken",{"_index":1593,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["this.crop(source",{"_index":845,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["this.currenttimestamp",{"_index":1606,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["this.debugimagemanipulations",{"_index":1724,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.destroyed$.complete",{"_index":1332,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.destroyed$.next",{"_index":1331,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.document.createelement('canvas",{"_index":848,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["this.downscale(preferredwidth",{"_index":847,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["this.drawdebugimage(manipulatedimage.blob",{"_index":1725,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.getstate().pipe",{"_index":946,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["this.getstate().pipe(map((state",{"_index":312,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["this.getviewfinder",{"_index":1720,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.handleerror(error",{"_index":1336,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.handlesuccess(response",{"_index":1335,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.hasmultiplewebcams",{"_index":1711,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.hasvalidaccesstoken",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.hasvibrationapi",{"_index":972,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.http.get(`${this.baseurl}/sport/events/${sporteventid}/odds/lines",{"_index":1160,"title":{},"body":{"injectables/OddsService.html":{}}}],["this.http.post(`${this.baseurl}${url",{"_index":1592,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["this.imageasdataurl",{"_index":1732,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.imagemanipulationservice",{"_index":1718,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.injector",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["this.isaboveloglevel(loglevel",{"_index":925,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.isautosnapenabled",{"_index":461,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.isgoogleanalytics",{"_index":642,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.isgoogletagmanager",{"_index":644,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.istokenexpired",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.label",{"_index":651,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.language",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["this.lineodds",{"_index":1041,"title":{},"body":{"components/OddsComponent.html":{}}}],["this.loading",{"_index":1033,"title":{},"body":{"components/OddsComponent.html":{}}}],["this.loadlineodds(changes.tvsearchresultentry.currentvalue.sportevent.id",{"_index":1032,"title":{},"body":{"components/OddsComponent.html":{}}}],["this.loadsportevents().subscribe",{"_index":1334,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.loadsportevents(true).pipe",{"_index":1344,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.location.reload",{"_index":1360,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.log(loglevel.debug",{"_index":921,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.log(loglevel.error",{"_index":922,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.log(loglevel.info",{"_index":924,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.log(loglevel.warn",{"_index":923,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logcallback",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["this.logger.debug(`update",{"_index":1610,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["this.logger.error('failed",{"_index":655,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"components/WebcamComponent.html":{}}}],["this.logger.error('image",{"_index":869,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["this.logger.info('camera",{"_index":1740,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.logger.info('received",{"_index":1726,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.logger.info('tracked",{"_index":646,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.maplineoddsresponse(response",{"_index":1165,"title":{},"body":{"injectables/OddsService.html":{}}}],["this.mediadevicestate",{"_index":1329,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.mediadevicestatestore",{"_index":1327,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.mediadevicestatestore.dispatch(mediadevicestate.device_camera_ready",{"_index":1739,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.mediadevicestatestore.dispatch(mediadevicestate.device_no_camera",{"_index":1713,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.mediadevicestatestore.dispatch(mediadevicestate.device_no_permission",{"_index":1735,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.mediadevicestatestore.webcamisready",{"_index":1337,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.name",{"_index":1531,"title":{},"body":{"classes/TvSearchNoResultError.html":{}}}],["this.navigator.vibrate(200",{"_index":973,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.navigator?.vibrate",{"_index":974,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.nextwebcam.asobservable",{"_index":1687,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.nextwebcam.next(true",{"_index":1738,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.noresults",{"_index":1034,"title":{},"body":{"components/OddsComponent.html":{}}}],["this.notificationservice.notify",{"_index":1349,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.oddsservice.gamelineoddsbysporteventid(sporteventid).subscribe",{"_index":1035,"title":{},"body":{"components/OddsComponent.html":{}}}],["this.omitundefinedproperties(applicationconfig",{"_index":455,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.onlineoddsloaded(lineodds",{"_index":1040,"title":{},"body":{"components/OddsComponent.html":{}}}],["this.onlineoddsloadfailed",{"_index":1039,"title":{},"body":{"components/OddsComponent.html":{}}}],["this.pinchzoomcomponent.scale",{"_index":1721,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.registerautosnap",{"_index":1320,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.resultscallback",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["this.scale",{"_index":1745,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.setupanalytics",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["this.setupapplicationconfig",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["this.setuptranslations",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["this.shouldcrop(scalefactor",{"_index":844,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["this.shoulddownscale(preferredwidth",{"_index":846,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["this.snap('/tv",{"_index":1588,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["this.snap_max_dimension",{"_index":463,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.snapoddsfacade.autosearchsport(webcamimage.blob",{"_index":1357,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.snapoddsfacade.searchsport(webcamimage.blob",{"_index":1358,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.snapshot",{"_index":1348,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.snapshot$.next",{"_index":1333,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.startautosnapwithdelay",{"_index":1341,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.state",{"_index":338,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["this.subscribetostatestores",{"_index":1321,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.timelag",{"_index":1587,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["this.tokenexpirationdate",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.trackevent('snapsdkinit",{"_index":669,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.trackevent('snapviewclose",{"_index":675,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.trackevent('snapviewopen",{"_index":670,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.trackevent('snapviewsnap",{"_index":671,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.trackevent('snapviewsnapfail",{"_index":673,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.trackevent('snapviewsnapnegative",{"_index":674,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.trackevent('snapviewsnapresult",{"_index":672,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.trackgoogleanalyticsevent(action",{"_index":643,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.trackgoogletagmanagerevent(action",{"_index":645,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.translateservice.use(this.applicationconfigservice.getlanguage",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["this.tvsearchresult",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["this.tvsearchservice.autosearchsport(imagedata",{"_index":1406,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["this.tvsearchservice.searchsport(imagedata).pipe",{"_index":1400,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["this.updatetimelag(response",{"_index":1596,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["this.updatetoken(accesstoken",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.vibrate",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["this.viewfinder.nativeelement",{"_index":1727,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.webcamcomponent.nativevideoelement",{"_index":1719,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.webcamcomponent.triggersnapshot()).pipe",{"_index":1355,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.webcamcomponentelement.nativeelement",{"_index":1728,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.window.open(redirecturl",{"_index":1029,"title":{},"body":{"components/OddsComponent.html":{}}}],["through",{"_index":1435,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["throw",{"_index":1599,"title":{},"body":{"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["throwerror",{"_index":1392,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["throwerror(error",{"_index":1404,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["throws",{"_index":1716,"title":{},"body":{"components/WebcamComponent.html":{}}}],["time",{"_index":556,"title":{},"body":{"classes/FileTranslateLoader.html":{},"interfaces/OddsResponse.html":{},"interfaces/SportEvent.html":{},"injectables/TvSearchService.html":{}}}],["timelag",{"_index":1549,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["timer",{"_index":1306,"title":{},"body":{"components/SnapComponent.html":{}}}],["timer(this.applicationconfigservice.getautosnapdelay(true)).pipe",{"_index":1343,"title":{},"body":{"components/SnapComponent.html":{}}}],["timestamp",{"_index":1545,"title":{},"body":{"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{}}}],["timestamp/by",{"_index":1591,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["timestampref",{"_index":1544,"title":{},"body":{"interfaces/TvSearchResultEntry.html":{}}}],["tiny",{"_index":582,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["title",{"_index":664,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{}}}],["toggles",{"_index":1677,"title":{},"body":{"components/WebcamComponent.html":{}}}],["token",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{}}}],["token's",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["token.ts",{"_index":7,"title":{},"body":{"interfaces/AccessToken.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token_type",{"_index":16,"title":{},"body":{"interfaces/AccessToken.html":{}}}],["tokenexpirationdate",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokenrefreshoffset",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokens/console",{"_index":919,"title":{},"body":{"injectables/LoggerService.html":{}}}],["tokens/document",{"_index":836,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["tokens/navigator",{"_index":969,"title":{},"body":{"injectables/NotificationService.html":{}}}],["tologlevel",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tologlevel(loglevel",{"_index":1875,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tologlevel(this.loglevel",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["took",{"_index":1586,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["tools",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["tools.button",{"_index":711,"title":{},"body":{"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{}}}],["tools.flat",{"_index":1622,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{}}}],["tools.media",{"_index":581,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["top",{"_index":696,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["total",{"_index":1053,"title":{},"body":{"components/OddsComponent.html":{}}}],["tournament",{"_index":1452,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["track",{"_index":627,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["trackevent",{"_index":598,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["trackevent(action",{"_index":622,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["trackgoogleanalyticsevent",{"_index":599,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["trackgoogleanalyticsevent(action",{"_index":629,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["trackgoogletagmanagerevent",{"_index":600,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["trackgoogletagmanagerevent(action",{"_index":632,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["tracking/google",{"_index":1396,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["tracks",{"_index":624,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["transform",{"_index":1427,"title":{},"body":{"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["translate",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"classes/FileTranslateLoader.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["translate/core",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/FileTranslateLoader.html":{},"dependencies.html":{}}}],["translateloader",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"classes/FileTranslateLoader.html":{}}}],["translatemodule",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule.forroot",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["translating",{"_index":1493,"title":{},"body":{"interfaces/TranslationEntries.html":{}}}],["translation",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"classes/FileTranslateLoader.html":{}}}],["translation_entries_de",{"_index":551,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["translation_entries_en",{"_index":549,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["translationentries",{"_index":567,"title":{"interfaces/TranslationEntries.html":{}},"body":{"classes/FileTranslateLoader.html":{},"interfaces/TranslationEntries.html":{},"coverage.html":{}}}],["translations",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"classes/FileTranslateLoader.html":{}}}],["transparent",{"_index":1099,"title":{},"body":{"components/OddsComponent.html":{}}}],["transport",{"_index":660,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["tree",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["tried",{"_index":1284,"title":{},"body":{"components/SnapComponent.html":{}}}],["tries",{"_index":1273,"title":{},"body":{"components/SnapComponent.html":{}}}],["trigger",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["trigger'},{'name",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["trigger.component.html",{"_index":1503,"title":{},"body":{"components/TriggerComponent.html":{}}}],["trigger.component.scss",{"_index":1502,"title":{},"body":{"components/TriggerComponent.html":{}}}],["trigger.svg",{"_index":1515,"title":{},"body":{"components/TriggerSvgComponent.html":{}}}],["trigger/trigger.component",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["triggercomponent",{"_index":221,"title":{"components/TriggerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["triggered",{"_index":1383,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["triggers",{"_index":382,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["triggersnapshot",{"_index":1643,"title":{},"body":{"components/WebcamComponent.html":{}}}],["triggersvgcomponent",{"_index":223,"title":{"components/TriggerSvgComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["true",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{},"components/OddsComponent.html":{},"injectables/TvSearchService.html":{}}}],["try",{"_index":641,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{}}}],["ts",{"_index":1546,"title":{},"body":{"interfaces/TvSearchResultEntry.html":{}}}],["tslib",{"_index":1860,"title":{},"body":{"dependencies.html":{}}}],["turned",{"_index":1681,"title":{},"body":{"components/WebcamComponent.html":{}}}],["tutorial",{"_index":1935,"title":{},"body":{"index.html":{}}}],["tv",{"_index":1446,"title":{},"body":{"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["tvchannel",{"_index":1468,"title":{"interfaces/TvChannel.html":{}},"body":{"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResultEntry.html":{},"coverage.html":{}}}],["tvchannelid",{"_index":1453,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["tvchannellogo",{"_index":1469,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["tvsearchnoresulterror",{"_index":1307,"title":{"classes/TvSearchNoResultError.html":{}},"body":{"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"classes/TvSearchNoResultError.html":{},"injectables/TvSearchService.html":{},"coverage.html":{}}}],["tvsearchresult",{"_index":43,"title":{"interfaces/TvSearchResult.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"interfaces/TvSearchResult.html":{},"injectables/TvSearchService.html":{},"coverage.html":{}}}],["tvsearchresult(tvsearchresultentry",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["tvsearchresultentry",{"_index":117,"title":{"interfaces/TvSearchResultEntry.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"components/OddsComponent.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"coverage.html":{}}}],["tvsearchresults",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["tvsearchservice",{"_index":1378,"title":{"injectables/TvSearchService.html":{}},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"coverage.html":{}}}],["two",{"_index":564,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["type",{"_index":18,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBook-1.html":{},"interfaces/SportsBookLine.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1942,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":656,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"injectables/NotificationService.html":{}}}],["typings",{"_index":1891,"title":{},"body":{"index.html":{}}}],["u",{"_index":1059,"title":{},"body":{"components/OddsComponent.html":{}}}],["undefined",{"_index":429,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["under",{"_index":1126,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{},"injectables/OddsService.html":{}}}],["understand",{"_index":1924,"title":{},"body":{"index.html":{}}}],["unique",{"_index":1463,"title":{},"body":{"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{}}}],["unit",{"_index":1916,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/LoggerService.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["unless",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["up",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/SnapComponent.html":{}}}],["updates",{"_index":1289,"title":{},"body":{"components/SnapComponent.html":{}}}],["updatetimelag",{"_index":1551,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["updatetimelag(response",{"_index":1575,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["updatetoken",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatetoken(authresponse",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["url",{"_index":1016,"title":{},"body":{"components/OddsComponent.html":{},"interfaces/SportsBookLine.html":{},"interfaces/TvChannel.html":{},"injectables/TvSearchService.html":{}}}],["use",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"index.html":{}}}],["useclass",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"interfaces/LineOdds.html":{},"injectables/MediaDeviceStateStore.html":{},"components/SnapComponent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLine.html":{},"interfaces/TvSearchResult.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["user",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ApplicationConfigService.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/SportsBook.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{}}}],["userfeedbackmessagecomponent",{"_index":224,"title":{"components/UserFeedbackMessageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":631,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"index.html":{}}}],["ut",{"_index":738,"title":{},"body":{"components/HelpComponent.html":{}}}],["valid",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["validity",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/Point2d.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/SportsBookLine.html":{},"components/TriggerComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":428,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["var",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["variable",{"_index":1802,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1946,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":323,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{},"interfaces/SportsBook.html":{},"miscellaneous/enumerations.html":{}}}],["verification",{"_index":1682,"title":{},"body":{"components/WebcamComponent.html":{}}}],["verifies",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{},"components/WebcamComponent.html":{}}}],["vero",{"_index":746,"title":{},"body":{"components/HelpComponent.html":{}}}],["via",{"_index":1920,"title":{},"body":{"index.html":{}}}],["vibrate",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/NotificationService.html":{},"miscellaneous/variables.html":{}}}],["vibration",{"_index":966,"title":{},"body":{"injectables/NotificationService.html":{}}}],["video",{"_index":808,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{},"index.html":{}}}],["videooptions",{"_index":1633,"title":{},"body":{"components/WebcamComponent.html":{}}}],["videoscale",{"_index":855,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["view",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"components/SnapComponent.html":{},"interfaces/TranslationEntries.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{}}}],["viewchild",{"_index":1300,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["viewchild('viewfinder",{"_index":1699,"title":{},"body":{"components/WebcamComponent.html":{}}}],["viewchild(ngxwebcamcomponent",{"_index":1702,"title":{},"body":{"components/WebcamComponent.html":{}}}],["viewchild(pinchzoomcomponent",{"_index":1688,"title":{},"body":{"components/WebcamComponent.html":{}}}],["viewchild(webcamcomponent",{"_index":1298,"title":{},"body":{"components/SnapComponent.html":{}}}],["viewfinder",{"_index":799,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["viewfinders",{"_index":1556,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["viewport",{"_index":1557,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["visibility",{"_index":1098,"title":{},"body":{"components/OddsComponent.html":{}}}],["visible",{"_index":805,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["void",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["voluptua",{"_index":745,"title":{},"body":{"components/HelpComponent.html":{}}}],["warn",{"_index":894,"title":{},"body":{"injectables/LoggerService.html":{},"components/UserFeedbackMessageComponent.html":{},"miscellaneous/enumerations.html":{}}}],["warn(...data",{"_index":917,"title":{},"body":{"injectables/LoggerService.html":{}}}],["web",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["webbrowser",{"_index":1277,"title":{},"body":{"components/SnapComponent.html":{}}}],["webcam",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["webcam.component.html",{"_index":1628,"title":{},"body":{"components/WebcamComponent.html":{}}}],["webcam.component.scss",{"_index":1627,"title":{},"body":{"components/WebcamComponent.html":{}}}],["webcam/webcam.component",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"components/SnapComponent.html":{}}}],["webcamcomponent",{"_index":228,"title":{"components/WebcamComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["webcamcomponentelement",{"_index":1634,"title":{},"body":{"components/WebcamComponent.html":{}}}],["webcaminiterror",{"_index":1667,"title":{},"body":{"components/WebcamComponent.html":{}}}],["webcamisready",{"_index":940,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["webcammodule",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["webcams",{"_index":807,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["webcamutil",{"_index":1706,"title":{},"body":{"components/WebcamComponent.html":{}}}],["webcamutil.getavailablevideoinputs().then((mediadevices",{"_index":1709,"title":{},"body":{"components/WebcamComponent.html":{}}}],["weight",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["whenever",{"_index":350,"title":{},"body":{"interfaces/ApplicationConfig.html":{}}}],["white",{"_index":706,"title":{},"body":{"components/HeaderComponent.html":{}}}],["whole",{"_index":1665,"title":{},"body":{"components/WebcamComponent.html":{}}}],["width",{"_index":764,"title":{},"body":{"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"components/OddsComponent.html":{},"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{}}}],["win",{"_index":1124,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{},"injectables/OddsService.html":{}}}],["window",{"_index":988,"title":{},"body":{"components/OddsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["workspace",{"_index":1925,"title":{},"body":{"index.html":{}}}],["wrapper",{"_index":1759,"title":{},"body":{"components/WebcamComponent.html":{},"index.html":{}}}],["written",{"_index":353,"title":{},"body":{"interfaces/ApplicationConfig.html":{}}}],["x",{"_index":1210,"title":{},"body":{"interfaces/Point2d.html":{}}}],["xl",{"_index":704,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["xs",{"_index":1084,"title":{},"body":{"components/OddsComponent.html":{},"components/WebcamComponent.html":{}}}],["y",{"_index":1211,"title":{},"body":{"interfaces/Point2d.html":{}}}],["yes",{"_index":628,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"components/OddsComponent.html":{}}}],["yyyy",{"_index":1458,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["z",{"_index":1762,"title":{},"body":{"components/WebcamComponent.html":{}}}],["zone.js",{"_index":1862,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"components/WebcamComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["zoomed",{"_index":812,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["zooming",{"_index":1656,"title":{},"body":{"components/WebcamComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AccessToken.html":{"url":"interfaces/AccessToken.html","title":"interface - AccessToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccessToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/auth/access-token.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access_token\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            authorities\n                                        \n                                \n                                \n                                        \n                                            expires_in\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            refresh_token\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scope\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            token_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        authorities\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authorities:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires_in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expires_in:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refresh_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scope:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AccessToken {\n  access_token: string;\n  token_type?: string;\n  refresh_token?: string;\n  expires_in: number;\n  scope?: string;\n  authorities?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-sdk\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                #tvSearchResult\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeOddsView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setupAnalytics\n                            \n                            \n                                    Private\n                                setupApplicationConfig\n                            \n                            \n                                    Private\n                                setupTranslations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                accessTokenProvider\n                            \n                            \n                                apiUrl\n                            \n                            \n                                autoSnap\n                            \n                            \n                                closeCallback\n                            \n                            \n                                language\n                            \n                            \n                                logCallback\n                            \n                            \n                                logLevel\n                            \n                            \n                                resultsCallback\n                            \n                            \n                                tvSearchResult\n                            \n                            \n                                vibrate\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    tvSearchResult\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationConfigService: ApplicationConfigService, translateService: TranslateService, analyticsService: GoogleAnalyticsService, appStateStore: AppStateStore)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/app/app.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        analyticsService\n                                                  \n                                                        \n                                                                        GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appStateStore\n                                                  \n                                                        \n                                                                        AppStateStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        accessTokenProvider\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        apiUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoSnap\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        closeCallback\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        language\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logCallback\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logLevel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        resultsCallback\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tvSearchResult\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        vibrate\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeOddsView\n                        \n                    \n                \n            \n            \n                \ncloseOddsView()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/app.component.ts:104\n                \n            \n\n\n            \n                \n                    Clears the stored tvSearchResults and renders the view to snap an image.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/app.component.ts:60\n                \n            \n\n\n            \n                \n                    Sets up the applicationConfig, translations and analytics.\nCalled when the SDK is added to the DOM\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setupAnalytics\n                        \n                    \n                \n            \n            \n                \n                    \n                    setupAnalytics()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/app.component.ts:70\n                \n            \n\n\n            \n                \n                    Trigger analytics method that SDK has been initialized\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setupApplicationConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setupApplicationConfig()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/app.component.ts:87\n                \n            \n\n\n            \n                \n                    Configure the application based on the component inputs and assigns the callbacks.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setupTranslations\n                        \n                    \n                \n            \n            \n                \n                    \n                    setupTranslations()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/app.component.ts:78\n                \n            \n\n\n            \n                \n                    Register the translation service for the configured language\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        #tvSearchResult\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TvSearchResultEntry | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/app.component.ts:21\n                        \n                    \n\n            \n                \n                    Holds the value of the TvSearchResultEntry for loading and rendering the lineOdds\nOnly to be accessed by property accessors.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tvSearchResult\n                    \n                \n\n                \n                    \n                        gettvSearchResult()\n                    \n                \n                            \n                                \n                                    Defined in apps/snapodds/src/app/app.component.ts:45\n                                \n                            \n                    \n                        \n                                Returns the TvSearchResult, so that it can be used inside the template\n\n\n                        \n                    \n\n                \n                    \n                        settvSearchResult(tvSearchResultEntry: TvSearchResultEntry | null)\n                    \n                \n                            \n                                \n                                    Defined in apps/snapodds/src/app/app.component.ts:34\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            tvSearchResultEntry\n                                                    \n                                                            \n                                                                        TvSearchResultEntry | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AccessToken, TvSearchResultEntry } from '@response/typings';\nimport { ApplicationConfigService } from '../services/config/application-config.service';\nimport { toLogLevel } from '../services/logger/log-level';\nimport { GoogleAnalyticsService } from '../services/tracking/google-analytics.service';\nimport { AppState, AppStateStore } from '../states/app-state.store';\n\n@Component({\n  selector: 'snapodds-sdk',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  /**\n   * Holds the value of the TvSearchResultEntry for loading and rendering the lineOdds\n   * Only to be accessed by property accessors.\n   *\n   * @private\n   */\n  #tvSearchResult: TvSearchResultEntry | null = null;\n\n  @Input() apiUrl?: string;\n  @Input() autoSnap?: boolean;\n  @Input() language?: string;\n  @Input() logLevel?: string;\n  @Input() vibrate?: boolean;\n  @Input() accessTokenProvider?: () => Promise;\n  @Input() logCallback?: (logLevel: string, data: unknown[]) => void;\n  @Input() resultsCallback?: (tvSearchResult: TvSearchResultEntry) => void;\n  @Input() closeCallback?: () => void;\n\n  @Input()\n  set tvSearchResult(tvSearchResultEntry: TvSearchResultEntry | null) {\n    this.#tvSearchResult = tvSearchResultEntry;\n\n    if (tvSearchResultEntry) {\n      this.appStateStore.dispatch(AppState.SHOW_ODDS);\n    }\n  }\n\n  /**\n   * Returns the TvSearchResult, so that it can be used inside the template\n   */\n  get tvSearchResult() {\n    return this.#tvSearchResult;\n  }\n\n  constructor(\n    private readonly applicationConfigService: ApplicationConfigService,\n    private readonly translateService: TranslateService,\n    private readonly analyticsService: GoogleAnalyticsService,\n    readonly appStateStore: AppStateStore\n  ) {}\n\n  /**\n   * Sets up the applicationConfig, translations and analytics.\n   * Called when the SDK is added to the DOM\n   */\n  ngOnInit(): void {\n    this.setupApplicationConfig();\n    this.setupTranslations();\n    this.setupAnalytics();\n  }\n\n  /**\n   * Trigger analytics method that SDK has been initialized\n   * @private\n   */\n  private setupAnalytics(): void {\n    this.analyticsService.sdkInitialized();\n  }\n\n  /**\n   * Register the translation service for the configured language\n   * @private\n   */\n  private setupTranslations(): void {\n    this.translateService.use(this.applicationConfigService.getLanguage());\n  }\n\n  /**\n   * Configure the application based on the component inputs and assigns the callbacks.\n   *\n   * @private\n   */\n  private setupApplicationConfig(): void {\n    this.applicationConfigService.setConfig({\n      apiUrl: this.apiUrl,\n      autoSnap: this.autoSnap,\n      language: this.language,\n      logLevel: toLogLevel(this.logLevel),\n      vibrate: this.vibrate,\n      accessTokenProvider: this.accessTokenProvider,\n      closeCallback: this.closeCallback,\n      logCallback: this.logCallback,\n      resultsCallback: this.resultsCallback,\n    });\n  }\n\n  /**\n   * Clears the stored tvSearchResults and renders the view to snap an image.\n   */\n  closeOddsView(): void {\n    this.tvSearchResult = null;\n    this.appStateStore.dispatch(AppState.SNAP_READY);\n  }\n}\n\n    \n\n    \n        \n\n\n  \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @use 'tools';\n@use 'settings';\n\n:host {\n  background-color: settings.$color-background;\n\n  color: settings.$color-text;\n  display: flex;\n  flex: 1;\n  font-family: var(--snapodds__font-family);\n  font-size: 1em;\n  font-weight: 500;\n  line-height: 1.3;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nAppModule -->\n\nContentComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHelpComponent\n\nHelpComponent\n\nAppModule -->\n\nHelpComponent->AppModule\n\n\n\n\n\nOddsComponent\n\nOddsComponent\n\nAppModule -->\n\nOddsComponent->AppModule\n\n\n\n\n\nSnapComponent\n\nSnapComponent\n\nAppModule -->\n\nSnapComponent->AppModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nAppModule -->\n\nSpinnerComponent->AppModule\n\n\n\n\n\nSwitchSvgComponent\n\nSwitchSvgComponent\n\nAppModule -->\n\nSwitchSvgComponent->AppModule\n\n\n\n\n\nTriggerComponent\n\nTriggerComponent\n\nAppModule -->\n\nTriggerComponent->AppModule\n\n\n\n\n\nTriggerSvgComponent\n\nTriggerSvgComponent\n\nAppModule -->\n\nTriggerSvgComponent->AppModule\n\n\n\n\n\nUserFeedbackMessageComponent\n\nUserFeedbackMessageComponent\n\nAppModule -->\n\nUserFeedbackMessageComponent->AppModule\n\n\n\n\n\nWebcamComponent\n\nWebcamComponent\n\nAppModule -->\n\nWebcamComponent->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/snapodds/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ContentComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HelpComponent\n                        \n                        \n                            OddsComponent\n                        \n                        \n                            SnapComponent\n                        \n                        \n                            SpinnerComponent\n                        \n                        \n                            SwitchSvgComponent\n                        \n                        \n                            TriggerComponent\n                        \n                        \n                            TriggerSvgComponent\n                        \n                        \n                            UserFeedbackMessageComponent\n                        \n                        \n                            WebcamComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoBootstrap\n                        \n                    \n                \n            \n            \n                \nngDoBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/app.module.ts:61\n                \n            \n\n\n            \n                \n                    Register the angular component as web-component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { DoBootstrap, Injector, NgModule } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { PinchZoomModule } from 'ngx-pinch-zoom';\nimport { WebcamModule } from 'ngx-webcam';\nimport { FileTranslateLoader } from '../services/i18n/file-translate-loader';\n\nimport { AppComponent } from './app.component';\nimport { ContentComponent } from './content/content.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HeaderComponent } from './header/header.component';\nimport { HelpComponent } from './help/help.component';\nimport { OddsComponent } from './odds/odds.component';\nimport { SnapComponent } from './snap/snap.component';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { SwitchSvgComponent } from './svgs/switch.svg.component';\nimport { TriggerSvgComponent } from './svgs/trigger.svg.component';\nimport { TriggerComponent } from './trigger/trigger.component';\nimport { UserFeedbackMessageComponent } from './user-feedback-message/user-feedback-message.component';\nimport { WebcamComponent } from './webcam/webcam.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SnapComponent,\n    OddsComponent,\n    WebcamComponent,\n    SpinnerComponent,\n    HeaderComponent,\n    ContentComponent,\n    FooterComponent,\n    HelpComponent,\n    TriggerComponent,\n    TriggerSvgComponent,\n    SwitchSvgComponent,\n    UserFeedbackMessageComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    WebcamModule,\n    PinchZoomModule,\n    TranslateModule.forRoot({\n      defaultLanguage: 'en',\n      loader: {\n        provide: TranslateLoader,\n        useClass: FileTranslateLoader,\n      },\n    }),\n  ],\n  entryComponents: [AppComponent],\n})\nexport class AppModule implements DoBootstrap {\n  constructor(private injector: Injector) {}\n\n  /**\n   * Register the angular component as web-component.\n   */\n  ngDoBootstrap() {\n    const el = createCustomElement(AppComponent, { injector: this.injector });\n    customElements.define('snapodds-sdk', el);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppStateStore.html":{"url":"injectables/AppStateStore.html","title":"injectable - AppStateStore","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppStateStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/states/app-state.store.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _state\n                            \n                            \n                                    Readonly\n                                showHelp$\n                            \n                            \n                                    Private\n                                    Readonly\n                                state$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dispatch\n                            \n                            \n                                getState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dispatch\n                        \n                    \n                \n            \n            \n                \ndispatch(state: AppState)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/states/app-state.store.ts:39\n                \n            \n\n\n            \n                \n                    Trigger an AppState change\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                AppState\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getState\n                        \n                    \n                \n            \n            \n                \ngetState()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/states/app-state.store.ts:31\n                \n            \n\n\n            \n                \n                    Listen to changes on the AppState\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/states/app-state.store.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        showHelp$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.getState().pipe(map((state) => state === AppState.SHOW_HELP))\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/states/app-state.store.ts:26\n                        \n                    \n\n            \n                \n                    Emits when the HelpPage should be shown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._state.asObservable()\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/states/app-state.store.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { map, Observable, ReplaySubject } from 'rxjs';\n\n/**\n * The various AppStates which are used for determining which view to render\n */\nexport enum AppState {\n  SHOW_HELP = 'SHOW_HELP',\n  SHOW_ODDS = 'SHOW_ODDS',\n  SNAP_READY = 'SNAP_READY',\n  SNAP_IN_PROGRESS = 'SNAP_IN_PROGRESS',\n  SNAP_FAILED = 'SNAP_FAILED',\n  SNAP_NO_RESULTS = 'SNAP_NO_RESULTS',\n  DEVICE_NO_CAMERA = 'DEVICE_NO_CAMERA',\n  DEVICE_NO_PERMISSION = 'DEVICE_NO_PERMISSION',\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AppStateStore {\n  private readonly _state = new ReplaySubject(1);\n  private readonly state$: Observable = this._state.asObservable();\n\n  /**\n   * Emits when the HelpPage should be shown\n   */\n  readonly showHelp$ = this.getState().pipe(map((state) => state === AppState.SHOW_HELP));\n\n  /**\n   * Listen to changes on the AppState\n   */\n  getState(): Observable {\n    return this.state$;\n  }\n\n  /**\n   * Trigger an AppState change\n   * @param state\n   */\n  dispatch(state: AppState): void {\n    this._state.next(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationConfig.html":{"url":"interfaces/ApplicationConfig.html","title":"interface - ApplicationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApplicationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/config/application-config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessTokenProvider\n                                        \n                                \n                                \n                                        \n                                            apiUrl\n                                        \n                                \n                                \n                                        \n                                            autoSnap\n                                        \n                                \n                                \n                                        \n                                            closeCallback\n                                        \n                                \n                                \n                                        \n                                            language\n                                        \n                                \n                                \n                                        \n                                            logCallback\n                                        \n                                \n                                \n                                        \n                                            logLevel\n                                        \n                                \n                                \n                                        \n                                            resultsCallback\n                                        \n                                \n                                \n                                        \n                                            vibrate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessTokenProvider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessTokenProvider:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Callback executed when the view is closed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        apiUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The apiUrl to be used for snapping\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        autoSnap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autoSnap:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Enable or disable autoSnapping\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        closeCallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closeCallback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Callback executed whenever a log event inside the SDK has been written.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The view language used for i18n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logCallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logCallback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Provider used to retrieve an AccessToken from outside the SDK\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logLevel:         LogLevel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LogLevel\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Enable if the device should vibrate if a snap has been successful\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultsCallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resultsCallback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Callback executed when snapping has returned a TvSearchResultEntry.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vibrate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vibrate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The logLevel to be reported by the SDK\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AccessToken, TvSearchResultEntry } from '@response/typings';\nimport { LogLevel } from '../services/logger/log-level';\n\nexport interface ApplicationConfig {\n  /**\n   * The apiUrl to be used for snapping\n   */\n  apiUrl: string;\n  /**\n   * Enable or disable autoSnapping\n   */\n  autoSnap: boolean;\n  /**\n   * The view language used for i18n\n   */\n  language: string;\n  /**\n   * The logLevel to be reported by the SDK\n   */\n  vibrate: boolean;\n  /**\n   * Enable if the device should vibrate if a snap has been successful\n   */\n  logLevel: LogLevel;\n  /**\n   * Provider used to retrieve an AccessToken from outside the SDK\n   */\n  logCallback: (logLevel: string, data: unknown[]) => void;\n  /**\n   * Callback executed whenever a log event inside the SDK has been written.\n   */\n  closeCallback: () => void;\n  /**\n   * Callback executed when snapping has returned a TvSearchResultEntry.\n   */\n  resultsCallback: (tvSearchResult: TvSearchResultEntry) => void;\n  /**\n   * Callback executed when the view is closed\n   */\n  accessTokenProvider: () => Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationConfigService.html":{"url":"injectables/ApplicationConfigService.html","title":"injectable - ApplicationConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/config/application-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                AUTOSNAP_DELAY\n                            \n                            \n                                    Private\n                                    Readonly\n                                AUTOSNAP_DELAY_INITIAL\n                            \n                            \n                                    Private\n                                    Readonly\n                                AUTOSNAP_MAX_DIMENSION\n                            \n                            \n                                    Private\n                                config\n                            \n                            \n                                    Private\n                                    Readonly\n                                SNAP_MAX_DIMENSION\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitCloseEvent\n                            \n                            \n                                emitLoggerEvent\n                            \n                            \n                                emitResultsEvent\n                            \n                            \n                                getApiUrl\n                            \n                            \n                                getAutoSnapDelay\n                            \n                            \n                                getLanguage\n                            \n                            \n                                getLogLevel\n                            \n                            \n                                getSnapDimension\n                            \n                            \n                                isAutoSnapEnabled\n                            \n                            \n                                isVibrateEnabled\n                            \n                            \n                                    Private\n                                omitUndefinedProperties\n                            \n                            \n                                setConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    accessTokenProvider\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        emitCloseEvent\n                        \n                    \n                \n            \n            \n                \nemitCloseEvent()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:113\n                \n            \n\n\n            \n                \n                    Triggers the closeEvent callback\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emitLoggerEvent\n                        \n                    \n                \n            \n            \n                \nemitLoggerEvent(logLevel: LogLevel, data: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:106\n                \n            \n\n\n            \n                \n                    Triggers the logger event on the corresponding callback\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logLevel\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emitResultsEvent\n                        \n                    \n                \n            \n            \n                \nemitResultsEvent(resultEntry: TvSearchResultEntry)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:121\n                \n            \n\n\n            \n                \n                    Triggers the resultCallback with the given TvSearchResultEntry\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resultEntry\n                                    \n                                                TvSearchResultEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiUrl\n                        \n                    \n                \n            \n            \n                \ngetApiUrl()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:97\n                \n            \n\n\n            \n                \n                    Returns the apiUrl to perform the search of SportEvents and loading of LineOdds against\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAutoSnapDelay\n                        \n                    \n                \n            \n            \n                \ngetAutoSnapDelay(initial: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:76\n                \n            \n\n\n            \n                \n                    Returns the delay used to programmatically trigger a snap\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    initial\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        : the initial delay takes longer in order for the user to correctly align the camera\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLanguage\n                        \n                    \n                \n            \n            \n                \ngetLanguage()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:83\n                \n            \n\n\n            \n                \n                    Returns the configured language\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLogLevel\n                        \n                    \n                \n            \n            \n                \ngetLogLevel()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:90\n                \n            \n\n\n            \n                \n                    Returns the configured logLevel\n\n\n                    \n                        Returns :         LogLevel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSnapDimension\n                        \n                    \n                \n            \n            \n                \ngetSnapDimension()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:68\n                \n            \n\n\n            \n                \n                    Returns the dimension for resizing an image based on the autoSnap mode\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAutoSnapEnabled\n                        \n                    \n                \n            \n            \n                \nisAutoSnapEnabled()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:61\n                \n            \n\n\n            \n                \n                    Determines if autoSnap is enabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isVibrateEnabled\n                        \n                    \n                \n            \n            \n                \nisVibrateEnabled()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:128\n                \n            \n\n\n            \n                \n                    Determines if the device should vibrate if a match has been found or not\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        omitUndefinedProperties\n                        \n                    \n                \n            \n            \n                \n                    \n                    omitUndefinedProperties(config: Partial)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:44\n                \n            \n\n\n            \n                \n                    Filter out entries which values are undefined\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Partial\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConfig\n                        \n                    \n                \n            \n            \n                \nsetConfig(applicationConfig: Partial)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:35\n                \n            \n\n\n            \n                \n                    Merges the given applicationConfig with the default values.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    applicationConfig\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        AUTOSNAP_DELAY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1000\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/config/application-config.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        AUTOSNAP_DELAY_INITIAL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2500\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/config/application-config.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        AUTOSNAP_MAX_DIMENSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 512\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/config/application-config.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_APPLICATION_CONFIG\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/config/application-config.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        SNAP_MAX_DIMENSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1024\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/config/application-config.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        accessTokenProvider\n                    \n                \n\n                \n                    \n                        getaccessTokenProvider()\n                    \n                \n                            \n                                \n                                    Defined in apps/snapodds/src/services/config/application-config.service.ts:54\n                                \n                            \n                    \n                        \n                                Returns the accessTokenProvider callback\n\n\n                                \n                                    Returns :         Promise\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AccessToken, TvSearchResultEntry } from '@response/typings';\nimport { noop } from 'rxjs';\nimport { ApplicationConfig } from '../../config/application-config';\nimport { fromLogLevel, LogLevel } from '../logger/log-level';\n\n/**\n * Default application configuration\n */\nconst DEFAULT_APPLICATION_CONFIG: ApplicationConfig = {\n  apiUrl: 'https://api.us.snapscreen.com',\n  language: 'en',\n  autoSnap: false,\n  logLevel: LogLevel.SILENT,\n  vibrate: false,\n  logCallback: noop,\n  closeCallback: noop,\n  resultsCallback: noop,\n  accessTokenProvider: () => Promise.reject('No accessTokenProvider specified'),\n};\n\n@Injectable({ providedIn: 'root' })\nexport class ApplicationConfigService {\n  private config: ApplicationConfig = DEFAULT_APPLICATION_CONFIG;\n\n  private readonly SNAP_MAX_DIMENSION = 1024;\n  private readonly AUTOSNAP_MAX_DIMENSION = 512;\n  private readonly AUTOSNAP_DELAY_INITIAL = 2500;\n  private readonly AUTOSNAP_DELAY = 1000;\n\n  /**\n   * Merges the given applicationConfig with the default values.\n   * @param applicationConfig\n   */\n  setConfig(applicationConfig: Partial): void {\n    this.config = { ...DEFAULT_APPLICATION_CONFIG, ...this.omitUndefinedProperties(applicationConfig) };\n  }\n\n  /**\n   * Filter out entries which values are undefined\n   * @param config\n   * @private\n   */\n  private omitUndefinedProperties(config: Partial): Partial {\n    return Object.entries(config).reduce(\n      (acc, [key, value]) => (value === undefined ? acc : { ...acc, [key]: value }),\n      {}\n    );\n  }\n\n  /**\n   * Returns the accessTokenProvider callback\n   */\n  get accessTokenProvider(): () => Promise {\n    return this.config.accessTokenProvider;\n  }\n\n  /**\n   * Determines if autoSnap is enabled\n   */\n  isAutoSnapEnabled(): boolean {\n    return this.config.autoSnap;\n  }\n\n  /**\n   * Returns the dimension for resizing an image based on the autoSnap mode\n   */\n  getSnapDimension(): number {\n    return this.isAutoSnapEnabled() ? this.AUTOSNAP_MAX_DIMENSION : this.SNAP_MAX_DIMENSION;\n  }\n\n  /**\n   * Returns the delay used to programmatically trigger a snap\n   * @param initial: the initial delay takes longer in order for the user to correctly align the camera\n   */\n  getAutoSnapDelay(initial: boolean = false): number {\n    return initial ? this.AUTOSNAP_DELAY_INITIAL : this.AUTOSNAP_DELAY;\n  }\n\n  /**\n   * Returns the configured language\n   */\n  getLanguage(): string {\n    return this.config.language;\n  }\n\n  /**\n   * Returns the configured logLevel\n   */\n  getLogLevel(): LogLevel {\n    return this.config.logLevel;\n  }\n\n  /**\n   * Returns the apiUrl to perform the search of SportEvents and loading of LineOdds against\n   */\n  getApiUrl(): string {\n    return this.config.apiUrl;\n  }\n\n  /**\n   * Triggers the logger event on the corresponding callback\n   * @param logLevel\n   * @param data\n   */\n  emitLoggerEvent(logLevel: LogLevel, data: unknown[]): void {\n    this.config.logCallback(fromLogLevel(logLevel), data);\n  }\n\n  /**\n   * Triggers the closeEvent callback\n   */\n  emitCloseEvent(): void {\n    this.config.closeCallback();\n  }\n\n  /**\n   * Triggers the resultCallback with the given TvSearchResultEntry\n   * @param resultEntry\n   */\n  emitResultsEvent(resultEntry: TvSearchResultEntry): void {\n    this.config.resultsCallback(resultEntry);\n  }\n\n  /**\n   * Determines if the device should vibrate if a match has been found or not\n   */\n  isVibrateEnabled(): boolean {\n    return this.config.vibrate;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                accessToken\n                            \n                            \n                                    Private\n                                    Optional\n                                tokenExpirationDate\n                            \n                            \n                                    Private\n                                    Readonly\n                                tokenRefreshOffset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAccessToken\n                            \n                            \n                                hasValidAccessToken\n                            \n                            \n                                    Private\n                                isTokenExpired\n                            \n                            \n                                requestAccessToken\n                            \n                            \n                                updateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationConfigService: ApplicationConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAccessToken\n                        \n                    \n                \n            \n            \n                \ngetAccessToken()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/auth/auth.service.ts:45\n                \n            \n\n\n            \n                \n                    Returns the currently stored accessToken.\n\n\n                    \n                        Returns :     string | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasValidAccessToken\n                        \n                    \n                \n            \n            \n                \nhasValidAccessToken()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/auth/auth.service.ts:52\n                \n            \n\n\n            \n                \n                    Verifies the token validity based on the expiration date.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isTokenExpired\n                        \n                    \n                \n            \n            \n                \n                    \n                    isTokenExpired()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/auth/auth.service.ts:60\n                \n            \n\n\n            \n                \n                    True unless the token's lifetime has been reached.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestAccessToken\n                        \n                    \n                \n            \n            \n                \nrequestAccessToken()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/auth/auth.service.ts:22\n                \n            \n\n\n            \n                \n                    When no accessToken is present the callback to request an accessToken is invoked.\nIf a valid accessToken is present it will be returned instead.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateToken\n                        \n                    \n                \n            \n            \n                \nupdateToken(authResponse: AccessToken)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/auth/auth.service.ts:36\n                \n            \n\n\n            \n                \n                    Stores the current accessToken and sets the token's expiration date.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    authResponse\n                                    \n                                                AccessToken\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : response from with the token is extracted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/auth/auth.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        tokenExpirationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/auth/auth.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        tokenRefreshOffset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 60\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/auth/auth.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AccessToken } from '@response/typings';\nimport { addSeconds, differenceInSeconds } from 'date-fns';\nimport { from, map, Observable, of } from 'rxjs';\nimport { ApplicationConfigService } from '../config/application-config.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private accessToken?: string;\n  private tokenExpirationDate?: Date;\n\n  private readonly tokenRefreshOffset = 60;\n\n  constructor(private readonly applicationConfigService: ApplicationConfigService) {}\n\n  /**\n   * When no accessToken is present the callback to request an accessToken is invoked.\n   * If a valid accessToken is present it will be returned instead.\n   */\n  requestAccessToken(): Observable {\n    if (this.hasValidAccessToken()) {\n      return of(this.accessToken as string);\n    }\n\n    return from(this.applicationConfigService.accessTokenProvider()).pipe(\n      map((accessToken) => this.updateToken(accessToken))\n    );\n  }\n\n  /**\n   * Stores the current accessToken and sets the token's expiration date.\n   * @param authResponse: response from with the token is extracted\n   */\n  updateToken(authResponse: AccessToken): string {\n    this.tokenExpirationDate = addSeconds(new Date(), authResponse.expires_in);\n    this.accessToken = authResponse.access_token;\n    return this.accessToken;\n  }\n\n  /**\n   * Returns the currently stored accessToken.\n   */\n  getAccessToken(): string | undefined {\n    return this.accessToken;\n  }\n\n  /**\n   * Verifies the token validity based on the expiration date.\n   */\n  hasValidAccessToken(): boolean {\n    return Boolean(this.accessToken) && !this.isTokenExpired();\n  }\n\n  /**\n   * True unless the token's lifetime has been reached.\n   * @private\n   */\n  private isTokenExpired(): boolean {\n    return differenceInSeconds(this.tokenExpirationDate ?? new Date(), new Date()) \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Competitor.html":{"url":"interfaces/Competitor.html","title":"interface - Competitor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Competitor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/odds/competitor.ts\n        \n\n\n            \n                Description\n            \n            \n                An entity represents a competitor of a sport event.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the sport event competitor.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the competitor.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Competitor {\n  /**\n   * The id of the sport event competitor.\n   */\n  id: number;\n\n  /**\n   * The name of the competitor.\n   */\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent.html":{"url":"components/ContentComponent.html","title":"component - ContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/content/content.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-content\n            \n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'snapodds-content',\n  template: '',\n  styleUrls: ['./content.component.scss'],\n})\nexport class ContentComponent {}\n\n    \n\n\n    \n                \n                    ./content.component.scss\n                \n                :host {\n  display: flex;\n  flex: auto;\n  flex-direction: column;\n  justify-content: space-between;\n  overflow: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileTranslateLoader.html":{"url":"classes/FileTranslateLoader.html","title":"class - FileTranslateLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileTranslateLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/i18n/file-translate-loader.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        TranslateLoader\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                translations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        translations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n    ['en', TRANSLATION_ENTRIES_EN],\n    ['de', TRANSLATION_ENTRIES_DE],\n  ])\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/i18n/file-translate-loader.ts:12\n                        \n                    \n\n            \n                \n                    Map of translation entries which are inlined during build time, so they don't have to be externally loaded\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTranslation\n                        \n                    \n                \n            \n            \n                \ngetTranslation(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/i18n/file-translate-loader.ts:21\n                \n            \n\n\n            \n                \n                    Retrieves the translation entries for the given language\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : two letter language code\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TranslateLoader } from '@ngx-translate/core';\nimport { Observable, of } from 'rxjs';\nimport { TranslationEntries } from './translation-entries';\nimport { TRANSLATION_ENTRIES_DE } from './translation-entries.de';\nimport { TRANSLATION_ENTRIES_EN } from './translation-entries.en';\n\nexport class FileTranslateLoader implements TranslateLoader {\n  /**\n   * Map of translation entries which are inlined during build time, so they don't have to be externally loaded\n   * @private\n   */\n  private readonly translations: Map = new Map([\n    ['en', TRANSLATION_ENTRIES_EN],\n    ['de', TRANSLATION_ENTRIES_DE],\n  ]);\n\n  /**\n   * Retrieves the translation entries for the given language\n   * @param lang: two letter language code\n   */\n  getTranslation(lang: string): Observable {\n    return of(this.translations.get(lang));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'snapodds-footer',\n  template: '',\n  styleUrls: ['./footer.component.scss'],\n})\nexport class FooterComponent {}\n\n    \n\n\n    \n                \n                    ./footer.component.scss\n                \n                @use 'settings';\n@use 'tools';\n\n:host {\n  display: flex;\n  flex-direction: column;\n  flex-grow: 0;\n  margin-bottom: settings.$spacing-lg;\n\n  @include tools.media-tiny--portrait {\n    margin-bottom: settings.$spacing-base;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleAnalyticsService.html":{"url":"injectables/GoogleAnalyticsService.html","title":"injectable - GoogleAnalyticsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleAnalyticsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/tracking/google-analytics.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                category\n                            \n                            \n                                    Readonly\n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isGoogleAnalytics\n                            \n                            \n                                    Private\n                                isGoogleTagManager\n                            \n                            \n                                sdkInitialized\n                            \n                            \n                                snapViewClosed\n                            \n                            \n                                snapViewOpened\n                            \n                            \n                                snapViewSnap\n                            \n                            \n                                snapViewSnapFailed\n                            \n                            \n                                snapViewSnapNegative\n                            \n                            \n                                snapViewSnapResult\n                            \n                            \n                                    Private\n                                trackEvent\n                            \n                            \n                                    Private\n                                trackGoogleAnalyticsEvent\n                            \n                            \n                                    Private\n                                trackGoogleTagManagerEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isGoogleAnalytics\n                        \n                    \n                \n            \n            \n                \n                    \n                    isGoogleAnalytics()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:45\n                \n            \n\n\n            \n                \n                    Checks if GoogleAnalytics is globally available\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isGoogleTagManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    isGoogleTagManager()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:67\n                \n            \n\n\n            \n                \n                    Checks if GoogleTagManager is globally available\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sdkInitialized\n                        \n                    \n                \n            \n            \n                \nsdkInitialized()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snapViewClosed\n                        \n                    \n                \n            \n            \n                \nsnapViewClosed()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snapViewOpened\n                        \n                    \n                \n            \n            \n                \nsnapViewOpened()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snapViewSnap\n                        \n                    \n                \n            \n            \n                \nsnapViewSnap()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snapViewSnapFailed\n                        \n                    \n                \n            \n            \n                \nsnapViewSnapFailed(duration: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snapViewSnapNegative\n                        \n                    \n                \n            \n            \n                \nsnapViewSnapNegative(duration: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snapViewSnapResult\n                        \n                    \n                \n            \n            \n                \nsnapViewSnapResult(duration: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        trackEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    trackEvent(action: string, value?: number | string)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:22\n                \n            \n\n\n            \n                \n                    Tracks analytics based on which analytics service is available.\nFallback to the LoggerService if neither GoogleAnalytics nor GoogleTagManager is available-\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the action of the event to track\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        : the value of the event to track\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        trackGoogleAnalyticsEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    trackGoogleAnalyticsEvent(action: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:54\n                \n            \n\n\n            \n                \n                    Track Event using GoogleAnalytics\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        trackGoogleTagManagerEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    trackGoogleTagManagerEvent(action: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:76\n                \n            \n\n\n            \n                \n                    Track Event using GoogleTagManager\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SnapscreenSDK'\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'JS/1.0.0'\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LoggerService } from '../logger/logger.service';\n\ndeclare const gtag: Function;\ndeclare const ga: Function;\n\n@Injectable({ providedIn: 'root' })\nexport class GoogleAnalyticsService {\n  readonly category = 'SnapscreenSDK';\n  readonly label = 'JS/1.0.0';\n\n  constructor(private readonly logger: LoggerService) {}\n\n  /**\n   * Tracks analytics based on which analytics service is available.\n   * Fallback to the LoggerService if neither GoogleAnalytics nor GoogleTagManager is available-\n   * @param action: the action of the event to track\n   * @param value: the value of the event to track\n   * @private\n   */\n  private trackEvent(action: string, value?: number | string) {\n    try {\n      if (this.isGoogleAnalytics()) {\n        this.trackGoogleAnalyticsEvent(action);\n      } else if (this.isGoogleTagManager()) {\n        this.trackGoogleTagManagerEvent(action);\n      } else {\n        this.logger.info('Tracked event', {\n          eventCategory: this.category,\n          eventAction: action,\n          eventLabel: this.label,\n          eventValue: value,\n        });\n      }\n    } catch (error) {\n      this.logger.error('Failed to track event', error);\n    }\n  }\n\n  /**\n   * Checks if GoogleAnalytics is globally available\n   * @private\n   */\n  private isGoogleAnalytics(): boolean {\n    return typeof ga === 'function';\n  }\n\n  /**\n   * Track Event using GoogleAnalytics\n   * @param action\n   * @private\n   */\n  private trackGoogleAnalyticsEvent(action: string): void {\n    ga('send', {\n      hitType: 'pageview',\n      transport: 'beacon',\n      page: `/${this.category}/${this.label}/${action}`,\n      title: `${this.category}: ${action}`,\n    });\n  }\n\n  /**\n   * Checks if GoogleTagManager is globally available\n   * @private\n   */\n  private isGoogleTagManager(): boolean {\n    return typeof gtag === 'function';\n  }\n\n  /**\n   * Track Event using GoogleTagManager\n   * @param action\n   * @private\n   */\n  private trackGoogleTagManagerEvent(action: string): void {\n    gtag('event', 'page_view', {\n      page_path: `/${this.category}/${this.label}/${action}`,\n      page_title: `${this.category}: ${action}`,\n    });\n  }\n\n  sdkInitialized() {\n    this.trackEvent('SnapSdkInit');\n  }\n\n  snapViewOpened() {\n    this.trackEvent('SnapViewOpen');\n  }\n\n  snapViewSnap() {\n    this.trackEvent('SnapViewSnap');\n  }\n\n  snapViewSnapResult(duration: number) {\n    this.trackEvent('SnapViewSnapResult', duration);\n  }\n\n  snapViewSnapFailed(duration: number) {\n    this.trackEvent('SnapViewSnapFail', duration);\n  }\n\n  snapViewSnapNegative(duration: number) {\n    this.trackEvent('SnapViewSnapNegative', duration);\n  }\n\n  snapViewClosed() {\n    this.trackEvent('SnapViewClose');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelSnap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationConfigService: ApplicationConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/app/header/header.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelSnap\n                        \n                    \n                \n            \n            \n                \ncancelSnap()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/header/header.component.ts:15\n                \n            \n\n\n            \n                \n                    Emits the closeEvent on the ApplicationConfigService to signalize that the app should be closed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ApplicationConfigService } from '../../services/config/application-config.service';\n\n@Component({\n  selector: 'snapodds-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent {\n  constructor(private readonly applicationConfigService: ApplicationConfigService) {}\n\n  /**\n   * Emits the closeEvent on the ApplicationConfigService to signalize that the app should be closed.\n   */\n  cancelSnap(): void {\n    this.applicationConfigService.emitCloseEvent();\n  }\n}\n\n    \n\n    \n        \n  {{ 'Snapodds_Action_Cancel' | translate }}\n\n\n  \n\n\n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @use 'settings';\n@use 'tools';\n\n:host {\n  align-items: baseline;\n  border-bottom: 1px solid settings.$color-accent;\n  display: flex;\n  padding: settings.$spacing-base;\n\n  @media (orientation: portrait) {\n    padding-top: settings.$spacing-base * 3;\n  }\n\n  @include tools.media-small--portrait {\n    padding-top: settings.$spacing-base * 2;\n  }\n\n  @include tools.media-tiny--portrait {\n    padding: settings.$spacing-base settings.$spacing-sm settings.$spacing-sm;\n  }\n\n  .c-header {\n    &--left {\n      flex: 1;\n      text-align: left;\n    }\n\n    &--title {\n      flex: 1;\n      font-size: settings.$font-xl;\n      text-align: center;\n      white-space: nowrap;\n    }\n\n    &--right {\n      flex: 1;\n      text-align: right;\n    }\n\n    &--cancel-button {\n      @include tools.button-reset;\n      font-size: settings.$font-base;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'Snapodds_Action_Cancel\\' | translate }}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HelpComponent.html":{"url":"components/HelpComponent.html","title":"component - HelpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HelpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/help/help.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-help\n            \n\n            \n                styleUrls\n                ./help.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./help.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showSnapPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(appStateStore: AppStateStore)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/app/help/help.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appStateStore\n                                                  \n                                                        \n                                                                        AppStateStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        showSnapPage\n                        \n                    \n                \n            \n            \n                \nshowSnapPage()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/help/help.component.ts:15\n                \n            \n\n\n            \n                \n                    Navigate to the Snap Page by setting the corresponding AppState\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AppState, AppStateStore } from '../../states/app-state.store';\n\n@Component({\n  selector: 'snapodds-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.scss'],\n})\nexport class HelpComponent {\n  constructor(private readonly appStateStore: AppStateStore) {}\n\n  /**\n   * Navigate to the Snap Page by setting the corresponding AppState\n   */\n  showSnapPage(): void {\n    this.appStateStore.dispatch(AppState.SNAP_READY);\n  }\n}\n\n    \n\n    \n        \n  {{ 'Snapodds_Title_Help' | translate }}\n  \n    \n      {{ 'Snapodds_Title_Snap_TV' | translate }}\n    \n  \n\n\n\n  \n    Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore\n    magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd\n    gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing\n    elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero\n    eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum\n    dolor sit amet.\n  \n\n\n  \n    {{ 'Snapodds_Action_Close_Help' | translate }}\n  \n\n\n    \n\n    \n                \n                    ./help.component.scss\n                \n                @use 'tools';\n@use 'settings';\n\n$box--width: 4rem;\n\n:host {\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  snapodds-content {\n    padding: settings.$spacing-base;\n  }\n\n  snapodds-footer {\n    padding: settings.$spacing-base settings.$spacing-base 0;\n  }\n\n  button {\n    @include tools.button-reset();\n    font-size: settings.$font-base;\n  }\n\n  .c-help {\n    &__close-button {\n      background-color: settings.$color-primary;\n      color: settings.$color-text-focus;\n      font-size: settings.$font-lg;\n      font-weight: 500;\n      padding: settings.$spacing-base settings.$spacing-lg;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'Snapodds_Title_Help\\' | translate }}            {{ \\'Snapodds_Title_Snap_TV\\' | translate }}            Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore    magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd    gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing    elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero    eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum    dolor sit amet.        {{ \\'Snapodds_Action_Close_Help\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HelpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImageManipulationService.html":{"url":"injectables/ImageManipulationService.html","title":"injectable - ImageManipulationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ImageManipulationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createImageFromCanvas\n                            \n                            \n                                    Private\n                                crop\n                            \n                            \n                                cropAndResizeImage\n                            \n                            \n                                    Private\n                                downscale\n                            \n                            \n                                    Private\n                                shouldCrop\n                            \n                            \n                                    Private\n                                shouldDownscale\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, document: Document)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createImageFromCanvas\n                        \n                    \n                \n            \n            \n                \n                    \n                    createImageFromCanvas(canvas: HTMLCanvasElement, mimeType: string, quality: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts:105\n                \n            \n\n\n            \n                \n                    Converts an canvas element into an image blob with additional image metadata\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        : the canvas element where the image is rendered\n\n                                    \n                                \n                                \n                                    mimeType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'image/jpeg'\n                                    \n\n                                    \n                                        : the mime type of the resulting image\n\n                                    \n                                \n                                \n                                    quality\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0.9\n                                    \n\n                                    \n                                        : the jpeg compression quality\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        crop\n                        \n                    \n                \n            \n            \n                \n                    \n                    crop(source: HTMLVideoElement, viewFinder: HTMLElement, scaleFactor: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts:70\n                \n            \n\n\n            \n                \n                    Crops the part of the image which is visible beneath the viewfinder\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            HTMLVideoElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the webcams video stream\n\n                                    \n                                \n                                \n                                    viewFinder\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the viewfinder from which the image should be cropped\n\n                                    \n                                \n                                \n                                    scaleFactor\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the factor the user has zoomed into the image\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cropAndResizeImage\n                        \n                    \n                \n            \n            \n                \ncropAndResizeImage(source: HTMLVideoElement, viewFinder: HTMLElement, scaleFactor: number, maxDimension: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts:19\n                \n            \n\n\n            \n                \n                    Creates an image from the source based on which part is visible in the viewfinder.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            HTMLVideoElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the webcams video stream\n\n                                    \n                                \n                                \n                                    viewFinder\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the viewfinder from which the image should be cropped\n\n                                    \n                                \n                                \n                                    scaleFactor\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the factor the user has zoomed into the image\n\n                                    \n                                \n                                \n                                    maxDimension\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the max dimension of the resulting image\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        downscale\n                        \n                    \n                \n            \n            \n                \n                    \n                    downscale(sourceWidth: number, sourceHeight: number, maxDimension: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts:155\n                \n            \n\n\n            \n                \n                    Calculates the resized width and height of an image\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceWidth\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sourceHeight\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    maxDimension\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { preferredWidth: number; preferredHeight: number; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        shouldCrop\n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldCrop(scaleFactor: number, source: HTMLVideoElement, viewFinder: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts:59\n                \n            \n\n\n            \n                \n                    Determines if parts of the image should be cropped.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    scaleFactor\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the factor the user has zoomed into the image\n\n                                    \n                                \n                                \n                                    source\n                                    \n                                            HTMLVideoElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the webcams video stream\n\n                                    \n                                \n                                \n                                    viewFinder\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the viewfinder from which the image should be cropped\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        shouldDownscale\n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldDownscale(sourceWidth: number, sourceHeight: number, maxDimension: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts:144\n                \n            \n\n\n            \n                \n                    Determines if an image needs to be resized as it is larger than the max allowed dimension\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceWidth\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sourceHeight\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    maxDimension\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { LoggerService } from '../logger/logger.service';\nimport { DOCUMENT } from '../tokens/document-token';\nimport { ManipulatedImage } from './manipulated-image';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ImageManipulationService {\n  constructor(private readonly logger: LoggerService, @Inject(DOCUMENT) private readonly document: Document) {}\n\n  /**\n   * Creates an image from the `source` based on which part is visible in the viewfinder.\n   * @param source: the webcams video stream\n   * @param viewFinder: the viewfinder from which the image should be cropped\n   * @param scaleFactor: the factor the user has zoomed into the image\n   * @param maxDimension: the max dimension of the resulting image\n   */\n  cropAndResizeImage(\n    source: HTMLVideoElement,\n    viewFinder: HTMLElement,\n    scaleFactor: number,\n    maxDimension: number\n  ): Promise {\n    let sx = 0;\n    let sy = 0;\n    let sourceWidth = source.videoWidth;\n    let sourceHeight = source.videoHeight;\n\n    if (this.shouldCrop(scaleFactor, source, viewFinder)) {\n      ({ sx, sy, sourceWidth, sourceHeight } = this.crop(source, viewFinder, scaleFactor));\n    }\n\n    let preferredWidth = sourceWidth;\n    let preferredHeight = sourceHeight;\n\n    if (this.shouldDownscale(preferredWidth, preferredHeight, maxDimension)) {\n      ({ preferredWidth, preferredHeight } = this.downscale(preferredWidth, preferredHeight, maxDimension));\n    }\n\n    const canvas = this.document.createElement('canvas');\n    canvas.width = preferredWidth;\n    canvas.height = preferredHeight;\n\n    const renderingContext = canvas.getContext('2d');\n    renderingContext?.drawImage(source, sx, sy, sourceWidth, sourceHeight, 0, 0, preferredWidth, preferredHeight);\n\n    return this.createImageFromCanvas(canvas);\n  }\n\n  /**\n   * Determines if parts of the image should be cropped.\n   *\n   * @param scaleFactor: the factor the user has zoomed into the image\n   * @param source: the webcams video stream\n   * @param viewFinder: the viewfinder from which the image should be cropped\n   * @private\n   */\n  private shouldCrop(scaleFactor: number, source: HTMLVideoElement, viewFinder: HTMLElement) {\n    return scaleFactor > 1 || source !== viewFinder;\n  }\n\n  /**\n   * Crops the part of the image which is visible beneath the viewfinder\n   * @param source: the webcams video stream\n   * @param viewFinder: the viewfinder from which the image should be cropped\n   * @param scaleFactor: the factor the user has zoomed into the image\n   * @private\n   */\n  private crop(\n    source: HTMLVideoElement,\n    viewFinder: HTMLElement,\n    scaleFactor: number\n  ): { sx: number; sy: number; sourceWidth: number; sourceHeight: number } {\n    const videoScale = Math.max(source.videoWidth / source.clientWidth, source.videoHeight / source.clientHeight);\n\n    let sourceWidth = Math.floor((viewFinder.clientWidth * videoScale) / scaleFactor);\n    let sourceHeight = Math.floor((viewFinder.clientHeight * videoScale) / scaleFactor);\n\n    let sx = Math.floor((source.videoWidth - sourceWidth) / 2);\n    let sy = Math.floor((source.videoHeight - sourceHeight) / 2);\n\n    if (sx  {\n    return new Promise((resolve, reject) => {\n      try {\n        canvas.toBlob(\n          (blob) => {\n            if (blob) {\n              resolve({\n                blob,\n                mimeType,\n                width: canvas.width,\n                height: canvas.height,\n              });\n            } else {\n              const errorMessage = 'Canvas returned empty blob';\n              this.logger.error('Image manipulation failed', errorMessage);\n              reject(errorMessage);\n            }\n          },\n          mimeType,\n          quality\n        );\n      } catch (error) {\n        this.logger.error('Image manipulation failed', error);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Determines if an image needs to be resized as it is larger than the max allowed dimension\n   * @param sourceWidth\n   * @param sourceHeight\n   * @param maxDimension\n   * @private\n   */\n  private shouldDownscale(sourceWidth: number, sourceHeight: number, maxDimension: number) {\n    return (sourceWidth > sourceHeight && sourceWidth > maxDimension) || sourceHeight > maxDimension;\n  }\n\n  /**\n   * Calculates the resized width and height of an image\n   * @param sourceWidth\n   * @param sourceHeight\n   * @param maxDimension\n   * @private\n   */\n  private downscale(sourceWidth: number, sourceHeight: number, maxDimension: number) {\n    let preferredWidth = sourceWidth;\n    let preferredHeight = sourceHeight;\n\n    if (preferredWidth > preferredHeight && preferredWidth > maxDimension) {\n      preferredHeight = Math.floor((maxDimension * preferredHeight) / preferredWidth);\n      preferredWidth = maxDimension;\n    } else if (preferredHeight > maxDimension) {\n      preferredWidth = Math.floor((maxDimension * preferredWidth) / preferredHeight);\n      preferredHeight = maxDimension;\n    }\n\n    return { preferredWidth, preferredHeight };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LineOdds.html":{"url":"interfaces/LineOdds.html","title":"interface - LineOdds","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LineOdds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/models/line-odds.ts\n        \n\n\n            \n                Description\n            \n            \n                Data structure used for rendering the lineOdds\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            competitors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            players\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sportsBooks\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        competitors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        competitors:         Competitor[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Competitor[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of competitors\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        players\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        players:         Player[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Player[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of players\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sportsBooks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sportsBooks:     SportsBook[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SportsBook[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of sportBooks\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Competitor, Player } from '@response/typings';\nimport { SportsBook } from './sports-book';\n\n/**\n * Data structure used for rendering the lineOdds\n */\nexport interface LineOdds {\n  /**\n   * List of competitors\n   */\n  competitors: Competitor[];\n  /**\n   * List of players\n   */\n  players?: Player[];\n\n  /**\n   * List of sportBooks\n   */\n  sportsBooks?: SportsBook[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Link.html":{"url":"interfaces/Link.html","title":"interface - Link","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Link\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/link.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            href\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            templated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        href\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        href:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        templated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        templated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Link {\n  href: string;\n  templated?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/logger/logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                    Private\n                                isAboveLogLevel\n                            \n                            \n                                    Private\n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationConfigService: ApplicationConfigService, console: Console)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/logger/logger.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        console\n                                                  \n                                                        \n                                                                    Console\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(...data: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/logger/logger.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(...data: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/logger/logger.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(...data: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/logger/logger.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isAboveLogLevel\n                        \n                    \n                \n            \n            \n                \n                    \n                    isAboveLogLevel(logLevel: LogLevel)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/logger/logger.service.ts:66\n                \n            \n\n\n            \n                \n                    Determines if one logLevel's severity is higher than the one configured in the ApplicationConfig\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logLevel\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        log\n                        \n                    \n                \n            \n            \n                \n                    \n                    log(logLevel: LogLevel, ...data: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/logger/logger.service.ts:41\n                \n            \n\n\n            \n                \n                    Based on the configured logLevel only log levels with the same or higher severity will be logged.\nAll logs will be forwarded to the loggerEventCallback\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logLevel\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(...data: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/logger/logger.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { ApplicationConfigService } from '../config/application-config.service';\nimport { CONSOLE } from '../tokens/console-token';\nimport { LogLevel } from './log-level';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoggerService {\n  constructor(\n    private readonly applicationConfigService: ApplicationConfigService,\n    @Inject(CONSOLE) private readonly console: Console\n  ) {}\n\n  debug(...data: unknown[]): void {\n    this.log(LogLevel.DEBUG, ...data);\n  }\n\n  error(...data: unknown[]): void {\n    this.log(LogLevel.ERROR, ...data);\n  }\n\n  warn(...data: unknown[]): void {\n    this.log(LogLevel.WARN, ...data);\n  }\n\n  info(...data: unknown[]): void {\n    this.log(LogLevel.INFO, ...data);\n  }\n\n  /**\n   * Based on the configured logLevel only log levels with the same or higher severity will be logged.\n   * All logs will be forwarded to the loggerEventCallback\n   *\n   * @param logLevel\n   * @param data\n   * @private\n   */\n  private log(logLevel: LogLevel, ...data: unknown[]): void {\n    if (this.isAboveLogLevel(logLevel)) {\n      switch (logLevel) {\n        case LogLevel.DEBUG:\n          this.console.debug(...data);\n          break;\n        case LogLevel.INFO:\n          this.console.info(...data);\n          break;\n        case LogLevel.WARN:\n          this.console.warn(...data);\n          break;\n        case LogLevel.ERROR:\n          this.console.error(...data);\n          break;\n      }\n    }\n    this.applicationConfigService.emitLoggerEvent(logLevel, data);\n  }\n\n  /**\n   * Determines if one logLevel's severity is higher than the one configured in the ApplicationConfig\n   * @param logLevel\n   * @private\n   */\n  private isAboveLogLevel(logLevel: LogLevel): boolean {\n    return logLevel >= this.applicationConfigService.getLogLevel();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaDeviceStateStore.html":{"url":"injectables/MediaDeviceStateStore.html","title":"injectable - MediaDeviceStateStore","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaDeviceStateStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/states/media-device-state.store.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _state\n                            \n                            \n                                    Private\n                                    Readonly\n                                state$\n                            \n                            \n                                    Readonly\n                                webcamIsReady$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dispatch\n                            \n                            \n                                getState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dispatch\n                        \n                    \n                \n            \n            \n                \ndispatch(state: MediaDeviceState)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/states/media-device-state.store.ts:38\n                \n            \n\n\n            \n                \n                    Trigger an MediaDeviceState change\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                MediaDeviceState\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getState\n                        \n                    \n                \n            \n            \n                \ngetState()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/states/media-device-state.store.ts:30\n                \n            \n\n\n            \n                \n                    Listen to changes on the MediaDeviceState\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/states/media-device-state.store.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._state.asObservable()\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/states/media-device-state.store.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        webcamIsReady$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.getState().pipe(\n    filter((state) => state === MediaDeviceState.DEVICE_CAMERA_READY),\n    mapTo(true)\n  )\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/states/media-device-state.store.ts:22\n                        \n                    \n\n            \n                \n                    Emits when a webcam is ready for interaction\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { filter, mapTo, Observable, ReplaySubject } from 'rxjs';\n\n/**\n * The various MediaDeviceState which are used rendering user feedback\n */\nexport enum MediaDeviceState {\n  DEVICE_INIT = 'DEVICE_INIT',\n  DEVICE_CAMERA_READY = 'DEVICE_CAMERA_READY',\n  DEVICE_NO_PERMISSION = 'DEVICE_NO_PERMISSION',\n  DEVICE_NO_CAMERA = 'DEVICE_NO_CAMERA',\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MediaDeviceStateStore {\n  private readonly _state = new ReplaySubject(1);\n  private readonly state$: Observable = this._state.asObservable();\n\n  /**\n   * Emits when a webcam is ready for interaction\n   */\n  readonly webcamIsReady$: Observable = this.getState().pipe(\n    filter((state) => state === MediaDeviceState.DEVICE_CAMERA_READY),\n    mapTo(true)\n  );\n\n  /**\n   * Listen to changes on the MediaDeviceState\n   */\n  getState(): Observable {\n    return this.state$;\n  }\n\n  /**\n   * Trigger an MediaDeviceState change\n   * @param state\n   */\n  dispatch(state: MediaDeviceState): void {\n    this._state.next(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/notification/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hasVibrationApi\n                            \n                            \n                                notify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(navigator: Navigator, applicationConfigService: ApplicationConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/notification/notification.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigator\n                                                  \n                                                        \n                                                                        Navigator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hasVibrationApi\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasVibrationApi()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/notification/notification.service.ts:27\n                \n            \n\n\n            \n                \n                    Determines if the browserApi supports vibration\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notify\n                        \n                    \n                \n            \n            \n                \nnotify()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/notification/notification.service.ts:17\n                \n            \n\n\n            \n                \n                    Lets the device vibrate.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { ApplicationConfigService } from '../config/application-config.service';\nimport { NAVIGATOR } from '../tokens/navigator-token';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotificationService {\n  constructor(\n    @Inject(NAVIGATOR) private readonly navigator: Navigator,\n    private readonly applicationConfigService: ApplicationConfigService\n  ) {}\n\n  /**\n   * Lets the device vibrate.\n   */\n  notify(): void {\n    if (this.applicationConfigService.isVibrateEnabled() && this.hasVibrationApi()) {\n      this.navigator.vibrate(200);\n    }\n  }\n\n  /**\n   * Determines if the browserApi supports vibration\n   * @private\n   */\n  private hasVibrationApi(): boolean {\n    return typeof this.navigator?.vibrate === 'function';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OddsComponent.html":{"url":"components/OddsComponent.html","title":"component - OddsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OddsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/odds/odds.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-odds\n            \n\n            \n                styleUrls\n                ./odds.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./odds.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lineOdds\n                            \n                            \n                                loading\n                            \n                            \n                                noResults\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadLineOdds\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Private\n                                onLineOddsLoaded\n                            \n                            \n                                    Private\n                                onLineOddsLoadFailed\n                            \n                            \n                                openOutcomeRedirectUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tvSearchResultEntry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeOddsView\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(window: Window, oddsService: OddsService)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/app/odds/odds.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        window\n                                                  \n                                                        \n                                                                    Window\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        oddsService\n                                                  \n                                                        \n                                                                        OddsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        tvSearchResultEntry\n                    \n                \n                \n                    \n                        Type :     TvSearchResultEntry | null\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/odds/odds.component.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeOddsView\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/odds/odds.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadLineOdds\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLineOdds(sportEventId: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/odds/odds.component.ts:54\n                \n            \n\n\n            \n                \n                    Loads the lineOdds for a given sportEvent.\nIf sportBooks are found, then lineOdds will be assigned.\nif no sportBooks are found or if the call fails, an error message will be shown.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sportEventId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : The identifier of the sportEvent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/odds/odds.component.ts:40\n                \n            \n\n\n            \n                \n                    Loads the lineOdds when the tvSearchResultEntry has been changed.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : SimpleChanges\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onLineOddsLoaded\n                        \n                    \n                \n            \n            \n                \n                    \n                    onLineOddsLoaded(lineOdds: LineOdds)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/odds/odds.component.ts:76\n                \n            \n\n\n            \n                \n                    Callback when loading of lineOdds was successful\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lineOdds\n                                    \n                                                LineOdds\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : The lineOdds to assign to the template\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onLineOddsLoadFailed\n                        \n                    \n                \n            \n            \n                \n                    \n                    onLineOddsLoadFailed()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/odds/odds.component.ts:86\n                \n            \n\n\n            \n                \n                    Callback when loading of lineOdds failed.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openOutcomeRedirectUrl\n                        \n                    \n                \n            \n            \n                \nopenOutcomeRedirectUrl($event: MouseEvent, redirectUrl?: string | null)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/odds/odds.component.ts:28\n                \n            \n\n\n            \n                \n                    Opens the given URL in a new browser tab.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : MouseEvent\n\n                                    \n                                \n                                \n                                    redirectUrl\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        : The url that should be opened in a new tab\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lineOdds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LineOdds | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/odds/odds.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/odds/odds.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noResults\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/odds/odds.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Inject, Input, OnChanges, Output, SimpleChange } from '@angular/core';\nimport { TvSearchResultEntry } from '@response/typings';\nimport { LineOdds } from '../../models/line-odds';\nimport { OddsService } from '../../services/api/odds.service';\nimport { WINDOW } from '../../services/tokens/window-token';\n\n@Component({\n  selector: 'snapodds-odds',\n  templateUrl: './odds.component.html',\n  styleUrls: ['./odds.component.scss'],\n})\nexport class OddsComponent implements OnChanges {\n  lineOdds: LineOdds | null = null;\n  loading = false;\n  noResults = false;\n\n  @Input() tvSearchResultEntry?: TvSearchResultEntry | null;\n  @Output() closeOddsView: EventEmitter = new EventEmitter();\n\n  constructor(@Inject(WINDOW) private readonly window: Window, private readonly oddsService: OddsService) {}\n\n  /**\n   * Opens the given URL in a new browser tab.\n   *\n   * @param $event: MouseEvent\n   * @param redirectUrl: The url that should be opened in a new tab\n   */\n  openOutcomeRedirectUrl($event: MouseEvent, redirectUrl?: string | null): void {\n    if (redirectUrl) {\n      $event.preventDefault();\n      this.window.open(redirectUrl, '_blank');\n    }\n  }\n\n  /**\n   * Loads the lineOdds when the tvSearchResultEntry has been changed.\n   *\n   * @param changes: SimpleChanges\n   */\n  ngOnChanges(changes: { tvSearchResultEntry: SimpleChange }): void {\n    if (changes.tvSearchResultEntry.currentValue) {\n      this.loadLineOdds(changes.tvSearchResultEntry.currentValue.sportEvent.id);\n    }\n  }\n\n  /**\n   * Loads the lineOdds for a given sportEvent.\n   * If sportBooks are found, then lineOdds will be assigned.\n   * if no sportBooks are found or if the call fails, an error message will be shown.\n   *\n   * @param sportEventId: The identifier of the sportEvent\n   * @private\n   */\n  private loadLineOdds(sportEventId: number): void {\n    this.loading = true;\n    this.noResults = false;\n\n    this.oddsService.gameLineOddsBySportEventId(sportEventId).subscribe({\n      next: (lineOdds) => {\n        if (lineOdds.sportsBooks == undefined || lineOdds.sportsBooks.length === 0) {\n          this.onLineOddsLoadFailed();\n        } else {\n          this.onLineOddsLoaded(lineOdds);\n        }\n      },\n      error: () => this.onLineOddsLoadFailed(),\n    });\n  }\n\n  /**\n   * Callback when loading of lineOdds was successful\n   *\n   * @param lineOdds: The lineOdds to assign to the template\n   * @private\n   */\n  private onLineOddsLoaded(lineOdds: LineOdds): void {\n    this.lineOdds = lineOdds;\n    this.loading = false;\n  }\n\n  /**\n   * Callback when loading of lineOdds failed.\n   *\n   * @private\n   */\n  private onLineOddsLoadFailed(): void {\n    this.lineOdds = null;\n    this.noResults = true;\n    this.loading = false;\n  }\n}\n\n    \n\n    \n        \n  {{ 'Snapodds_Title_Odds' | translate }}\n  \n    \n      {{ 'Snapodds_Title_Snap_TV' | translate }}\n    \n  \n\n\n\n  \n    {{ result.sportEvent.tournament }}\n    {{ result.tvChannel.name }} since {{ result.sportEvent.startTime | date: 'hh:mm a' }}\n  \n\n  \n    \n      {{ competitor.name }}\n      \n    \n  \n\n  \n    \n    {{ 'Snapodds_Lines_Loading' | translate }}\n  \n\n  \n    {{ 'Snapodds_Lines_No_Results' | translate }}\n  \n\n  \n    \n      \n        {{ sportBook.name }}\n\n        \n          Spread\n          Money\n          Total\n        \n      \n\n      \n        \n          {{ lineOdds.competitors[i].name }}\n\n          \n            \n              {{ line.spread }}\n              {{ line.spreadOdds }}\n            \n            \n              \n              {{ line.moneyline }}\n            \n            \n              \n                O\n                U\n                {{ line.overUnder }}\n              \n              {{ line.overUnderOdds }}\n            \n          \n        \n        \n          \n\n          \n            \n            \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./odds.component.scss\n                \n                @use 'tools';\n@use 'settings';\n\n$box--width: 4rem;\n\n:host {\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  button {\n    @include tools.button-reset();\n    font-size: settings.$font-base;\n  }\n\n  snapodds-content {\n    background-color: settings.$color-accent;\n    justify-content: flex-start;\n  }\n\n  .c-feedback {\n    align-items: center;\n    background-color: settings.$color-background;\n    display: flex;\n    font-size: settings.$font-sm;\n    justify-content: center;\n    padding: settings.$spacing-base;\n\n    &__spinner {\n      line-height: 1;\n      margin-right: settings.$spacing-sm;\n    }\n  }\n\n  .c-sport-event {\n    background-color: settings.$color-background;\n    display: flex;\n    font-size: settings.$font-sm;\n    font-weight: 400;\n    justify-content: space-between;\n    margin: 0;\n    padding: settings.$spacing-base;\n\n    @include tools.media-tiny--portrait {\n      padding: settings.$spacing-sm;\n    }\n\n    &__tournament {\n      font-weight: 700;\n    }\n  }\n\n  .c-competitors {\n    background-color: settings.$color-primary;\n    box-sizing: border-box;\n    color: settings.$color-text-focus;\n    display: flex;\n    flex-direction: column;\n    font-size: settings.$font-base;\n    padding: settings.$spacing-base;\n    text-align: center;\n\n    &__separator {\n      border-bottom: 1px solid rgba(255, 255, 255, 0.4);\n      display: inline-block;\n      margin: 0.5rem 0;\n    }\n  }\n\n  .c-game {\n    border-bottom: 2px solid settings.$color-accent;\n    display: flex;\n    flex-direction: column;\n    padding: settings.$spacing-sm settings.$spacing-base;\n\n    @include tools.media-tiny--portrait {\n      padding: settings.$spacing-sm;\n    }\n  }\n\n  .c-game-container {\n    background-color: settings.$color-background;\n  }\n\n  .c-game-header {\n    display: flex;\n    justify-content: space-between;\n\n    &__sportbook {\n      font-size: settings.$font-base;\n      font-weight: 700;\n\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    &__lines {\n      align-items: flex-end;\n      display: flex;\n    }\n\n    &__line {\n      box-sizing: border-box;\n      display: flex;\n\n      font-size: settings.$font-xs;\n      font-weight: 400;\n      justify-content: flex-end;\n\n      margin: 0.2rem;\n      width: $box--width;\n    }\n  }\n\n  .c-game-line {\n    color: settings.$color-text;\n    display: flex;\n    justify-content: space-between;\n    text-decoration: none;\n\n    &__competitor {\n      align-items: center;\n      display: flex;\n\n      font-size: settings.$font-sm;\n      font-weight: 700;\n      margin-right: 0.6rem;\n\n      &--separator {\n        border-bottom: 1px solid settings.$color-accent;\n        flex: 1;\n        margin-bottom: 0.4rem;\n        margin-top: 0.4rem;\n      }\n    }\n\n    &__boxes {\n      display: flex;\n    }\n\n    &__box {\n      align-items: flex-end;\n\n      background-color: settings.$color-accent;\n      box-sizing: border-box;\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n      margin: 0.2rem;\n      padding: 0.3rem;\n      width: $box--width;\n\n      &--clickable {\n        cursor: pointer;\n      }\n\n      &--hidden {\n        visibility: hidden;\n      }\n\n      &--separator {\n        background-color: transparent;\n        border-bottom: 1px solid settings.$color-accent;\n        margin: 0.4rem 0.2rem;\n        padding: 0 0.3rem;\n      }\n    }\n\n    &__target {\n      font-size: settings.$font-xs;\n      font-weight: 400;\n      min-height: 0.9rem;\n    }\n\n    &__odds {\n      font-size: settings.$font-base;\n      font-weight: 700;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'Snapodds_Title_Odds\\' | translate }}            {{ \\'Snapodds_Title_Snap_TV\\' | translate }}            {{ result.sportEvent.tournament }}    {{ result.tvChannel.name }} since {{ result.sportEvent.startTime | date: \\'hh:mm a\\' }}              {{ competitor.name }}                      {{ \\'Snapodds_Lines_Loading\\' | translate }}        {{ \\'Snapodds_Lines_No_Results\\' | translate }}                      {{ sportBook.name }}                  Spread          Money          Total                                      {{ lineOdds.competitors[i].name }}                                    {{ line.spread }}              {{ line.spreadOdds }}                                                    {{ line.moneyline }}                                                      O                U                {{ line.overUnder }}                            {{ line.overUnderOdds }}                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OddsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OddsOffer.html":{"url":"interfaces/OddsOffer.html","title":"interface - OddsOffer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OddsOffer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/odds/odds-offer.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a single odds offer.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _links\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            outcomes\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _links:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label of the offer.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outcomes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outcomes:     OddsOfferOutcome[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OddsOfferOutcome[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The possible outcomes of the offer to bet on.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"SPREAD\" | \"MONEYLINE\" | \"OVER_UNDER\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"SPREAD\" | \"MONEYLINE\" | \"OVER_UNDER\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of the offer.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { OddsOfferOutcome } from './odds-offer-outcome';\nimport { Link } from '../link';\n\n/**\n * Represents a single odds offer.\n */\nexport interface OddsOffer {\n  /**\n   * The type of the offer.\n   */\n  type: 'SPREAD' | 'MONEYLINE' | 'OVER_UNDER';\n\n  /**\n   * The label of the offer.\n   */\n  label?: string;\n\n  /**\n   * The possible outcomes of the offer to bet on.\n   */\n  outcomes: OddsOfferOutcome[];\n\n  _links?: {\n    redirect?: Link;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OddsOfferOutcome.html":{"url":"interfaces/OddsOfferOutcome.html","title":"interface - OddsOfferOutcome","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OddsOfferOutcome\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/odds/odds-offer-outcome.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an odds for the outcome of the bet.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _links\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            competitorId\n                                        \n                                \n                                \n                                        \n                                            odds\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            playerId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _links:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        competitorId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        competitorId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The id of the competitor to bet on.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        odds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        odds:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The odds for the given type of the outcome.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playerId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The id of the player to bet on.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The target value for spread or over/under bets.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"WIN\" | \"OVER\" | \"UNDER\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"WIN\" | \"OVER\" | \"UNDER\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of the outcome.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Link } from '../link';\n\n/**\n * Represents an odds for the outcome of the bet.\n */\nexport interface OddsOfferOutcome {\n  /**\n   * The type of the outcome.\n   */\n  type: 'WIN' | 'OVER' | 'UNDER';\n\n  /**\n   * The target value for spread or over/under bets.\n   */\n  target?: number | null;\n\n  /**\n   * The odds for the given type of the outcome.\n   */\n  odds: number;\n\n  /**\n   * The id of the competitor to bet on.\n   */\n  competitorId?: number;\n\n  /**\n   * The id of the player to bet on.\n   */\n  playerId?: number;\n\n  _links?: {\n    redirect?: Link;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OddsResponse.html":{"url":"interfaces/OddsResponse.html","title":"interface - OddsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OddsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/odds/odds-response.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an odds available for the corresponding sport event.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _links\n                                        \n                                \n                                \n                                        \n                                            competitors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            players\n                                        \n                                \n                                \n                                        \n                                            sportsBooks\n                                        \n                                \n                                \n                                        \n                                            startTime\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _links:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        competitors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        competitors:         Competitor[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Competitor[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The competitors of the sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        players\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        players:         Player[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Player[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The players of the sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sportsBooks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sportsBooks:     SportsBook[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SportsBook[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The odds available for the sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The start time of the sport event.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Competitor } from './competitor';\nimport { Player } from './player';\nimport { SportsBook } from './sports-book';\nimport { Link } from '../link';\n\n/**\n * Represents an odds available for the corresponding sport event.\n */\nexport interface OddsResponse {\n  /**\n   * The start time of the sport event.\n   */\n  startTime: string;\n\n  /**\n   * The competitors of the sport event.\n   */\n  competitors: Competitor[];\n\n  /**\n   * The players of the sport event.\n   */\n  players?: Player[];\n\n  /**\n   * The odds available for the sport event.\n   */\n  sportsBooks: SportsBook[];\n\n  _links?: {\n    self?: Link;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OddsService.html":{"url":"injectables/OddsService.html","title":"injectable - OddsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OddsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/api/odds.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                convertToAmericanOdds\n                            \n                            \n                                gameLineOddsBySportEventId\n                            \n                            \n                                    Private\n                                mapLineOddsResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    baseUrl\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService, applicationConfigService: ApplicationConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/api/odds.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        convertToAmericanOdds\n                        \n                    \n                \n            \n            \n                \n                    \n                    convertToAmericanOdds(odds: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/odds.service.ts:116\n                \n            \n\n\n            \n                \n                    Convert the odds to be displayed in american style\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    odds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     null | number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameLineOddsBySportEventId\n                        \n                    \n                \n            \n            \n                \ngameLineOddsBySportEventId(sportEventId: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/odds.service.ts:31\n                \n            \n\n\n            \n                \n                    Search for the LineOdds by a sportEventId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sportEventId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : The identifier of the sportEvent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        mapLineOddsResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapLineOddsResponse(lineOdds: OddsResponse)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/odds.service.ts:47\n                \n            \n\n\n            \n                \n                    Converts the LineOdds into a better data structure for rendering it\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lineOdds\n                                    \n                                                OddsResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineOdds\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        baseUrl\n                    \n                \n\n                \n                    \n                        getbaseUrl()\n                    \n                \n                            \n                                \n                                    Defined in apps/snapodds/src/services/api/odds.service.ts:23\n                                \n                            \n                    \n                        \n                                Retrieve the apiUrl from the applicationConfig\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { OddsResponse } from '@response/typings';\nimport { map, Observable, switchMap } from 'rxjs';\nimport { LineOdds } from '../../models/line-odds';\nimport { SportsBook } from '../../models/sports-book';\nimport { AuthService } from '../auth/auth.service';\nimport { ApplicationConfigService } from '../config/application-config.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OddsService {\n  constructor(\n    private readonly http: HttpClient,\n    private readonly authService: AuthService,\n    private readonly applicationConfigService: ApplicationConfigService\n  ) {}\n\n  /**\n   * Retrieve the apiUrl from the applicationConfig\n   */\n  get baseUrl() {\n    return this.applicationConfigService.getApiUrl();\n  }\n\n  /**\n   * Search for the LineOdds by a sportEventId\n   * @param sportEventId: The identifier of the sportEvent\n   */\n  gameLineOddsBySportEventId(sportEventId: number): Observable {\n    return this.authService.requestAccessToken().pipe(\n      switchMap((accessToken) =>\n        this.http.get(`${this.baseUrl}/sport/events/${sportEventId}/odds/lines`, {\n          headers: new HttpHeaders({ Authorization: `Bearer ${accessToken}` }),\n        })\n      ),\n      map((response) => this.mapLineOddsResponse(response))\n    );\n  }\n\n  /**\n   * Converts the LineOdds into a better data structure for rendering it\n   * @param lineOdds\n   * @private\n   */\n  private mapLineOddsResponse(lineOdds: OddsResponse): LineOdds {\n    const { competitors, players = [], sportsBooks } = lineOdds;\n\n    if (competitors?.length  sportsBook.offers)\n      .map((sportsBook) => {\n        const converted: SportsBook = {\n          name: sportsBook.name,\n          lines: competitors.map(() => ({} as never)),\n          redirectUrl: sportsBook._links?.redirect?.href,\n        };\n\n        sportsBook.offers\n          .filter((offer) => offer.outcomes)\n          .forEach((offer) => {\n            offer.outcomes.forEach((outcome) => {\n              const competitorIndex = competitors.findIndex((competitor) => competitor.id === outcome.competitorId);\n              const hasCompetitor = competitorIndex > -1;\n              const redirectUrl = outcome._links?.redirect?.href;\n\n              if (offer.type === 'MONEYLINE' && outcome.type === 'WIN' && hasCompetitor) {\n                converted.lines[competitorIndex].moneyline = this.convertToAmericanOdds(outcome.odds);\n\n                if (redirectUrl) {\n                  converted.lines[competitorIndex].moneylineUrl = redirectUrl;\n                }\n              } else if (offer.type === 'OVER_UNDER' && outcome.type === 'OVER') {\n                converted.lines[0].overUnder = outcome.target ?? null;\n                converted.lines[0].overUnderOdds = this.convertToAmericanOdds(outcome.odds);\n\n                if (redirectUrl) {\n                  converted.lines[0].overUnderUrl = redirectUrl;\n                }\n              } else if (offer.type === 'OVER_UNDER' && outcome.type === 'UNDER') {\n                converted.lines[1].overUnder = outcome.target ?? null;\n                converted.lines[1].overUnderOdds = this.convertToAmericanOdds(outcome.odds);\n\n                if (redirectUrl) {\n                  converted.lines[1].overUnderUrl = redirectUrl;\n                }\n              } else if (offer.type === 'SPREAD' && outcome.type === 'WIN' && hasCompetitor) {\n                converted.lines[competitorIndex].spread = outcome.target ?? null;\n                converted.lines[competitorIndex].spreadOdds = this.convertToAmericanOdds(outcome.odds);\n\n                if (redirectUrl) {\n                  converted.lines[competitorIndex].spreadUrl = redirectUrl;\n                }\n              }\n            });\n          });\n\n        if (converted.lines.length > 0) {\n          sportsBookLines.push(converted);\n        }\n      });\n\n    return { competitors, players, sportsBooks: sportsBookLines };\n  }\n\n  /**\n   * Convert the odds to be displayed in american style\n   * @param odds\n   * @private\n   */\n  private convertToAmericanOdds(odds: number): null | number {\n    if (!odds || odds \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Player.html":{"url":"interfaces/Player.html","title":"interface - Player","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Player\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/odds/player.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a player of the game.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the player.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the player.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Player {\n  /**\n   * The id of the player.\n   */\n  id: number;\n\n  /**\n   * The name of the player.\n   */\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Point2d.html":{"url":"interfaces/Point2d.html","title":"interface - Point2d","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Point2d\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/tv-search/point2d.ts\n        \n\n\n            \n                Description\n            \n            \n                A point on 2D plane.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The X coordinate value.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The Y coordinate value.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Point2d {\n  /**\n   * The X coordinate value.\n   */\n  x: number;\n\n  /**\n   * The Y coordinate value.\n   */\n  y: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Quadrangle2d.html":{"url":"interfaces/Quadrangle2d.html","title":"interface - Quadrangle2d","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Quadrangle2d\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/tv-search/quadrangle2d.ts\n        \n\n\n            \n                Description\n            \n            \n                A quadrangle on 2D plane.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            a\n                                        \n                                \n                                \n                                        \n                                            b\n                                        \n                                \n                                \n                                        \n                                            c\n                                        \n                                \n                                \n                                        \n                                            d\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        a\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        a:         Point2d\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Point2d\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The first point of this quadrangle.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        b\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        b:         Point2d\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Point2d\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The second point of this quadrangle.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        c\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        c:         Point2d\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Point2d\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The third point of this quadrangle.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        d\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        d:         Point2d\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Point2d\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The fourth point of this quadrangle.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Point2d } from './point2d';\n\n/**\n * A quadrangle on 2D plane.\n */\nexport interface Quadrangle2d {\n  /**\n   * The first point of this quadrangle.\n   */\n  a: Point2d;\n\n  /**\n   * The second point of this quadrangle.\n   */\n  b: Point2d;\n\n  /**\n   * The third point of this quadrangle.\n   */\n  c: Point2d;\n\n  /**\n   * The fourth point of this quadrangle.\n   */\n  d: Point2d;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnapComponent.html":{"url":"components/SnapComponent.html","title":"component - SnapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SnapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/snap/snap.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-snap\n            \n\n            \n                styleUrls\n                ./snap.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./snap.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appState\n                            \n                            \n                                    Private\n                                    Readonly\n                                destroyed$\n                            \n                            \n                                mediaDeviceState\n                            \n                            \n                                    Private\n                                    Readonly\n                                snapshot$\n                            \n                            \n                                webcamComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Private\n                                handleSuccess\n                            \n                            \n                                    Private\n                                loadSportEvents\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                registerAutoSnap\n                            \n                            \n                                reloadPage\n                            \n                            \n                                showHelpPage\n                            \n                            \n                                    Private\n                                startAutoSnapWithDelay\n                            \n                            \n                                    Private\n                                subscribeToStateStores\n                            \n                            \n                                takeSnapshot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, applicationConfigService: ApplicationConfigService, analyticsService: GoogleAnalyticsService, snapOddsFacade: SnapOddsFacade, appStateStore: AppStateStore, mediaDeviceStateStore: MediaDeviceStateStore, notificationService: NotificationService, location: Location)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/app/snap/snap.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        analyticsService\n                                                  \n                                                        \n                                                                        GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snapOddsFacade\n                                                  \n                                                        \n                                                                        SnapOddsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appStateStore\n                                                  \n                                                        \n                                                                        AppStateStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaDeviceStateStore\n                                                  \n                                                        \n                                                                        MediaDeviceStateStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:146\n                \n            \n\n\n            \n                \n                    Depending on the error, either indicates that not SportEvents have been found by the given snapshot\nor that the request could not be processed due to technical errors.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleSuccess\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleSuccess(sportEventsResponse: TvSearchResult)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:135\n                \n            \n\n\n            \n                \n                    Emit the best match (first entry in the response) on the ApplicationConfigService,\nin order to notify other services about a successful snap.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sportEventsResponse\n                                    \n                                                TvSearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadSportEvents\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadSportEvents(autoSnap)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:159\n                \n            \n\n\n            \n                \n                    Retrieves a snapshot from the webcam and then call the respective method to lookup the SportEvent.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    autoSnap\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        : Depending on the mode used to perform the snapshot different methods are executed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:79\n                \n            \n\n\n            \n                \n                    Clean up existing subscriptions.\nTriggers the snap view has been closed analytics event.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:48\n                \n            \n\n\n            \n                \n                    Initializes the component.\nWill register autoSnap if configured.\nSets the applicationState to SNAP_READY.\nTriggers the snap view opened analytics event.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        registerAutoSnap\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerAutoSnap()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:102\n                \n            \n\n\n            \n                \n                    When the camera is ready it starts to periodically take snapshots and tries to load SportEvents\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reloadPage\n                        \n                    \n                \n            \n            \n                \nreloadPage()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:184\n                \n            \n\n\n            \n                \n                    Reload the webbrowser\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHelpPage\n                        \n                    \n                \n            \n            \n                \nshowHelpPage()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:177\n                \n            \n\n\n            \n                \n                    Navigate to the Help Page by setting the corresponding AppState\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        startAutoSnapWithDelay\n                        \n                    \n                \n            \n            \n                \n                    \n                    startAutoSnapWithDelay()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:118\n                \n            \n\n\n            \n                \n                    The first delay is a bit longer in order for the user to manage to align the camera correctly.\nAfterwards snapshots from the webcam will be taken periodically and SportEvents will be tried to be loaded.\nStops only if the view is closed or the user has taken a snapshot by pressing the snapshot button.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        subscribeToStateStores\n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribeToStateStores()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:63\n                \n            \n\n\n            \n                \n                    Subscribes to updates from the AppStateStore and MediaDeviceStateStore\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        takeSnapshot\n                        \n                    \n                \n            \n            \n                \ntakeSnapshot()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:89\n                \n            \n\n\n            \n                \n                    Notifies other subscriptions that a new snapshot is performed.\nLoad the SportEvents based on the snapshot\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppState | undefined\n\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/snap/snap.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        destroyed$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/snap/snap.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaDeviceState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaDeviceState | undefined\n\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/snap/snap.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        snapshot$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/snap/snap.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        webcamComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WebcamComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(WebcamComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/snap/snap.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { TvSearchResult } from '@response/typings';\nimport { defer, delay, mergeMap, Observable, race, retryWhen, Subject, switchMap, take, takeUntil, timer } from 'rxjs';\nimport { TvSearchNoResultError } from '../../services/api/api-errors';\nimport { ApplicationConfigService } from '../../services/config/application-config.service';\nimport { ManipulatedImage } from '../../services/image-manipulation/manipulated-image';\nimport { LoggerService } from '../../services/logger/logger.service';\nimport { NotificationService } from '../../services/notification/notification.service';\nimport { SnapOddsFacade } from '../../services/snap-odds/snap-odds-facade.service';\nimport { LOCATION } from '../../services/tokens/location-token';\nimport { GoogleAnalyticsService } from '../../services/tracking/google-analytics.service';\nimport { AppState, AppStateStore } from '../../states/app-state.store';\nimport { MediaDeviceState, MediaDeviceStateStore } from '../../states/media-device-state.store';\nimport { WebcamComponent } from '../webcam/webcam.component';\n\n@Component({\n  selector: 'snapodds-snap',\n  templateUrl: './snap.component.html',\n  styleUrls: ['./snap.component.scss'],\n})\nexport class SnapComponent implements OnInit, OnDestroy {\n  @ViewChild(WebcamComponent) webcamComponent!: WebcamComponent;\n\n  appState: AppState | undefined;\n  mediaDeviceState: MediaDeviceState | undefined;\n\n  private readonly destroyed$ = new Subject();\n  private readonly snapshot$ = new Subject();\n\n  constructor(\n    private readonly logger: LoggerService,\n    private readonly applicationConfigService: ApplicationConfigService,\n    private readonly analyticsService: GoogleAnalyticsService,\n    private readonly snapOddsFacade: SnapOddsFacade,\n    private readonly appStateStore: AppStateStore,\n    private readonly mediaDeviceStateStore: MediaDeviceStateStore,\n    private readonly notificationService: NotificationService,\n    @Inject(LOCATION) private readonly location: Location\n  ) {}\n\n  /**\n   * Initializes the component.\n   *\n   * Will register autoSnap if configured.\n   * Sets the applicationState to SNAP_READY.\n   * Triggers the snap view opened analytics event.\n   */\n  ngOnInit(): void {\n    if (this.applicationConfigService.isAutoSnapEnabled()) {\n      this.registerAutoSnap();\n    }\n\n    this.subscribeToStateStores();\n\n    this.appStateStore.dispatch(AppState.SNAP_READY);\n    this.analyticsService.snapViewOpened();\n  }\n\n  /**\n   * Subscribes to updates from the AppStateStore and MediaDeviceStateStore\n   * @private\n   */\n  private subscribeToStateStores() {\n    this.appStateStore\n      .getState()\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((appState) => (this.appState = appState));\n\n    this.mediaDeviceStateStore\n      .getState()\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((mediaDeviceState) => (this.mediaDeviceState = mediaDeviceState));\n  }\n\n  /**\n   * Clean up existing subscriptions.\n   * Triggers the snap view has been closed analytics event.\n   */\n  ngOnDestroy(): void {\n    this.analyticsService.snapViewClosed();\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  /**\n   * Notifies other subscriptions that a new snapshot is performed.\n   * Load the SportEvents based on the snapshot\n   */\n  takeSnapshot(): void {\n    this.snapshot$.next();\n\n    this.loadSportEvents().subscribe({\n      next: (response) => this.handleSuccess(response),\n      error: (error) => this.handleError(error),\n    });\n  }\n\n  /**\n   * When the camera is ready it starts to periodically take snapshots and tries to load SportEvents\n   * @private\n   */\n  private registerAutoSnap(): void {\n    this.mediaDeviceStateStore.webcamIsReady$\n      .pipe(\n        take(1),\n        takeUntil(this.destroyed$),\n        switchMap(() => this.startAutoSnapWithDelay())\n      )\n      .subscribe((response) => this.handleSuccess(response));\n  }\n\n  /**\n   * The first delay is a bit longer in order for the user to manage to align the camera correctly.\n   * Afterwards snapshots from the webcam will be taken periodically and SportEvents will be tried to be loaded.\n   * Stops only if the view is closed or the user has taken a snapshot by pressing the snapshot button.\n   * @private\n   */\n  private startAutoSnapWithDelay(): Observable {\n    return timer(this.applicationConfigService.getAutoSnapDelay(true)).pipe(\n      mergeMap(() =>\n        this.loadSportEvents(true).pipe(\n          retryWhen((errors) => errors.pipe(delay(this.applicationConfigService.getAutoSnapDelay())))\n        )\n      ),\n      takeUntil(race(this.destroyed$, this.snapshot$))\n    );\n  }\n\n  /**\n   * Emit the best match (first entry in the response) on the ApplicationConfigService,\n   * in order to notify other services about a successful snap.\n   * @param sportEventsResponse\n   * @private\n   */\n  private handleSuccess(sportEventsResponse: TvSearchResult) {\n    this.notificationService.notify();\n    this.applicationConfigService.emitResultsEvent(sportEventsResponse.resultEntries[0]);\n  }\n\n  /**\n   * Depending on the error, either indicates that not SportEvents have been found by the given snapshot\n   * or that the request could not be processed due to technical errors.\n   * @param error\n   * @private\n   */\n  private handleError(error: unknown): void {\n    if (error instanceof TvSearchNoResultError) {\n      this.appStateStore.dispatch(AppState.SNAP_NO_RESULTS);\n    } else {\n      this.appStateStore.dispatch(AppState.SNAP_FAILED);\n    }\n  }\n\n  /**\n   * Retrieves a snapshot from the webcam and then call the respective method to lookup the SportEvent.\n   * @param autoSnap: Depending on the mode used to perform the snapshot different methods are executed\n   * @private\n   */\n  private loadSportEvents(autoSnap = false): Observable {\n    if (!autoSnap) {\n      this.appStateStore.dispatch(AppState.SNAP_IN_PROGRESS);\n    }\n    return defer(() => this.webcamComponent.triggerSnapshot()).pipe(\n      switchMap((webcamImage: ManipulatedImage) => {\n        if (autoSnap) {\n          return this.snapOddsFacade.autoSearchSport(webcamImage.blob);\n        } else {\n          return this.snapOddsFacade.searchSport(webcamImage.blob);\n        }\n      })\n    );\n  }\n\n  /**\n   * Navigate to the Help Page by setting the corresponding AppState\n   */\n  showHelpPage(): void {\n    this.appStateStore.dispatch(AppState.SHOW_HELP);\n  }\n\n  /**\n   * Reload the webbrowser\n   */\n  reloadPage(): void {\n    this.location.reload();\n  }\n}\n\n    \n\n    \n        \n  {{ 'Snapodds_Title_Snap_TV' | translate }}\n  \n    \n      {{ 'Snapodds_Action_Help' | translate }}\n    \n  \n\n\n\n  \n\n  \n    \n      \n    \n\n    \n      \n        \n          \n            {{ 'Snapodds_Action_Reload' | translate }}\n          \n        \n\n        \n          \n\n          \n\n          \n            \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./snap.component.scss\n                \n                @use 'tools';\n@use 'settings';\n@use 'sass:math';\n\n:host {\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  .l-flex {\n    display: flex;\n    flex: 1;\n  }\n\n  @media (orientation: landscape) {\n    .l-flex {\n      &__column--landscape {\n        flex-direction: column;\n      }\n\n      &__row--landscape {\n        flex-direction: row;\n      }\n    }\n  }\n\n  @media (orientation: portrait) {\n    .l-flex {\n      &__column--portrait {\n        flex-direction: column;\n      }\n\n      &__row--portrait {\n        flex-direction: row;\n      }\n    }\n  }\n\n  snapodds-webcam {\n    display: flex;\n    flex: 1;\n  }\n\n  snapodds-content {\n    margin: settings.$spacing-lg;\n\n    @include tools.media-small--portrait {\n      margin: settings.$spacing-base settings.$spacing-lg;\n    }\n\n    @include tools.media-tiny--portrait {\n      margin: settings.$spacing-sm;\n    }\n\n    @include tools.media-tiny--landscape {\n      margin: settings.$spacing-base settings.$spacing-lg;\n    }\n  }\n\n  snapodds-footer {\n    margin-left: settings.$spacing-lg;\n    margin-right: settings.$spacing-lg;\n  }\n\n  snapodds-trigger {\n    display: flex;\n    flex: 1;\n    justify-content: center;\n  }\n\n  button {\n    @include tools.button-reset();\n    font-size: settings.$font-base;\n  }\n\n  .c-footer {\n    align-items: center;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n\n    &__switch-camera {\n      @include tools.button-reset;\n\n      color: settings.$color-primary;\n      display: flex;\n      flex: 1;\n      justify-content: center;\n    }\n\n    &__reload-button {\n      @include tools.button-reset;\n      background-color: settings.$color-primary;\n      color: settings.$color-text-focus;\n\n      font-size: settings.$font-lg;\n      font-weight: 500;\n      padding: settings.$spacing-base settings.$spacing-lg;\n    }\n\n    &__powered-by {\n      font-size: settings.$font-sm;\n    }\n\n    &__spacer {\n      display: flex;\n      flex: 1;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'Snapodds_Title_Snap_TV\\' | translate }}            {{ \\'Snapodds_Action_Help\\' | translate }}                                                                {{ \\'Snapodds_Action_Reload\\' | translate }}                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SnapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SnapOddsFacade.html":{"url":"injectables/SnapOddsFacade.html","title":"injectable - SnapOddsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SnapOddsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/snap-odds/snap-odds-facade.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                autoSearchSport\n                            \n                            \n                                searchSport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tvSearchService: TvSearchService, logger: LoggerService, analyticsService: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/snap-odds/snap-odds-facade.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tvSearchService\n                                                  \n                                                        \n                                                                        TvSearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        analyticsService\n                                                  \n                                                        \n                                                                        GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        autoSearchSport\n                        \n                    \n                \n            \n            \n                \nautoSearchSport(imageData: Blob)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/snap-odds/snap-odds-facade.service.ts:44\n                \n            \n\n\n            \n                \n                    Find SportEvent when the search is triggered programmatically.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imageData\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchSport\n                        \n                    \n                \n            \n            \n                \nsearchSport(imageData: Blob)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/snap-odds/snap-odds-facade.service.ts:22\n                \n            \n\n\n            \n                \n                    Performs the search of an SportEvent by an image.\nTrigger the analytics to register positive / negative and failed results.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imageData\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TvSearchResult } from '@response/typings';\nimport { catchError, Observable, tap, throwError } from 'rxjs';\nimport { TvSearchNoResultError } from '../api/api-errors';\nimport { TvSearchService } from '../api/tv-search.service';\nimport { LoggerService } from '../logger/logger.service';\nimport { GoogleAnalyticsService } from '../tracking/google-analytics.service';\n\n@Injectable({ providedIn: 'root' })\nexport class SnapOddsFacade {\n  constructor(\n    private readonly tvSearchService: TvSearchService,\n    private readonly logger: LoggerService,\n    private readonly analyticsService: GoogleAnalyticsService\n  ) {}\n\n  /**\n   * Performs the search of an SportEvent by an image.\n   * Trigger the analytics to register positive / negative and failed results.\n   * @param imageData\n   */\n  searchSport(imageData: Blob): Observable {\n    this.analyticsService.snapViewSnap();\n\n    const snapStartTime = Date.now();\n    return this.tvSearchService.searchSport(imageData).pipe(\n      catchError((error) => {\n        const duration = Date.now() - snapStartTime;\n        if (error instanceof TvSearchNoResultError) {\n          this.analyticsService.snapViewSnapNegative(duration);\n        } else {\n          this.analyticsService.snapViewSnapFailed(duration);\n        }\n        return throwError(error);\n      }),\n      tap(() => this.analyticsService.snapViewSnapResult(Date.now() - snapStartTime))\n    );\n  }\n\n  /**\n   * Find SportEvent when the search is triggered programmatically.\n   * @param imageData\n   */\n  autoSearchSport(imageData: Blob): Observable {\n    return this.tvSearchService.autoSearchSport(imageData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerComponent.html":{"url":"components/SpinnerComponent.html","title":"component - SpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/spinner/spinner.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-spinner\n            \n\n            \n                styleUrls\n                ./spinner.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spinner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     \"base\" | \"small\"\n\n                    \n                \n                \n                    \n                        Default value : 'base'\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/spinner/spinner.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'snapodds-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss'],\n})\nexport class SpinnerComponent {\n  @Input()\n  size: 'base' | 'small' = 'base';\n}\n\n    \n\n    \n        \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./spinner.component.scss\n                \n                @use 'sass:math';\n\n$spinner-width: 3rem;\n$spinner-width--small: 1.5rem;\n$bar--width: math.div($spinner-width, 4);\n$bar--width--small: math.div($spinner-width--small, 4);\n$bar--count: 8;\n\n:host {\n  .spinner {\n    color: currentColor;\n    display: inline-block;\n    height: $spinner-width;\n    position: relative;\n    width: $spinner-width;\n\n    div {\n      animation: spinner $bar--count * 0.1s linear infinite;\n      transform-origin: math.div($spinner-width, 2) math.div($spinner-width, 2);\n    }\n\n    div::after {\n      background: currentColor;\n      border-radius: 20%;\n      content: ' ';\n      display: block;\n      height: $bar--width;\n      left: math.div($spinner-width, 2) - math.div($bar--width, 6);\n      position: absolute;\n      top: math.div($bar--width, 6);\n      width: math.div($bar--width, 3);\n    }\n\n    &--small {\n      height: $spinner-width--small;\n      width: $spinner-width--small;\n\n      div {\n        transform-origin: math.div($spinner-width--small, 2) math.div($spinner-width--small, 2);\n      }\n\n      div::after {\n        height: $bar--width--small;\n        left: math.div($spinner-width--small, 2) - math.div($bar--width--small, 6);\n        top: math.div($bar--width--small, 6);\n        width: math.div($bar--width--small, 3);\n      }\n    }\n\n    @for $i from 1 through $bar--count {\n      div:nth-child(#{$i}) {\n        animation-delay: $bar--count * -0.1s + $i * 0.1s;\n        transform: rotate(#{(math.div(360, $bar--count) * $i)}deg);\n      }\n    }\n  }\n\n  @keyframes spinner {\n    0% {\n      opacity: 1;\n    }\n\n    100% {\n      opacity: 0;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SportEvent.html":{"url":"interfaces/SportEvent.html","title":"interface - SportEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SportEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/tv-search/sport-event.ts\n        \n\n\n            \n                Description\n            \n            \n                An entity represents a sport event broadcasted on TV channel.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _links\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            competitors\n                                        \n                                \n                                \n                                        \n                                            endTime\n                                        \n                                \n                                \n                                        \n                                            externalId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            sport\n                                        \n                                \n                                \n                                        \n                                            sportDataProviderCode\n                                        \n                                \n                                \n                                        \n                                            sportDataProviderMatchId\n                                        \n                                \n                                \n                                        \n                                            startTime\n                                        \n                                \n                                \n                                        \n                                            tournament\n                                        \n                                \n                                \n                                        \n                                            tvChannelId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _links:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The category of this sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        competitors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        competitors:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The competitors participating in this sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The end time of this sport event.\nISO DateTime Format: yyyy-MM-dd'T'HH:mm:ss.SSSZZ\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of a match specific for the sport data provider and corresponding to this sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sport:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The sport discipline of this sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sportDataProviderCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sportDataProviderCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique code of an external sport data provider which is a source of the sport data for this sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sportDataProviderMatchId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sportDataProviderMatchId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of a match specific for the sport data provider and corresponding to this sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The start time of this sport event.\nISO DateTime Format: yyyy-MM-dd'T'HH:mm:ss.SSSZZ\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournament\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tournament:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The tournament of this sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tvChannelId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tvChannelId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of a TV channel registered in the system and on which this sport event aired.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Link } from '../link';\n\n/**\n * An entity represents a sport event broadcasted on TV channel.\n */\nexport interface SportEvent {\n  /**\n   * The id of the sport event.\n   */\n  id: number;\n\n  /**\n   * The unique code of an external sport data provider which is a source of the sport data for this sport event.\n   */\n  sportDataProviderCode: string;\n\n  /**\n   * The id of a match specific for the sport data provider and corresponding to this sport event.\n   */\n  sportDataProviderMatchId: string;\n\n  /**\n   * The id of a TV channel registered in the system and on which this sport event aired.\n   */\n  tvChannelId: number;\n\n  /**\n   * The start time of this sport event.\n   *\n   * ISO DateTime Format: yyyy-MM-dd'T'HH:mm:ss.SSSZZ\n   */\n  startTime: string;\n\n  /**\n   * The end time of this sport event.\n   *\n   * ISO DateTime Format: yyyy-MM-dd'T'HH:mm:ss.SSSZZ\n   */\n  endTime: string;\n\n  /**\n   * The sport discipline of this sport event.\n   */\n  sport: string;\n\n  /**\n   * The category of this sport event.\n   */\n  category: string;\n\n  /**\n   * The tournament of this sport event.\n   */\n  tournament: string;\n\n  /**\n   * The competitors participating in this sport event.\n   */\n  competitors: { name: string }[];\n\n  /**\n   * The id of a match specific for the sport data provider and corresponding to this sport event.\n   */\n  externalId: string;\n\n  _links: {\n    self?: Link;\n    tvChannel?: Link;\n    tvChannelLogo?: Link;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SportsBook.html":{"url":"interfaces/SportsBook.html","title":"interface - SportsBook","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SportsBook\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/models/sports-book.ts\n        \n\n\n            \n                Description\n            \n            \n                Data structure used to render the sportBooks for LineOdds\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            lines\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            redirectUrl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lines\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lines:     SportsBookLine[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SportsBookLine[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    One line contains the various OddsOffers combined.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the sports book.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redirectUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        redirectUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The link which will be used to redirect the user to.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { SportsBookLine } from './sports-book-line';\n\n/**\n * Data structure used to render the sportBooks for LineOdds\n */\nexport interface SportsBook {\n  /**\n   * The name of the sports book.\n   */\n  name: string;\n  /**\n   * One line contains the various OddsOffers combined.\n   */\n  lines: SportsBookLine[];\n\n  /**\n   * The link which will be used to redirect the user to.\n   */\n  redirectUrl?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SportsBook-1.html":{"url":"interfaces/SportsBook-1.html","title":"interface - SportsBook-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SportsBook\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/odds/sports-book.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an odds for the specific game in the given sports book.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _links\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            offers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _links:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the sports book.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offers:         OddsOffer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OddsOffer[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The odds offers available in the given sports book.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { OddsOffer } from './odds-offer';\nimport { Link } from '../link';\n\n/**\n * Represents an odds for the specific game in the given sports book.\n */\nexport interface SportsBook {\n  /**\n   * The name of the sports book.\n   */\n  name: string;\n\n  /**\n   * The odds offers available in the given sports book.\n   */\n  offers: OddsOffer[];\n\n  _links?: {\n    redirect?: Link;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SportsBookLine.html":{"url":"interfaces/SportsBookLine.html","title":"interface - SportsBookLine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SportsBookLine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/models/sports-book-line.ts\n        \n\n\n            \n                Description\n            \n            \n                Data structure used to render the combined info of offers.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            moneyline\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            moneylineUrl\n                                        \n                                \n                                \n                                        \n                                            overUnder\n                                        \n                                \n                                \n                                        \n                                            overUnderOdds\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            overUnderUrl\n                                        \n                                \n                                \n                                        \n                                            spread\n                                        \n                                \n                                \n                                        \n                                            spreadOdds\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            spreadUrl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        moneyline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moneyline:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The target value for the money line.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moneylineUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moneylineUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The url pointing to the money line.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overUnder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overUnder:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The target value for over/under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overUnderOdds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overUnderOdds:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The odds for the over/under outcome.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overUnderUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overUnderUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The url pointing to the over/under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spread\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spread:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The target value for spread.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spreadOdds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spreadOdds:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The odds for the spread outcome.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spreadUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spreadUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The url pointing to the spread.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SportsBookLine {\n  /**\n   * The target value for spread.\n   */\n  spread: number | null;\n\n  /**\n   * The odds for the spread outcome.\n   */\n  spreadOdds: number | null;\n\n  /**\n   * The url pointing to the spread.\n   */\n  spreadUrl?: string | null;\n\n  /**\n   * The target value for the money line.\n   */\n  moneyline: number | null;\n\n  /**\n   * The url pointing to the money line.\n   */\n  moneylineUrl?: string | null;\n\n  /**\n   * The target value for over/under.\n   */\n  overUnder: number | null;\n\n  /**\n   * The odds for the over/under outcome.\n   */\n  overUnderOdds: number | null;\n\n  /**\n   * The url pointing to the over/under.\n   */\n  overUnderUrl?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SwitchSvgComponent.html":{"url":"components/SwitchSvgComponent.html","title":"component - SwitchSvgComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SwitchSvgComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/svgs/switch.svg.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-switch-svg\n            \n\n            \n                styleUrls\n                ./switch.svg.styles.scss\n            \n\n\n\n            \n                templateUrl\n                ./switch.svg\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'snapodds-switch-svg',\n  templateUrl: './switch.svg',\n  styleUrls: ['./switch.svg.styles.scss'],\n})\nexport class SwitchSvgComponent {}\n\n    \n\n    \n        \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./switch.svg.styles.scss\n                \n                @use 'settings';\n\n:host {\n  color: settings.$color-text;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SwitchSvgComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TranslationEntries.html":{"url":"interfaces/TranslationEntries.html","title":"interface - TranslationEntries","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TranslationEntries\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/i18n/translation-entries.ts\n        \n\n\n            \n                Description\n            \n            \n                Keys available for translating text in the view\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Snapodds_Action_Cancel\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Action_Close_Help\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Action_Help\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Action_Reload\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Device_No_Permission\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Device_No_Permission_Headline\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Lines_Loading\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Lines_No_Results\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Snapping_Failed\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Snapping_Failed_Headline\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Snapping_No_results\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Snapping_No_results_Headline\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Title_Help\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Title_Odds\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Title_Snap_TV\n                                        \n                                \n                                \n                                        \n                                            Snapodds_ViewFinder_Hint\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Action_Cancel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Action_Cancel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Action_Close_Help\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Action_Close_Help:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Action_Help\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Action_Help:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Action_Reload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Action_Reload:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Device_No_Permission\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Device_No_Permission:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Device_No_Permission_Headline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Device_No_Permission_Headline:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Lines_Loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Lines_Loading:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Lines_No_Results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Lines_No_Results:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Snapping_Failed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Snapping_Failed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Snapping_Failed_Headline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Snapping_Failed_Headline:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Snapping_No_results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Snapping_No_results:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Snapping_No_results_Headline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Snapping_No_results_Headline:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Title_Help\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Title_Help:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Title_Odds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Title_Odds:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Title_Snap_TV\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Title_Snap_TV:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_ViewFinder_Hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_ViewFinder_Hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TranslationEntries {\n  Snapodds_Title_Snap_TV: string;\n  Snapodds_Title_Odds: string;\n  Snapodds_Title_Help: string;\n  Snapodds_Action_Cancel: string;\n  Snapodds_Action_Reload: string;\n  Snapodds_Action_Help: string;\n  Snapodds_Action_Close_Help: string;\n  Snapodds_ViewFinder_Hint: string;\n  Snapodds_Device_No_Permission_Headline: string;\n  Snapodds_Device_No_Permission: string;\n  Snapodds_Snapping_Failed_Headline: string;\n  Snapodds_Snapping_Failed: string;\n  Snapodds_Snapping_No_results_Headline: string;\n  Snapodds_Snapping_No_results: string;\n  Snapodds_Lines_Loading: string;\n  Snapodds_Lines_No_Results: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TriggerComponent.html":{"url":"components/TriggerComponent.html","title":"component - TriggerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TriggerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/trigger/trigger.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-trigger\n            \n\n            \n                styleUrls\n                ./trigger.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./trigger.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                processing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/trigger/trigger.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        processing\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/trigger/trigger.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/trigger/trigger.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'snapodds-trigger',\n  templateUrl: './trigger.component.html',\n  styleUrls: ['./trigger.component.scss'],\n})\nexport class TriggerComponent {\n  @Input() disabled = false;\n  @Input() processing = false;\n  @Output() clicked = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./trigger.component.scss\n                \n                @use 'tools';\n@use 'settings';\n\n:host {\n  .c-trigger {\n    &__button {\n      @include tools.button-reset;\n\n      color: settings.$color-primary;\n      position: relative;\n\n      &:disabled {\n        opacity: 0.5;\n        pointer-events: none;\n      }\n    }\n\n    &__spinner {\n      color: settings.$color-background;\n      left: 50%;\n      position: absolute;\n      top: 50%;\n      transform: translate(-50%, -50%);\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TriggerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TriggerSvgComponent.html":{"url":"components/TriggerSvgComponent.html","title":"component - TriggerSvgComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TriggerSvgComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/svgs/trigger.svg.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-trigger-svg\n            \n\n\n\n\n            \n                templateUrl\n                ./trigger.svg\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'snapodds-trigger-svg',\n  templateUrl: './trigger.svg',\n})\nexport class TriggerSvgComponent {}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TriggerSvgComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TvChannel.html":{"url":"interfaces/TvChannel.html","title":"interface - TvChannel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TvChannel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/tv-search/tv-channel.ts\n        \n\n\n            \n                Description\n            \n            \n                An entity which represents a TV channel registered in the system.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _links\n                                        \n                                \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            grabbed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            homepage\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _links:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique code of this TV channel.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grabbed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grabbed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The flag which indicates that the system grabs this TV channel or doesn't.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homepage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        homepage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The homepage URL of this TV channel.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of this TV channel.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of this TV channel.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Link } from '../link';\n\n/**\n * An entity which represents a TV channel registered in the system.\n */\nexport interface TvChannel {\n  /**\n   * The id of this TV channel.\n   */\n  id: number;\n\n  /**\n   * The unique code of this TV channel.\n   */\n  code: string;\n\n  /**\n   * The name of this TV channel.\n   */\n  name: string;\n\n  /**\n   * The homepage URL of this TV channel.\n   */\n  homepage?: string;\n\n  /**\n   * The flag which indicates that the system grabs this TV channel or doesn't.\n   */\n  grabbed: boolean;\n\n  _links: {\n    self?: Link;\n    logo?: Link;\n    poster?: Link;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TvSearchNoResultError.html":{"url":"classes/TvSearchNoResultError.html","title":"class - TvSearchNoResultError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TvSearchNoResultError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/api/api-errors.ts\n        \n\n\n            \n                Description\n            \n            \n                Error to indicate that a search has returned no results\n\n            \n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/api/api-errors.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TvSearchNoResultError extends Error {\n  constructor() {\n    super('No sport events found');\n    this.name = 'TvSearchNoResultError';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TvSearchResult.html":{"url":"interfaces/TvSearchResult.html","title":"interface - TvSearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TvSearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/tv-search/tv-search-result.ts\n        \n\n\n            \n                Description\n            \n            \n                A result of TV search.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            requestUuid\n                                        \n                                \n                                \n                                        \n                                            resultEntries\n                                        \n                                \n                                \n                                        \n                                            screenQuadrangles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        requestUuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        requestUuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A result of TV search.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultEntries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resultEntries:     TvSearchResultEntry[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TvSearchResultEntry[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The list of result entries.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        screenQuadrangles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        screenQuadrangles:         Quadrangle2d[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Quadrangle2d[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The quadrangles of TV screen found on the images used for the TV search.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Quadrangle2d } from './quadrangle2d';\nimport { TvSearchResultEntry } from './tv-search-result-entry';\n\n/**\n * A result of TV search.\n */\nexport interface TvSearchResult {\n  /**\n   * A result of TV search.\n   */\n  requestUuid: string;\n\n  /**\n   * The list of result entries.\n   */\n  resultEntries: TvSearchResultEntry[];\n\n  /**\n   * The quadrangles of TV screen found on the images used for the TV search.\n   */\n  screenQuadrangles: Quadrangle2d[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TvSearchResultEntry.html":{"url":"interfaces/TvSearchResultEntry.html","title":"interface - TvSearchResultEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TvSearchResultEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/tv-search/tv-search-result-entry.ts\n        \n\n\n            \n                Description\n            \n            \n                A result entry found on a request made by the end-user for search in the index of TV channels grabbed by the system.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            score\n                                        \n                                \n                                \n                                        \n                                            sportEvent\n                                        \n                                \n                                \n                                        \n                                            timestampRef\n                                        \n                                \n                                \n                                        \n                                            tvChannel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The result score of the entry.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sportEvent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sportEvent:         SportEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SportEvent\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The sport event shown on the TV channel at the timestamp of the entry.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestampRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestampRef:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The timestamp when the corresponding TS image was aired.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tvChannel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tvChannel:         TvChannel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TvChannel\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The TV channel on which the TS image corresponding to the entry was aired.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { SportEvent } from './sport-event';\nimport { TvChannel } from './tv-channel';\n\n/**\n * A result entry found on a request made by the end-user for search in the index of TV channels grabbed by the system.\n */\nexport interface TvSearchResultEntry {\n  /**\n   * The TV channel on which the TS image corresponding to the entry was aired.\n   */\n  tvChannel: TvChannel;\n\n  /**\n   * The sport event shown on the TV channel at the timestamp of the entry.\n   */\n  sportEvent: SportEvent;\n\n  /**\n   * The timestamp when the corresponding TS image was aired.\n   */\n  timestampRef: number;\n\n  /**\n   * The result score of the entry.\n   */\n  score: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TvSearchService.html":{"url":"injectables/TvSearchService.html","title":"injectable - TvSearchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TvSearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/api/tv-search.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                timeLag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                autoSearchSport\n                            \n                            \n                                    Private\n                                createSnapscreenHeaders\n                            \n                            \n                                searchSport\n                            \n                            \n                                    Private\n                                snap\n                            \n                            \n                                    Private\n                                updateTimeLag\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    baseUrl\n                                \n                                \n                                    currentTimestamp\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logger: LoggerService, authService: AuthService, applicationConfigService: ApplicationConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/api/tv-search.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        autoSearchSport\n                        \n                    \n                \n            \n            \n                \nautoSearchSport(imageData: Blob)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/tv-search.service.ts:50\n                \n            \n\n\n            \n                \n                    Find SportEvent when the search is triggered programmatically.\nTakes the current timeStamp into consideration.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    imageData\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : snapshot of the tv-viewfinders viewport\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createSnapscreenHeaders\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSnapscreenHeaders(accessToken: string, nearTimestamp: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/tv-search.service.ts:86\n                \n            \n\n\n            \n                \n                    Create the headers necessary to perform a search on the API\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    accessToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : to authenticate the client\n\n                                    \n                                \n                                \n                                    nearTimestamp\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : add the currentTimestamp as header\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HttpHeaders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchSport\n                        \n                    \n                \n            \n            \n                \nsearchSport(imageData: Blob)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/tv-search.service.ts:41\n                \n            \n\n\n            \n                \n                    Find SportEvent when the user manually triggers the snap.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    imageData\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : snapshot of the cameras viewport\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        snap\n                        \n                    \n                \n            \n            \n                \n                    \n                    snap(url: string, imageData: Blob, nearTimestamp)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/tv-search.service.ts:61\n                \n            \n\n\n            \n                \n                    Performs a search by image\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        : API endpoint to perform the search request agianst\n\n                                    \n                                \n                                \n                                    imageData\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        : image to be analyzed\n\n                                    \n                                \n                                \n                                    nearTimestamp\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        : add the currentTimestamp as header\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateTimeLag\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTimeLag(response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/tv-search.service.ts:104\n                \n            \n\n\n            \n                \n                    Calculates the difference between now and when the response has been sent.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the response from which the difference is calculated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        timeLag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/api/tv-search.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        baseUrl\n                    \n                \n\n                \n                    \n                        getbaseUrl()\n                    \n                \n                            \n                                \n                                    Defined in apps/snapodds/src/services/api/tv-search.service.ts:26\n                                \n                            \n                    \n                        \n                                Retrieve the apiUrl from the applicationConfig\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        currentTimestamp\n                    \n                \n\n                \n                    \n                        getcurrentTimestamp()\n                    \n                \n                            \n                                \n                                    Defined in apps/snapodds/src/services/api/tv-search.service.ts:33\n                                \n                            \n                    \n                        \n                                Calculate the difference between the current timestamp and the delay the response took to be processed by the API\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { TvSearchResult } from '@response/typings';\nimport { map, Observable, switchMap, tap } from 'rxjs';\nimport { AuthService } from '../auth/auth.service';\nimport { ApplicationConfigService } from '../config/application-config.service';\nimport { LoggerService } from '../logger/logger.service';\nimport { TvSearchNoResultError } from './api-errors';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TvSearchService {\n  private timeLag = 0;\n\n  constructor(\n    private readonly http: HttpClient,\n    private readonly logger: LoggerService,\n    private readonly authService: AuthService,\n    private readonly applicationConfigService: ApplicationConfigService\n  ) {}\n\n  /**\n   * Retrieve the apiUrl from the applicationConfig\n   */\n  get baseUrl(): string {\n    return this.applicationConfigService.getApiUrl();\n  }\n\n  /**\n   * Calculate the difference between the current timestamp and the delay the response took to be processed by the API\n   */\n  get currentTimestamp(): number {\n    return Date.now() - this.timeLag;\n  }\n\n  /**\n   * Find SportEvent when the user manually triggers the snap.\n   * @param imageData: snapshot of the cameras viewport\n   */\n  searchSport(imageData: Blob): Observable {\n    return this.snap('/tv-search/sport/by-image', imageData);\n  }\n\n  /**\n   * Find SportEvent when the search is triggered programmatically.\n   * Takes the current timeStamp into consideration.\n   * @param imageData: snapshot of the tv-viewfinders viewport\n   */\n  autoSearchSport(imageData: Blob): Observable {\n    return this.snap('/tv-search/sport/near-timestamp/by-image', imageData, true);\n  }\n\n  /**\n   * Performs a search by image\n   * @param url: API endpoint to perform the search request agianst\n   * @param imageData: image to be analyzed\n   * @param nearTimestamp: add the currentTimestamp as header\n   * @private\n   */\n  private snap(url: string, imageData: Blob, nearTimestamp = false): Observable {\n    return this.authService.requestAccessToken().pipe(\n      switchMap((accessToken) =>\n        this.http.post(`${this.baseUrl}${url}`, imageData, {\n          headers: this.createSnapscreenHeaders(accessToken, nearTimestamp),\n          observe: 'response',\n        })\n      ),\n      tap((response) => this.updateTimeLag(response)),\n      map((response) => {\n        if (response.body?.resultEntries.length) {\n          return response.body;\n        } else {\n          throw new TvSearchNoResultError();\n        }\n      })\n    );\n  }\n\n  /**\n   * Create the headers necessary to perform a search on the API\n   * @param accessToken: to authenticate the client\n   * @param nearTimestamp: add the currentTimestamp as header\n   * @private\n   */\n  private createSnapscreenHeaders(accessToken: string, nearTimestamp: boolean): HttpHeaders {\n    let headers = new HttpHeaders()\n      .set('Authorization', `Bearer ${accessToken}`)\n      .set('Content-type', 'application/octet-stream')\n      .set('X-Snapscreen-MimeType', 'image/jpeg');\n\n    if (nearTimestamp) {\n      headers = headers.set('X-Snapscreen-Timestamp', `${this.currentTimestamp}`);\n    }\n\n    return headers;\n  }\n\n  /**\n   * Calculates the difference between now and when the response has been sent.\n   * @param response: the response from which the difference is calculated\n   * @private\n   */\n  private updateTimeLag(response: HttpResponse): void {\n    const responseDate = response.headers.get('Date');\n\n    if (responseDate) {\n      this.timeLag = Date.now() - Date.parse(responseDate);\n      this.logger.debug(`Update time lag interval to ${this.timeLag}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserFeedbackMessageComponent.html":{"url":"components/UserFeedbackMessageComponent.html","title":"component - UserFeedbackMessageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserFeedbackMessageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/user-feedback-message/user-feedback-message.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-user-feedback-message\n            \n\n            \n                styleUrls\n                ./user-feedback-message.component.scss\n            \n\n\n\n            \n                templateUrl\n                user-feedback-message.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appState\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        appState\n                    \n                \n                \n                    \n                        Type :         AppState\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/user-feedback-message/user-feedback-message.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { AppState } from '../../states/app-state.store';\n\n@Component({\n  selector: 'snapodds-user-feedback-message',\n  templateUrl: 'user-feedback-message.component.html',\n  styleUrls: ['./user-feedback-message.component.scss'],\n})\nexport class UserFeedbackMessageComponent {\n  @Input() appState?: AppState;\n}\n\n    \n\n    \n        \n\n\n  {{ 'Snapodds_Device_No_Permission_Headline' | translate }}\n  \n\n\n\n  {{ 'Snapodds_Snapping_No_results_Headline' | translate }}\n  \n\n\n\n  {{ 'Snapodds_Snapping_Failed_Headline' | translate }}\n  \n\n\n    \n\n    \n                \n                    ./user-feedback-message.component.scss\n                \n                @use 'settings';\n@use 'tools';\n\n:host {\n  .c-user-feedback {\n    text-align: center;\n\n    @include tools.media-tiny--portrait {\n      /* stylelint-disable-next-line selector-pseudo-element-no-unknown */\n      ::ng-deep {\n        @include tools.flat-breaks;\n      }\n    }\n\n    &--error {\n      color: settings.$color-warn;\n    }\n\n    &__headline {\n      font-size: settings.$font-xl;\n      margin-bottom: settings.$spacing-sm;\n\n      @include tools.media-tiny--portrait {\n        display: none;\n      }\n\n      @include tools.media-tiny--landscape {\n        display: none;\n      }\n\n      @include tools.media-small--portrait {\n        font-size: settings.$font-lg;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'Snapodds_Device_No_Permission_Headline\\' | translate }}    {{ \\'Snapodds_Snapping_No_results_Headline\\' | translate }}    {{ \\'Snapodds_Snapping_Failed_Headline\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserFeedbackMessageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WebcamComponent.html":{"url":"components/WebcamComponent.html","title":"component - WebcamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WebcamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/webcam/webcam.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-webcam\n            \n\n            \n                styleUrls\n                ./webcam.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./webcam.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasMultipleWebcams\n                            \n                            \n                                imageAsDataUrl\n                            \n                            \n                                    Private\n                                nextWebcam\n                            \n                            \n                                nextWebcam$\n                            \n                            \n                                pinchZoomComponent\n                            \n                            \n                                videoOptions\n                            \n                            \n                                viewFinder\n                            \n                            \n                                webcamComponent\n                            \n                            \n                                webcamComponentElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cameraSwitched\n                            \n                            \n                                    Private\n                                centerContentOnZoom\n                            \n                            \n                                debugImageManipulations\n                            \n                            \n                                    Private\n                                drawDebugImage\n                            \n                            \n                                    Private\n                                getViewFinder\n                            \n                            \n                                handleInitError\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                switchToNextWebcam\n                            \n                            \n                                triggerSnapshot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(imageManipulationService: ImageManipulationService, applicationConfigService: ApplicationConfigService, appStateStore: AppStateStore, logger: LoggerService, mediaDeviceStateStore: MediaDeviceStateStore)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        imageManipulationService\n                                                  \n                                                        \n                                                                        ImageManipulationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appStateStore\n                                                  \n                                                        \n                                                                        AppStateStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaDeviceStateStore\n                                                  \n                                                        \n                                                                        MediaDeviceStateStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cameraSwitched\n                        \n                    \n                \n            \n            \n                \ncameraSwitched(deviceId: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:132\n                \n            \n\n\n            \n                \n                    Callback which is executed when the video stream of a webcam is ready for further processing.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    deviceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the webcams device id inside the browser\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        centerContentOnZoom\n                        \n                    \n                \n            \n            \n                \n                    \n                    centerContentOnZoom()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:148\n                \n            \n\n\n            \n                \n                    Patches the ngx-pinch-zoom component by not taking the cursors offset into account when zooming into the video stream.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debugImageManipulations\n                        \n                    \n                \n            \n            \n                \ndebugImageManipulations()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:140\n                \n            \n\n\n            \n                \n                    Used to determine if the debug output of the manipulated image should be shown or not\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        drawDebugImage\n                        \n                    \n                \n            \n            \n                \n                    \n                    drawDebugImage(blob: Blob)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:105\n                \n            \n\n\n            \n                \n                    Converts a blob image into a dataUrl which can be rendered in the template\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    blob\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getViewFinder\n                        \n                    \n                \n            \n            \n                \n                    \n                    getViewFinder()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:94\n                \n            \n\n\n            \n                \n                    If autoSnap is enabled then only the tv-frame is used as viewFinder, otherwise the whole visible are is used.\n\n\n                    \n                    \n                    \n                        Returns :     HTMLElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleInitError\n                        \n                    \n                \n            \n            \n                \nhandleInitError(error: WebcamInitError)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:115\n                \n            \n\n\n            \n                \n                    If the device can't be accessed, triggers the rendering of the according error page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            WebcamInitError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:60\n                \n            \n\n\n            \n                \n                    After the view and its components are initialized, the zoom library will be patched to only allow zoom on center\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:46\n                \n            \n\n\n            \n                \n                    Verifies the available video inputs and if none are found triggers the rendering of the error view\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switchToNextWebcam\n                        \n                    \n                \n            \n            \n                \nswitchToNextWebcam()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:124\n                \n            \n\n\n            \n                \n                    Toggles between available webcams\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerSnapshot\n                        \n                    \n                \n            \n            \n                \ntriggerSnapshot()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:72\n                \n            \n\n\n            \n                \n                    Takes a snapshot from the webcams video stream and crops it to the area that is visible to the user.\nIf the environment.debugImageManipulations is turned on will render the cropped image in the browser for verification\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hasMultipleWebcams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageAsDataUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | ArrayBuffer | null | undefined\n\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        nextWebcam\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextWebcam$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.nextWebcam.asObservable()\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pinchZoomComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PinchZoomComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(PinchZoomComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        videoOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaTrackConstraints\n\n                    \n                \n                \n                    \n                        Default value : {\n    facingMode: { ideal: 'environment' },\n    width: { min: 320, ideal: 1920, max: 2560 },\n  }\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewFinder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('viewFinder')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        webcamComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgxWebcamComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(NgxWebcamComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        webcamComponentElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(NgxWebcamComponent, {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { PinchZoomComponent } from 'ngx-pinch-zoom';\nimport { WebcamComponent as NgxWebcamComponent, WebcamInitError, WebcamUtil } from 'ngx-webcam';\nimport { Observable, Subject } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { ApplicationConfigService } from '../../services/config/application-config.service';\nimport { ImageManipulationService } from '../../services/image-manipulation/image-manipulation.service';\nimport { ManipulatedImage } from '../../services/image-manipulation/manipulated-image';\nimport { LoggerService } from '../../services/logger/logger.service';\nimport { AppState, AppStateStore } from '../../states/app-state.store';\nimport { MediaDeviceState, MediaDeviceStateStore } from '../../states/media-device-state.store';\n\n@Component({\n  selector: 'snapodds-webcam',\n  templateUrl: './webcam.component.html',\n  styleUrls: ['./webcam.component.scss'],\n})\nexport class WebcamComponent implements OnInit, AfterViewInit {\n  imageAsDataUrl: string | ArrayBuffer | null | undefined;\n  videoOptions: MediaTrackConstraints = {\n    facingMode: { ideal: 'environment' },\n    width: { min: 320, ideal: 1920, max: 2560 },\n  };\n\n  @ViewChild(NgxWebcamComponent) webcamComponent!: NgxWebcamComponent;\n  @ViewChild(NgxWebcamComponent, { read: ElementRef }) webcamComponentElement!: ElementRef;\n  @ViewChild(PinchZoomComponent) pinchZoomComponent!: PinchZoomComponent;\n  @ViewChild('viewFinder') viewFinder!: ElementRef;\n\n  hasMultipleWebcams = false;\n\n  private nextWebcam: Subject = new Subject();\n  nextWebcam$: Observable = this.nextWebcam.asObservable();\n\n  constructor(\n    private readonly imageManipulationService: ImageManipulationService,\n    private readonly applicationConfigService: ApplicationConfigService,\n    private readonly appStateStore: AppStateStore,\n    private readonly logger: LoggerService,\n    readonly mediaDeviceStateStore: MediaDeviceStateStore\n  ) {}\n\n  /**\n   * Verifies the available video inputs and if none are found triggers the rendering of the error view\n   */\n  ngOnInit(): void {\n    WebcamUtil.getAvailableVideoInputs().then((mediaDevices: MediaDeviceInfo[]) => {\n      this.hasMultipleWebcams = mediaDevices.length > 1;\n\n      if (mediaDevices.length === 0) {\n        this.mediaDeviceStateStore.dispatch(MediaDeviceState.DEVICE_NO_CAMERA);\n        this.appStateStore.dispatch(AppState.DEVICE_NO_CAMERA);\n      }\n    });\n  }\n\n  /**\n   * After the view and its components are initialized, the zoom library will be patched to only allow zoom on center\n   */\n  ngAfterViewInit(): void {\n    this.centerContentOnZoom();\n  }\n\n  /**\n   * Takes a snapshot from the webcams video stream and crops it to the area that is visible to the user.\n   *\n   * If the `environment.debugImageManipulations` is turned on will render the cropped image in the browser for verification\n   *\n   * @throws 'Debug webcam image' to interrupt further processing when debugImageManipulations is turned on.\n   *\n   */\n  triggerSnapshot(): Promise {\n    return this.imageManipulationService\n      .cropAndResizeImage(\n        this.webcamComponent.nativeVideoElement,\n        this.getViewFinder(),\n        this.pinchZoomComponent.scale,\n        this.applicationConfigService.getSnapDimension()\n      )\n      .then((manipulatedImage) => {\n        if (this.debugImageManipulations()) {\n          this.drawDebugImage(manipulatedImage.blob);\n          throw 'Debug webcam image';\n        }\n        this.logger.info('Received webcam image', manipulatedImage);\n        return manipulatedImage;\n      });\n  }\n\n  /**\n   * If `autoSnap` is enabled then only the tv-frame is used as viewFinder, otherwise the whole visible are is used.\n   * @private\n   */\n  private getViewFinder(): HTMLElement {\n    return this.applicationConfigService.isAutoSnapEnabled()\n      ? this.viewFinder.nativeElement\n      : this.webcamComponentElement.nativeElement;\n  }\n\n  /**\n   * Converts a blob image into a dataUrl which can be rendered in the template\n   * @param blob\n   * @private\n   */\n  private drawDebugImage(blob: Blob): void {\n    const reader = new FileReader();\n    reader.onloadend = () => (this.imageAsDataUrl = reader.result);\n    reader.readAsDataURL(blob);\n  }\n\n  /**\n   * If the device can't be accessed, triggers the rendering of the according error page.\n   * @param error\n   */\n  handleInitError(error: WebcamInitError): void {\n    this.mediaDeviceStateStore.dispatch(MediaDeviceState.DEVICE_NO_PERMISSION);\n    this.appStateStore.dispatch(AppState.DEVICE_NO_PERMISSION);\n    this.logger.error('Failed to initialize webcam', error);\n  }\n\n  /**\n   * Toggles between available webcams\n   */\n  switchToNextWebcam(): void {\n    this.nextWebcam.next(true);\n  }\n\n  /**\n   * Callback which is executed when the video stream of a webcam is ready for further processing.\n   * @param deviceId: the webcams device id inside the browser\n   */\n  cameraSwitched(deviceId: string) {\n    this.mediaDeviceStateStore.dispatch(MediaDeviceState.DEVICE_CAMERA_READY);\n    this.logger.info('Camera device switched. DeviceId:', deviceId);\n  }\n\n  /**\n   * Used to determine if the debug output of the manipulated image should be shown or not\n   */\n  debugImageManipulations(): boolean {\n    return environment.debugImageManipulations;\n  }\n\n  /**\n   * Patches the ngx-pinch-zoom component by not taking the cursors offset into account when zooming into the video stream.\n   * @private\n   */\n  private centerContentOnZoom(): void {\n    Object.defineProperty(this.pinchZoomComponent.pinchZoom, 'moveX', {\n      get() {\n        return -Math.abs((this.element.offsetWidth * (1 - this.scale)) / 2);\n      },\n      set() {\n        return;\n      },\n    });\n\n    Object.defineProperty(this.pinchZoomComponent.pinchZoom, 'moveY', {\n      get() {\n        return -Math.abs((this.element.offsetHeight * (1 - this.scale)) / 2);\n      },\n      set() {\n        return;\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n    \n    \n  \n\n  Powered by SnapOdds\n\n\n\n  \n\n\n    \n\n    \n                \n                    ./webcam.component.scss\n                \n                @use 'tools';\n@use 'settings';\n@use 'sass:math';\n\n$viewfinder-stroke-width: 4px;\n$viewfinder-stand-offset: 7%;\n\n@mixin aspect-ratio {\n  aspect-ratio: 375/295;\n\n  @include tools.media-tiny--portrait {\n    aspect-ratio: 3/2.2;\n  }\n}\n\n:host {\n  background-color: #000;\n  display: block;\n\n  /* stylelint-disable-next-line selector-pseudo-element-no-unknown */\n  ::ng-deep {\n    .webcam-wrapper {\n      @include aspect-ratio;\n\n      align-items: center;\n      display: flex !important;\n      overflow: hidden;\n    }\n\n    video {\n      height: auto !important;\n      width: 100% !important;\n    }\n\n    pinch-zoom {\n      display: flex;\n    }\n  }\n\n  .c-camera {\n    &--container {\n      @include aspect-ratio;\n\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n      position: relative;\n    }\n\n    &--viewfinder {\n      left: 50%;\n      pointer-events: none;\n      position: absolute;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      width: 90%;\n      z-index: map-get(settings.$z-index, 'viewfinder');\n\n      &__tv-frame {\n        border: $viewfinder-stroke-width solid #fff;\n        box-shadow: 0 0 0 999px rgb(0 0 0 / 50%);\n        content: '';\n        display: block;\n        padding-top: math.div(9, 16) * 100%;\n        position: relative;\n      }\n\n      &__tv-stand {\n        border-bottom: $viewfinder-stroke-width solid #fff;\n        border-radius: 5px;\n        bottom: -$viewfinder-stand-offset;\n        left: 50%;\n        position: absolute;\n        transform: translate(-50%, $viewfinder-stand-offset);\n        width: 15%;\n      }\n\n      &__tv-connector {\n        border-left: $viewfinder-stroke-width solid #fff;\n        bottom: -$viewfinder-stand-offset;\n        content: '';\n        height: $viewfinder-stand-offset;\n        left: 50%;\n        position: absolute;\n        transform: translate(-50%, 0);\n      }\n    }\n\n    &--footer {\n      &__powered-by {\n        bottom: settings.$spacing-sm;\n        color: #fff;\n        font-size: settings.$font-xs;\n        font-weight: 200;\n        left: 0;\n        position: absolute;\n        right: 0;\n        text-align: center;\n        z-index: map-get(settings.$z-index, 'viewfinder') + 1;\n\n        /* stylelint-disable-next-line max-nesting-depth*/\n        @include tools.media-tiny--portrait {\n          bottom: settings.$spacing-xs;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Powered by SnapOdds  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WebcamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/snapodds/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                33 %\n                (6/18)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/content/content.component.ts\n            \n            component\n            ContentComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/help/help.component.ts\n            \n            component\n            HelpComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/odds/odds.component.ts\n            \n            component\n            OddsComponent\n            \n                41 %\n                (5/12)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/snap/snap.component.ts\n            \n            component\n            SnapComponent\n            \n                61 %\n                (11/18)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/spinner/spinner.component.ts\n            \n            component\n            SpinnerComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/svgs/switch.svg.component.ts\n            \n            component\n            SwitchSvgComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/svgs/trigger.svg.component.ts\n            \n            component\n            TriggerSvgComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/trigger/trigger.component.ts\n            \n            component\n            TriggerComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/user-feedback-message/user-feedback-message.component.ts\n            \n            component\n            UserFeedbackMessageComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/webcam/webcam.component.ts\n            \n            component\n            WebcamComponent\n            \n                47 %\n                (10/21)\n            \n        \n        \n            \n                \n                apps/snapodds/src/config/application-config.ts\n            \n            interface\n            ApplicationConfig\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                apps/snapodds/src/models/line-odds.ts\n            \n            interface\n            LineOdds\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/snapodds/src/models/sports-book-line.ts\n            \n            interface\n            SportsBookLine\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                apps/snapodds/src/models/sports-book.ts\n            \n            interface\n            SportsBook\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/api/api-errors.ts\n            \n            class\n            TvSearchNoResultError\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/api/odds.service.ts\n            \n            injectable\n            OddsService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/api/tv-search.service.ts\n            \n            injectable\n            TvSearchService\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/config/application-config.service.ts\n            \n            injectable\n            ApplicationConfigService\n            \n                66 %\n                (12/18)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/config/application-config.service.ts\n            \n            variable\n            DEFAULT_APPLICATION_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/i18n/file-translate-loader.ts\n            \n            class\n            FileTranslateLoader\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/i18n/translation-entries.ts\n            \n            interface\n            TranslationEntries\n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts\n            \n            injectable\n            ImageManipulationService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/logger/log-level.ts\n            \n            function\n            fromLogLevel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/logger/log-level.ts\n            \n            function\n            toLogLevel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/logger/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/notification/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/snap-odds/snap-odds-facade.service.ts\n            \n            injectable\n            SnapOddsFacade\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tokens/console-token.ts\n            \n            variable\n            CONSOLE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tokens/document-token.ts\n            \n            variable\n            DOCUMENT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tokens/location-token.ts\n            \n            variable\n            LOCATION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tokens/navigator-token.ts\n            \n            variable\n            NAVIGATOR\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tokens/storage-token.ts\n            \n            variable\n            STORAGE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tokens/window-token.ts\n            \n            variable\n            WINDOW\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tracking/google-analytics.service.ts\n            \n            injectable\n            GoogleAnalyticsService\n            \n                31 %\n                (5/16)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tracking/google-analytics.service.ts\n            \n            variable\n            ga\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tracking/google-analytics.service.ts\n            \n            variable\n            gtag\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/states/app-state.store.ts\n            \n            injectable\n            AppStateStore\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                apps/snapodds/src/states/media-device-state.store.ts\n            \n            injectable\n            MediaDeviceStateStore\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/auth/access-token.ts\n            \n            interface\n            AccessToken\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/link.ts\n            \n            interface\n            Link\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/odds/competitor.ts\n            \n            interface\n            Competitor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/odds/odds-offer-outcome.ts\n            \n            interface\n            OddsOfferOutcome\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/odds/odds-offer.ts\n            \n            interface\n            OddsOffer\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/odds/odds-response.ts\n            \n            interface\n            OddsResponse\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/odds/player.ts\n            \n            interface\n            Player\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/odds/sports-book.ts\n            \n            interface\n            SportsBook\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/tv-search/point2d.ts\n            \n            interface\n            Point2d\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/tv-search/quadrangle2d.ts\n            \n            interface\n            Quadrangle2d\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/tv-search/sport-event.ts\n            \n            interface\n            SportEvent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/tv-search/tv-channel.ts\n            \n            interface\n            TvChannel\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/tv-search/tv-search-result-entry.ts\n            \n            interface\n            TvSearchResultEntry\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/tv-search/tv-search-result.ts\n            \n            interface\n            TvSearchResult\n            \n                100 %\n                (4/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 13.1.3\n        \n            @angular/common : 13.1.3\n        \n            @angular/compiler : 13.1.3\n        \n            @angular/core : 13.1.3\n        \n            @angular/elements : 13.1.3\n        \n            @angular/forms : 13.1.3\n        \n            @angular/platform-browser : 13.1.3\n        \n            @angular/platform-browser-dynamic : 13.1.3\n        \n            @angular/router : 13.1.3\n        \n            @ngx-translate/core : ^14.0.0\n        \n            @nrwl/angular : 13.4.6\n        \n            cors : ^2.8.5\n        \n            date-fns : ^2.28.0\n        \n            dotenv : ^10.0.0\n        \n            express : 4.17.1\n        \n            ngx-pinch-zoom : ^2.6.2\n        \n            ngx-webcam : ^0.4.1\n        \n            rxjs : ~7.4.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppState   (apps/.../app-state.store.ts)\n                        \n                        \n                            LogLevel   (apps/.../log-level.ts)\n                        \n                        \n                            MediaDeviceState   (apps/.../media-device-state.store.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/snapodds/src/states/app-state.store.ts\n    \n        \n            \n                \n                    \n                        \n                        AppState\n                    \n                \n                    \n                        \n                            The various AppStates which are used for determining which view to render\n\n                        \n                    \n                        \n                            \n                                 SHOW_HELP\n                            \n                        \n                        \n                            \n                                Value : SHOW_HELP\n                            \n                        \n                        \n                            \n                                 SHOW_ODDS\n                            \n                        \n                        \n                            \n                                Value : SHOW_ODDS\n                            \n                        \n                        \n                            \n                                 SNAP_READY\n                            \n                        \n                        \n                            \n                                Value : SNAP_READY\n                            \n                        \n                        \n                            \n                                 SNAP_IN_PROGRESS\n                            \n                        \n                        \n                            \n                                Value : SNAP_IN_PROGRESS\n                            \n                        \n                        \n                            \n                                 SNAP_FAILED\n                            \n                        \n                        \n                            \n                                Value : SNAP_FAILED\n                            \n                        \n                        \n                            \n                                 SNAP_NO_RESULTS\n                            \n                        \n                        \n                            \n                                Value : SNAP_NO_RESULTS\n                            \n                        \n                        \n                            \n                                 DEVICE_NO_CAMERA\n                            \n                        \n                        \n                            \n                                Value : DEVICE_NO_CAMERA\n                            \n                        \n                        \n                            \n                                 DEVICE_NO_PERMISSION\n                            \n                        \n                        \n                            \n                                Value : DEVICE_NO_PERMISSION\n                            \n                        \n            \n        \n\n    apps/snapodds/src/services/logger/log-level.ts\n    \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                    \n                        \n                            Possible LogLevels, ordered by severity\n\n                        \n                    \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 SILENT\n                            \n                        \n            \n        \n\n    apps/snapodds/src/states/media-device-state.store.ts\n    \n        \n            \n                \n                    \n                        \n                        MediaDeviceState\n                    \n                \n                    \n                        \n                            The various MediaDeviceState which are used rendering user feedback\n\n                        \n                    \n                        \n                            \n                                 DEVICE_INIT\n                            \n                        \n                        \n                            \n                                Value : DEVICE_INIT\n                            \n                        \n                        \n                            \n                                 DEVICE_CAMERA_READY\n                            \n                        \n                        \n                            \n                                Value : DEVICE_CAMERA_READY\n                            \n                        \n                        \n                            \n                                 DEVICE_NO_PERMISSION\n                            \n                        \n                        \n                            \n                                Value : DEVICE_NO_PERMISSION\n                            \n                        \n                        \n                            \n                                 DEVICE_NO_CAMERA\n                            \n                        \n                        \n                            \n                                Value : DEVICE_NO_CAMERA\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            fromLogLevel   (apps/.../log-level.ts)\n                        \n                        \n                            toLogLevel   (apps/.../log-level.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/snapodds/src/services/logger/log-level.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fromLogLevel\n                        \n                    \n                \n            \n            \n                \nfromLogLevel(logLevel: LogLevel)\n                \n            \n\n\n\n\n            \n                \n                    Convert LogLevel to string representation\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logLevel\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toLogLevel\n                        \n                    \n                \n            \n            \n                \ntoLogLevel(logLevel)\n                \n            \n\n\n\n\n            \n                \n                    Convert a string to a LogLevel\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logLevel\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LogLevel\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSnapOdds\nThis project was generated using Nx.\nDocumentation\nClient Documentation\nSource Code Documentation\nProjects\n\nSnapOdds\nSnapOdds is the main application and contains the angular element which is distributed as web component.\n\nSnapOdds Api\nSnapOdds API app is an express.js server which is used for development.\n\nSnapOdds Builder\nSnapOdds Builder is used to provide a wrapper for the initialization and configuration of the SnapOdds web component.\n\n\nLibraries\n\nResponses\nIt contains the typings for the REST endpoints of the SnapScreen API.\n\nDevelopment server\nRun ng serve snapodds for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nRun ng serve snapodds-api for a dev api server available on http://localhost:3333/\nCode scaffolding\nRun ng g component my-component --project=snapodds to generate a new component.\nBuild\nRun ng build snapodds to build the project. The build artifacts will be stored in the dist/snapodds directory. Use the --prod flag for a production build.\nRelease\nRun npm run build:elements to build the project and all its peer dependencies. The build artifacts will be stored in the dist/elements/ directory.\nRunning all unit tests\nRun npm run test to execute all unit tests via Jest.\nRun nx affected:test to execute only the unit tests affected by a change.\nUnderstand your workspace\nRun nx dep-graph to see a diagram of the dependencies of your projects.\nFurther help\nNx Documentation\n10-minute video showing all Nx features\nInteractive Tutorial\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nAppModule -->\n\nContentComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHelpComponent\n\nHelpComponent\n\nAppModule -->\n\nHelpComponent->AppModule\n\n\n\n\n\nOddsComponent\n\nOddsComponent\n\nAppModule -->\n\nOddsComponent->AppModule\n\n\n\n\n\nSnapComponent\n\nSnapComponent\n\nAppModule -->\n\nSnapComponent->AppModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nAppModule -->\n\nSpinnerComponent->AppModule\n\n\n\n\n\nSwitchSvgComponent\n\nSwitchSvgComponent\n\nAppModule -->\n\nSwitchSvgComponent->AppModule\n\n\n\n\n\nTriggerComponent\n\nTriggerComponent\n\nAppModule -->\n\nTriggerComponent->AppModule\n\n\n\n\n\nTriggerSvgComponent\n\nTriggerSvgComponent\n\nAppModule -->\n\nTriggerSvgComponent->AppModule\n\n\n\n\n\nUserFeedbackMessageComponent\n\nUserFeedbackMessageComponent\n\nAppModule -->\n\nUserFeedbackMessageComponent->AppModule\n\n\n\n\n\nWebcamComponent\n\nWebcamComponent\n\nAppModule -->\n\nWebcamComponent->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    19 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ManipulatedImage   (apps/.../manipulated-image.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/snapodds/src/services/image-manipulation/manipulated-image.ts\n    \n    \n        \n            \n                \n                    \n                    ManipulatedImage\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CONSOLE   (apps/.../console-token.ts)\n                        \n                        \n                            DEFAULT_APPLICATION_CONFIG   (apps/.../application-config.service.ts)\n                        \n                        \n                            DOCUMENT   (apps/.../document-token.ts)\n                        \n                        \n                            ga   (apps/.../google-analytics.service.ts)\n                        \n                        \n                            gtag   (apps/.../google-analytics.service.ts)\n                        \n                        \n                            LOCATION   (apps/.../location-token.ts)\n                        \n                        \n                            NAVIGATOR   (apps/.../navigator-token.ts)\n                        \n                        \n                            STORAGE   (apps/.../storage-token.ts)\n                        \n                        \n                            WINDOW   (apps/.../window-token.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/snapodds/src/services/tokens/console-token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CONSOLE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('browser console implementation', {\n  providedIn: 'root',\n  factory: () => console,\n})\n                    \n                \n\n            \n                \n                    InjectionToken for the browser console implementation\n\n                \n            \n\n        \n    \n\n    apps/snapodds/src/services/config/application-config.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_APPLICATION_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  apiUrl: 'https://api.us.snapscreen.com',\n  language: 'en',\n  autoSnap: false,\n  logLevel: LogLevel.SILENT,\n  vibrate: false,\n  logCallback: noop,\n  closeCallback: noop,\n  resultsCallback: noop,\n  accessTokenProvider: () => Promise.reject('No accessTokenProvider specified'),\n}\n                    \n                \n\n            \n                \n                    Default application configuration\n\n                \n            \n\n        \n    \n\n    apps/snapodds/src/services/tokens/document-token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DOCUMENT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('browser document implementation', {\n  providedIn: 'root',\n  factory: () => document,\n})\n                    \n                \n\n            \n                \n                    InjectionToken for the browser document implementation\n\n                \n            \n\n        \n    \n\n    apps/snapodds/src/services/tracking/google-analytics.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ga\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Function\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gtag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Function\n\n                    \n                \n\n\n        \n    \n\n    apps/snapodds/src/services/tokens/location-token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOCATION\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('browser location implementation', {\n  providedIn: 'root',\n  factory: () => location,\n})\n                    \n                \n\n            \n                \n                    InjectionToken for the browser location implementation\n\n                \n            \n\n        \n    \n\n    apps/snapodds/src/services/tokens/navigator-token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NAVIGATOR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('browser navigator implementation', {\n  providedIn: 'root',\n  factory: () => navigator,\n})\n                    \n                \n\n            \n                \n                    InjectionToken for the browser navigator implementation\n\n                \n            \n\n        \n    \n\n    apps/snapodds/src/services/tokens/storage-token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        STORAGE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('browser local storage implementation', {\n  providedIn: 'root',\n  factory: () => localStorage,\n})\n                    \n                \n\n            \n                \n                    InjectionToken for the browser local storage implementation\n\n                \n            \n\n        \n    \n\n    apps/snapodds/src/services/tokens/window-token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        WINDOW\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('browser window implementation', {\n  providedIn: 'root',\n  factory: () => window,\n})\n                    \n                \n\n            \n                \n                    InjectionToken for the browser window implementation\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
