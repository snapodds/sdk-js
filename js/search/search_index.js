var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AccessToken.html",[0,0.288,1,1.928]],["body/interfaces/AccessToken.html",[0,0.393,1,3.226,2,1.259,3,0.202,4,0.202,5,0.202,6,4.493,7,4.025,8,0.308,9,1.027,10,7.182,11,1.296,12,7.182,13,7.182,14,7.182,15,7.182,16,7.182,17,1.68,18,0.404,19,0.017,20,2.259,21,0.228,22,0.014,23,0.014]],["title/components/AppComponent.html",[24,0.706,25,1.249]],["body/components/AppComponent.html",[1,1.19,3,0.091,4,0.091,5,0.091,8,0.139,9,0.589,11,0.618,17,1.286,18,0.367,19,0.017,21,0.103,22,0.008,23,0.008,24,1.017,25,1.66,26,1.372,27,1.764,28,0.969,29,1.764,30,0.924,31,2.031,32,1.96,33,3.471,34,0.806,35,2.796,36,2.669,37,4.491,38,1.508,39,4.488,40,1.583,41,3.658,42,2.475,43,3.592,44,1.008,45,4.371,46,3.915,47,5.063,48,5.063,49,5.063,50,2.883,51,3.575,52,3.077,53,3.077,54,3.575,55,3.788,56,3.575,57,3.123,58,3.575,59,3.303,60,3.575,61,1.311,62,1.661,63,2.513,64,6.061,65,3.471,66,3.077,67,3.451,68,1.684,69,2.352,70,1.008,71,0.667,72,3.077,73,2.352,74,2.352,75,2.087,76,2.352,77,2.352,78,2.352,79,2.352,80,2.352,81,2.352,82,3.658,83,2.352,84,2.352,85,3.658,86,2.829,87,3.658,88,3.658,89,1.311,90,2.223,91,1.96,92,1.654,93,2.392,94,2.352,95,2.829,96,3.158,97,1.851,98,3.158,99,3.575,100,3.658,101,3.658,102,2.352,103,1.471,104,3.158,105,3.158,106,2.352,107,3.658,108,2.583,109,2.083,110,3.658,111,3.658,112,2.352,113,2.583,114,3.158,115,3.158,116,2.583,117,3.648,118,3.359,119,0.882,120,1.348,121,2.352,122,3.658,123,2.829,124,2.223,125,1.96,126,3.158,127,3.658,128,2.352,129,2.352,130,1.372,131,2.829,132,2.352,133,0.528,134,4.073,135,0.477,136,1.534,137,1.661,138,1.128,139,1.661,140,1.19,141,1.819,142,2.031,143,1.661,144,2.031,145,1.819,146,1.339,147,1.534,148,1.534,149,0.397,150,1.534,151,1.19,152,1.339,153,2.031,154,2.352,155,3.658,156,2.352,157,0.806,158,1.589,159,2.352,160,2.352,161,2.352,162,2.352,163,2.352,164,2.352,165,2.352,166,2.352,167,2.352,168,2.352,169,2.352,170,2.352,171,2.352,172,2.352,173,2.352,174,2.352,175,1.819,176,1.508,177,1.128,178,1.07,179,0.969,180,1.96,181,1.753,182,1.851,183,1.128,184,1.07,185,1.851,186,1.07,187,2.405,188,3.658,189,2.156,190,2.352,191,1.19,192,2.352,193,1.429,194,1.819,195,1.07,196,1.429,197,2.352,198,0.924,199,1.438,200,1.311,201,0.924,202,0.924,203,0.924,204,0.771,205,0.924,206,0.771,207,0.924,208,0.771,209,0.924,210,0.771,211,0.924,212,0.771,213,0.924,214,0.771,215,0.545,216,0.924,217,0.771,218,0.924,219,0.771,220,0.924,221,0.771,222,0.882,223,1.438,224,0.771,225,0.924,226,0.771,227,0.771,228,0.648,229,0.771,230,0.924,231,0.771,232,0.806,233,0.924,234,0.924]],["title/modules/AppModule.html",[235,3.289,236,2.69]],["body/modules/AppModule.html",[3,0.126,4,0.126,5,0.126,19,0.017,21,0.143,22,0.01,23,0.01,24,1.105,25,2.265,32,1.748,37,2.522,44,0.898,68,0.756,92,0.861,93,1.118,113,3.298,133,0.673,135,0.662,136,3.56,137,2.303,149,0.551,204,2.151,206,2.151,208,2.151,210,2.151,212,2.151,214,2.151,215,0.756,217,2.151,219,2.151,221,2.151,224,2.151,226,2.151,227,2.151,228,0.898,229,1.531,231,2.151,232,1.118,236,5.571,237,2.522,238,3.047,239,2.816,240,2.816,241,4.279,242,4.279,243,3.852,244,1.857,245,2.522,246,3.262,247,4.671,248,4.671,249,5.456,250,3.262,251,4.032,252,4.032,253,4.671,254,2.522,255,4.671,256,5.957,257,4.671,258,3.262,259,2.816,260,4.671,261,2.816,262,1.982,263,4.032,264,3.262,265,4.671,266,2.522,267,4.671,268,3.298,269,3.262,270,1.564,271,4.671,272,3.262,273,3.262,274,3.262,275,3.262,276,3.262,277,2.522,278,3.262,279,3.262,280,3.262,281,3.262,282,3.262,283,3.262,284,3.262,285,3.262,286,3.262,287,2.522,288,3.262,289,2.816,290,3.262,291,3.262,292,3.262,293,3.262,294,3.262,295,2.303,296,2.816,297,3.262,298,1.857,299,1.748,300,4.671,301,3.262,302,3.262,303,3.262]],["title/injectables/AppStateStore.html",[67,2.169,304,1.005]],["body/injectables/AppStateStore.html",[3,0.159,4,0.159,5,0.159,8,0.242,9,0.881,11,0.692,18,0.295,19,0.017,21,0.239,22,0.012,23,0.012,42,2.413,44,1.506,67,3.113,68,1.585,70,1.128,71,0.539,89,1.468,92,1.442,93,1.873,103,1.792,119,2.309,120,1.849,130,1.536,133,0.476,135,0.831,146,4.158,149,0.692,157,1.403,158,2.32,304,1.442,305,1.772,306,5.444,307,2.891,308,5.313,309,6.154,310,6.205,311,4.719,312,5.079,313,4.719,314,4.094,315,4.227,316,4.094,317,4.719,318,4.227,319,3.464,320,2.051,321,4.719,322,4.094,323,5.467,324,5.467,325,4.094,326,4.227,327,5.467,328,3.86,329,4.719,330,4.094,331,2.488,332,3.535,333,1.863,334,2.671,335,3.535,336,3.535,337,2.671,338,3.535,339,4.719,340,4.719,341,4.227,342,4.719,343,4.719,344,4.719,345,4.227,346,4.227,347,1.772,348,1.772,349,3.535,350,1.403,351,3.535]],["title/interfaces/ApplicationConfig.html",[0,0.288,97,1.928]],["body/interfaces/ApplicationConfig.html",[0,0.297,1,3.051,2,0.951,3,0.152,4,0.152,5,0.152,8,0.232,9,0.857,17,1.509,18,0.395,19,0.017,21,0.172,22,0.011,23,0.011,37,5.379,43,2.106,51,4.56,52,4.227,53,3.925,54,4.56,55,4.538,56,4.56,57,4.259,58,4.56,59,4.538,72,4.396,75,2.867,89,2.315,90,3.231,93,2.066,97,2.691,117,3.461,130,2.61,131,4.112,133,0.463,138,1.884,142,3.392,143,2.774,150,2.563,151,1.989,152,2.237,352,3.392,353,3.392,354,4.538,355,5.379,356,4.112,357,6.458,358,6.458,359,4.112,360,5.318,361,5.318,362,4.591,363,2.549,364,5.318,365,5.318,366,4.591,367,4.112,368,5.318,369,2.85,370,4.112,371,3.755,372,5.318]],["title/injectables/ApplicationConfigService.html",[63,1.649,304,1.005]],["body/injectables/ApplicationConfigService.html",[1,1.161,3,0.089,4,0.089,5,0.089,8,0.136,9,0.578,11,0.916,17,1.06,18,0.352,19,0.017,20,2.038,21,0.1,22,0.008,23,0.008,42,2.481,44,0.988,51,4.241,52,2.685,53,3.294,54,1.62,55,2.882,56,1.62,57,3.792,58,1.62,59,2.882,60,2.533,63,1.553,68,1.666,70,1.493,71,0.714,75,2.475,90,2.18,91,1.923,92,1.966,93,2.13,97,3.146,103,1.176,108,1.62,109,2.043,116,3.527,117,3.08,119,2.397,120,1.919,123,2.774,125,1.923,130,1.346,133,0.472,135,0.466,138,1.1,143,1.62,149,0.388,150,2.341,151,2.744,152,1.306,157,2.189,158,2.123,228,0.988,245,2.774,295,1.62,299,1.23,304,0.947,305,0.993,333,1.044,347,0.993,348,0.993,350,1.97,354,3.75,363,1.72,369,1.923,373,5.598,374,1.774,375,4.418,376,4.418,377,4.418,378,5.748,379,4.418,380,4.996,381,3.588,382,3.588,383,4.996,384,3.588,385,4.996,386,4.996,387,4.996,388,4.996,389,4.996,390,3.588,391,3.588,392,2.294,393,4.058,394,3.097,395,3.588,396,2.294,397,2.043,398,2.18,399,3.588,400,2.294,401,3.588,402,2.677,403,3.588,404,2.294,405,2.774,406,1.923,407,3.097,408,3.588,409,3.588,410,2.294,411,3.527,412,2.774,413,0.466,414,5.421,415,2.845,416,2.774,417,3.097,418,3.097,419,3.097,420,2.043,421,2.774,422,2.294,423,2.294,424,2.294,425,3.097,426,3.588,427,3.097,428,2.294,429,3.527,430,3.097,431,2.294,432,2.774,433,2.043,434,3.588,435,6.215,436,2.294,437,3.097,438,2.774,439,4.996,440,2.685,441,3.588,442,2.294,443,3.588,444,3.588,445,2.294,446,3.588,447,2.294,448,3.588,449,2.294,450,3.863,451,2.294,452,3.588,453,2.294,454,2.294,455,2.294,456,4.313,457,1.394,458,1.774,459,2.294,460,1.774,461,1.981,462,1.981,463,1.981,464,1.981,465,2.294,466,2.294,467,2.294,468,4.418,469,3.588,470,2.294,471,2.294,472,2.294,473,2.294,474,2.294,475,2.294,476,2.294,477,2.294,478,2.294,479,2.294,480,2.294,481,2.294,482,2.294,483,2.294]],["title/injectables/AuthService.html",[304,1.005,484,2.485]],["body/injectables/AuthService.html",[1,3.847,3,0.133,4,0.133,5,0.133,8,0.203,9,0.781,11,1.128,17,1.455,18,0.347,19,0.017,20,1.127,21,0.15,22,0.01,23,0.01,42,2.545,44,1.335,61,1.232,62,2.426,63,2.888,68,1.65,70,1.335,71,0.639,75,2.514,86,3.748,92,1.809,95,3.748,109,2.76,119,1.289,120,1.032,133,0.56,135,0.698,138,1.647,140,1.739,149,0.581,157,2.287,158,1.914,298,1.957,304,1.279,305,1.487,319,2.842,320,1.818,331,2.088,333,1.564,347,1.487,348,1.487,350,1.178,354,3.162,371,3.422,413,0.698,440,2.945,457,2.088,484,3.162,485,2.967,486,5.615,487,5.615,488,6.099,489,6.099,490,6.099,491,6.099,492,4.847,493,4.847,494,3.436,495,4.847,496,3.436,497,4.185,498,3.706,499,4.847,500,6.099,501,5.581,502,3.436,503,3.748,504,4.847,505,6.099,506,4.847,507,4.847,508,3.436,509,6.099,510,3.422,511,4.847,512,4.847,513,4.847,514,4.847,515,3.436,516,4.847,517,4.185,518,4.847,519,3.422,520,4.847,521,3.436,522,3.436,523,4.847,524,3.436,525,3.436,526,2.967,527,3.436,528,3.436,529,3.436,530,3.436,531,3.436,532,3.436,533,3.436,534,3.436,535,5.615,536,3.436,537,3.436,538,3.436,539,3.436]],["title/pipes/BestOfferLinePipe.html",[241,2.485,540,2.315]],["body/pipes/BestOfferLinePipe.html",[2,1.501,3,0.193,4,0.193,5,0.193,11,0.842,18,0.269,19,0.017,21,0.218,22,0.013,23,0.013,32,2.669,34,1.707,44,1.372,68,1.154,70,1.372,71,0.89,89,2.224,92,1.314,130,2.328,133,0.588,135,1.011,149,0.842,157,1.707,195,3.311,241,4.047,350,1.707,540,4.298,541,3.852,542,5.356,543,4.3,544,6.204,545,3.25,546,6.204,547,4.027,548,4.572,549,4.981,550,6.204,551,6.204,552,5.356,553,6.204,554,6.204,555,5.356,556,3.852,557,1.958,558,3.533,559,3.852,560,2.155]],["title/interfaces/BestOfferLineViewModel.html",[0,0.288,548,2.315]],["body/interfaces/BestOfferLineViewModel.html",[0,0.373,2,1.193,3,0.191,4,0.191,5,0.191,8,0.292,9,0.993,11,1.25,17,1.625,18,0.363,19,0.017,21,0.216,22,0.013,23,0.013,71,0.975,89,2.21,133,0.429,195,2.805,547,3.83,548,3.746,557,2.95,558,2.808,560,2.134,561,3.813,562,3.217,563,4.353,564,7.047,565,7.047,566,7.047,567,4.213,568,3.547,569,4.767,570,5.322,571,3.51,572,2.808]],["title/interfaces/BestOfferViewModel.html",[0,0.288,573,2.485]],["body/interfaces/BestOfferViewModel.html",[0,0.401,2,1.284,3,0.206,4,0.206,5,0.206,8,0.314,9,1.039,17,1.475,18,0.348,19,0.017,21,0.232,22,0.014,23,0.014,71,0.993,89,2.312,133,0.462,195,3.162,334,4.208,548,4.393,557,2.535,558,3.021,560,2.791,561,4.103,562,3.462,568,2.544,572,3.673,573,4.208,574,5.591,575,4.988,576,4.988,577,6.45,578,4.988]],["title/interfaces/Competitor.html",[0,0.288,579,2.169]],["body/interfaces/Competitor.html",[0,0.412,2,1.318,3,0.211,4,0.211,5,0.211,8,0.322,9,1.056,17,1.492,18,0.353,19,0.017,20,2.305,21,0.238,22,0.014,23,0.014,71,0.999,363,3.37,413,1.106,579,4.365,580,4.704,581,4.214,582,2.758,583,4.272,584,4.606]],["title/components/ContentComponent.html",[24,0.706,204,1.249]],["body/components/ContentComponent.html",[3,0.179,4,0.179,5,0.179,19,0.017,21,0.202,22,0.013,23,0.013,24,1.211,25,1.515,26,2.22,27,2.326,28,1.905,29,1.817,30,1.817,34,1.584,35,3.082,36,2.942,38,2.439,71,0.78,103,1.515,133,0.402,135,0.938,149,0.781,179,1.905,184,2.103,185,3.304,189,2.705,198,1.817,199,2.326,200,2.121,201,1.817,202,1.817,203,1.817,204,2.256,205,1.817,206,1.515,207,1.817,208,1.515,209,1.817,210,1.515,211,1.817,212,1.515,213,1.817,214,1.515,215,1.071,216,1.817,217,1.515,218,1.817,219,1.515,220,1.817,221,1.515,222,1.734,223,2.326,224,1.515,225,1.817,226,1.515,227,1.515,228,1.273,229,1.515,230,1.817,231,1.515,232,1.584,233,1.817,234,1.817,585,3.99,586,3.717,587,6.528,588,5.109,589,2.809,590,2.809,591,3.264,592,3.264,593,3.015,594,3.574]],["title/classes/FileTranslateLoader.html",[149,0.644,268,2.69]],["body/classes/FileTranslateLoader.html",[3,0.171,4,0.171,5,0.171,8,0.261,9,0.924,11,0.744,17,1.354,18,0.309,19,0.017,21,0.193,22,0.012,23,0.012,32,3.074,42,2.316,44,1.58,55,4.409,68,1.329,70,1.213,71,0.58,92,1.162,98,5.508,114,6.317,119,1.653,120,1.323,133,0.61,136,2.874,137,3.11,149,0.744,157,1.51,158,2.002,263,5.508,268,4.051,270,3.058,295,4.051,319,3.229,320,2.152,331,4.366,333,2.004,350,1.51,402,3.074,413,0.894,438,5.419,595,3.406,596,5.508,597,3.803,598,5.737,599,6.38,600,5.737,601,6.38,602,4.405,603,5.737,604,5.737,605,4.953,606,4.051,607,5.737,608,5.737,609,4.953,610,5.737,611,4.405,612,4.953,613,5.737,614,5.737,615,5.737,616,4.051,617,3.11,618,4.405,619,4.405,620,4.405]],["title/components/FooterComponent.html",[24,0.706,206,1.249]],["body/components/FooterComponent.html",[3,0.175,4,0.175,5,0.175,19,0.017,21,0.197,22,0.012,23,0.012,24,1.197,25,1.479,26,2.186,27,2.29,28,1.859,29,1.773,30,1.773,34,1.546,35,3.074,36,2.934,38,2.401,71,0.768,103,1.479,133,0.393,135,0.916,149,0.762,176,2.401,177,2.162,178,2.053,179,1.859,184,2.053,185,3.266,189,2.68,198,1.773,199,2.29,200,2.088,201,1.773,202,1.773,203,1.773,204,1.479,205,1.773,206,2.236,207,1.773,208,1.479,209,1.773,210,1.479,211,1.773,212,1.479,213,1.773,214,1.479,215,1.045,216,1.773,217,1.479,218,1.773,219,1.479,220,1.773,221,1.479,222,1.692,223,2.29,224,1.479,225,1.773,226,1.479,227,1.479,228,1.243,229,1.479,230,1.773,231,1.479,232,1.546,233,1.773,234,1.773,589,2.741,590,2.741,621,3.894,622,4.113,623,6.453,624,4.511,625,2.053,626,3.801,627,3.54,628,3.317,629,3.185,630,2.417,631,2.741,632,2.741,633,2.741,634,2.569]],["title/injectables/GoogleAnalyticsService.html",[66,2.315,304,1.005]],["body/injectables/GoogleAnalyticsService.html",[3,0.106,4,0.106,5,0.106,8,0.161,9,0.659,11,1.078,17,1.525,18,0.362,19,0.017,20,2.307,21,0.119,22,0.009,23,0.009,42,2.559,44,1.127,61,0.976,66,2.486,68,1.679,70,1.758,71,0.841,72,3.32,75,2.252,92,1.857,93,2.412,99,3.857,109,2.329,115,3.531,119,1.535,120,2.017,133,0.356,135,0.553,149,0.46,157,1.402,158,2.002,298,1.55,299,2.192,304,1.079,305,1.178,347,1.178,348,1.178,350,1.872,363,3.279,397,2.329,413,0.553,635,5.646,636,2.105,637,4.242,638,4.242,639,5.463,640,5.463,641,5.463,642,5.463,643,5.463,644,5.463,645,4.091,646,4.091,647,4.091,648,4.091,649,4.091,650,4.091,651,2.105,652,3.114,653,4.091,654,2.722,655,5.463,656,6.151,657,5.463,658,3.738,659,2.722,660,6.151,661,2.722,662,2.722,663,2.722,664,2.722,665,4.091,666,2.722,667,5.311,668,4.091,669,2.722,670,4.091,671,2.722,672,4.091,673,2.722,674,4.091,675,4.091,676,6.947,677,6.715,678,2.35,679,4.091,680,2.722,681,4.717,682,4.091,683,2.722,684,4.091,685,2.722,686,4.091,687,1.922,688,4.091,689,3.163,690,3.163,691,2.35,692,2.722,693,2.722,694,2.722,695,2.722,696,2.722,697,2.722,698,4.914,699,2.722,700,2.722,701,2.722,702,2.722,703,2.35,704,1.961,705,2.35,706,3.531,707,2.722,708,2.722,709,2.722,710,2.722,711,2.722,712,1.922,713,4.091,714,2.35,715,2.722,716,2.722,717,2.722,718,2.722,719,2.722,720,2.722,721,2.722,722,2.722,723,2.722,724,2.722,725,2.722]],["title/components/HeaderComponent.html",[24,0.706,208,1.249]],["body/components/HeaderComponent.html",[3,0.138,4,0.138,5,0.138,8,0.21,11,0.6,18,0.192,19,0.017,21,0.155,22,0.011,23,0.011,24,1.06,25,1.164,26,1.861,27,1.396,28,1.464,29,1.396,30,1.396,34,1.217,35,2.986,36,2.851,38,2.044,40,2.147,44,1.366,61,1.273,62,2.508,63,3.056,68,1.149,70,0.978,71,0.753,92,0.937,93,1.7,103,1.164,133,0.432,135,0.721,139,2.508,140,1.798,149,0.6,158,1.114,176,2.044,177,1.702,178,1.616,179,1.464,182,1.798,183,2.74,184,1.616,185,3.132,186,2.601,187,2.658,189,2.432,191,2.511,198,1.396,199,1.95,200,1.778,201,1.396,202,1.396,203,1.396,204,1.164,205,1.396,206,1.164,207,1.396,208,2.029,209,1.396,210,1.164,211,1.396,212,1.164,213,1.396,214,1.164,215,0.823,216,1.396,217,1.164,218,1.396,219,1.164,220,1.396,221,1.164,222,1.332,223,1.95,224,1.164,225,1.396,226,1.164,227,1.164,228,0.978,229,1.164,230,1.396,231,1.164,232,1.217,233,1.396,234,1.396,244,2.022,270,2.378,298,2.022,326,3.836,356,3.836,394,4.282,420,3.523,592,2.508,627,2.158,628,3.84,630,3.064,631,3.014,632,2.158,633,3.474,634,3.707,714,3.066,726,3.066,727,4.421,728,5.716,729,4.96,730,6.188,731,3.551,732,3.551,733,4.96,734,4.282,735,3.551,736,4.282,737,2.317,738,3.551,739,2.317,740,2.746,741,2.508,742,2.746,743,3.76,744,3.066,745,3.066,746,3.014,747,3.066,748,2.508,749,2.317,750,3.014,751,1.798,752,3.236,753,2.824,754,3.066,755,2.158,756,3.551,757,3.551,758,3.236,759,3.551,760,2.508,761,2.317]],["title/components/HelpComponent.html",[24,0.706,210,1.249]],["body/components/HelpComponent.html",[3,0.109,4,0.109,5,0.109,8,0.167,11,0.477,18,0.152,19,0.017,21,0.123,22,0.009,23,0.009,24,0.931,25,0.925,26,1.576,27,1.108,28,1.162,29,1.108,30,1.108,34,0.966,35,2.886,36,2.788,38,1.731,40,1.817,44,1.157,61,1.011,67,3.549,68,0.973,70,0.777,71,0.661,90,2.552,92,0.744,93,1.439,103,0.925,133,0.366,135,0.572,146,2.857,147,1.84,148,1.84,149,0.477,158,0.885,175,2.181,176,1.731,177,1.352,178,1.283,179,1.162,180,1.511,181,2.013,182,2.126,183,1.352,184,1.283,185,2.54,186,1.283,187,2.689,189,2.185,191,2.126,193,1.714,194,2.181,198,1.108,199,1.651,200,1.505,201,1.108,202,1.108,203,1.108,204,0.925,205,1.108,206,0.925,207,1.108,208,0.925,209,1.108,210,1.823,211,1.108,212,0.925,213,1.108,214,0.925,215,0.653,216,1.108,217,0.925,218,1.108,219,0.925,220,1.108,221,0.925,222,1.058,223,1.651,224,0.925,225,1.108,226,0.925,227,0.925,228,0.777,229,0.925,230,1.108,231,0.925,232,0.966,233,1.108,234,1.108,244,1.606,270,2.988,298,1.606,398,2.552,586,1.606,589,1.714,590,1.714,622,1.991,625,1.283,628,3.385,629,2.965,630,1.511,634,3.385,712,2.965,743,3.049,751,1.427,753,2.391,760,2.965,761,1.84,762,2.435,763,3.881,764,5.018,765,4.2,766,5.56,767,2.82,768,2.82,769,2.82,770,3.248,771,3.626,772,3.626,773,2.965,774,6.634,775,6.634,776,6.634,777,6.634,778,6.634,779,5.56,780,5.56,781,5.56,782,6.634,783,6.634,784,5.56,785,5.56,786,5.56,787,5.56,788,5.56,789,5.56,790,7.344,791,5.56,792,5.56,793,5.56,794,5.56,795,5.56,796,5.56,797,5.56,798,5.56,799,5.56,800,5.56,801,5.56,802,5.56,803,5.56,804,5.56,805,5.56,806,5.56,807,5.56,808,5.56,809,5.56,810,5.56,811,5.56,812,3.626,813,1.991,814,1.714,815,2.181,816,2.82,817,1.991,818,2.181]],["title/injectables/ImageManipulationService.html",[304,1.005,819,2.69]],["body/injectables/ImageManipulationService.html",[3,0.081,4,0.267,5,0.081,8,0.124,11,0.98,17,0.708,18,0.335,19,0.017,20,2.503,21,0.092,22,0.007,23,0.007,34,0.717,42,2.442,44,0.919,61,0.75,68,1.343,70,1.597,71,0.764,75,1.375,91,4.003,92,1.458,109,1.9,119,0.785,120,0.629,133,0.413,135,0.425,149,0.354,150,2.715,157,1.777,158,1.047,186,0.953,196,2.529,200,1.196,228,1.522,298,1.192,299,2.544,304,0.88,305,0.906,320,0.785,347,0.906,348,0.906,350,2.382,371,1.478,397,1.9,413,0.964,425,4.099,429,3.352,498,1.272,625,2.16,651,1.619,652,2.403,687,1.478,691,1.807,703,1.807,704,1.6,749,2.177,814,2.529,819,2.356,820,4.655,821,4.655,822,1.807,823,3.337,824,4.161,825,3.593,826,3.337,827,3.337,828,3.337,829,4.483,830,2.093,831,2.093,832,3.337,833,4.099,834,4.748,835,2.093,836,1.619,837,5.186,838,3.662,839,2.093,840,1.807,841,1.807,842,2.093,843,4.161,844,2.093,845,2.093,846,2.093,847,2.093,848,6.204,849,6.355,850,5.356,851,6.801,852,2.093,853,2.881,854,4.748,855,4.099,856,3.337,857,4.771,858,4.273,859,4.273,860,5.197,861,5.526,862,5.526,863,1.06,864,2.093,865,7.173,866,2.093,867,3.337,868,4.099,869,3.337,870,7.072,871,2.093,872,2.881,873,4.748,874,6.801,875,6.711,876,6.88,877,3.337,878,2.093,879,3.337,880,3.337,881,2.093,882,3.337,883,3.337,884,3.337,885,1.366,886,2.093,887,1.478,888,1.807,889,2.093,890,5.526,891,5.186,892,2.093,893,3.337,894,2.093,895,2.093,896,2.093,897,2.093,898,2.093,899,3.337,900,3.337,901,2.093,902,2.093,903,2.093,904,2.093,905,4.161,906,2.093,907,2.093,908,2.093,909,2.093,910,2.093,911,2.093,912,2.093,913,2.093,914,2.093,915,2.093,916,2.093,917,3.337,918,2.093,919,3.337,920,3.337,921,2.581,922,2.093,923,2.093,924,3.337]],["title/interfaces/LineOdds.html",[0,0.288,125,2.042]],["body/interfaces/LineOdds.html",[0,0.354,2,1.134,3,0.182,4,0.182,5,0.182,8,0.277,9,0.962,11,1.234,18,0.373,19,0.017,21,0.205,22,0.013,23,0.013,89,2.139,124,3.627,125,3.707,130,2.239,133,0.572,138,2.246,151,3.021,215,1.383,413,0.951,557,1.841,558,3.398,560,2.027,568,3.149,571,3.398,572,2.667,573,4.512,579,3.938,658,3.398,925,4.044,926,4.044,927,4.214,928,6.917,929,4.765,930,5.648,931,5.349,932,5.969,933,5.969,934,6.305,935,4.203,936,4.512,937,4.616]],["title/interfaces/Link.html",[0,0.288,938,1.826]],["body/interfaces/Link.html",[0,0.433,2,1.387,3,0.222,4,0.222,5,0.222,8,0.339,9,1.088,11,1.141,17,1.524,18,0.364,19,0.016,21,0.251,22,0.014,23,0.014,75,2.96,938,3.238,939,4.947,940,7.416,941,7.416]],["title/injectables/LoggerService.html",[304,1.005,652,1.928]],["body/injectables/LoggerService.html",[3,0.22,4,0.136,5,0.136,8,0.207,11,1.164,18,0.372,19,0.017,21,0.153,22,0.01,23,0.01,42,2.482,44,1.351,57,4.295,61,1.758,62,2.468,63,2.904,68,1.597,70,1.898,71,0.908,75,2.022,92,1.77,93,2.482,97,2.483,109,2.793,116,4.339,133,0.535,135,0.71,140,1.769,143,2.468,149,0.591,151,3.77,152,3.685,157,1.198,158,1.539,222,1.311,304,1.294,305,1.513,347,1.513,348,1.513,350,1.942,362,5.588,429,3.464,457,2.124,498,2.124,575,4.752,652,2.483,704,2.352,885,2.28,942,3.018,943,3.793,944,4.905,945,3.793,946,5.329,947,3.495,948,4.905,949,3.495,950,4.905,951,3.495,952,4.905,953,3.495,954,4.905,955,3.495,956,4.905,957,5.305,958,6.145,959,4.905,960,3.495,961,4.905,962,4.905,963,4.905,964,4.905,965,4.905,966,4.905,967,4.905,968,3.495,969,3.495,970,3.495,971,3.495,972,3.495,973,3.495,974,3.495,975,3.495,976,6.145,977,3.495,978,3.495,979,6.145,980,3.495,981,3.495,982,3.495,983,3.495,984,3.495,985,3.495,986,3.495,987,3.495]],["title/injectables/MediaDeviceStateStore.html",[304,1.005,988,2.485]],["body/injectables/MediaDeviceStateStore.html",[3,0.157,4,0.157,5,0.157,8,0.239,9,0.874,11,0.684,18,0.33,19,0.017,21,0.237,22,0.012,23,0.012,42,2.404,44,1.494,68,1.579,70,1.115,71,0.533,92,1.431,93,1.859,103,1.778,119,2.295,120,1.838,124,2.459,130,1.518,133,0.472,135,0.821,149,0.684,157,1.387,158,2.315,228,1.115,229,1.327,232,1.859,304,1.431,305,1.751,307,2.857,308,5.282,310,6.187,311,4.683,312,5.055,313,4.683,315,4.194,317,4.683,318,4.194,319,3.627,320,2.035,321,4.683,326,4.194,329,4.683,332,3.494,333,1.841,334,2.64,338,3.494,345,4.194,346,4.194,347,1.751,348,1.751,349,3.494,350,1.387,351,3.494,369,3.76,437,3.494,988,3.539,989,5.426,990,6.118,991,5.209,992,4.047,993,4.047,994,4.047,995,4.047,996,5.424,997,5.424,998,5.424,999,5.424,1000,4.047,1001,4.194,1002,5.424,1003,4.047,1004,4.683,1005,4.683]],["title/injectables/NotificationService.html",[304,1.005,1006,2.69]],["body/injectables/NotificationService.html",[3,0.183,4,0.183,5,0.183,8,0.28,11,0.799,18,0.255,19,0.017,21,0.207,22,0.013,23,0.013,42,2.509,44,1.654,59,3.918,61,2.153,63,3.219,68,1.529,70,1.303,71,0.623,72,2.874,75,2.475,92,1.584,93,2.058,133,0.574,135,0.96,140,2.394,149,0.799,157,1.621,158,1.884,304,1.584,305,2.047,347,2.047,348,2.047,369,3.218,429,4.24,457,2.874,498,2.874,706,4.083,885,3.086,1006,4.24,1007,4.083,1008,6.941,1009,5.993,1010,4.73,1011,5.662,1012,4.73,1013,4.73,1014,6.005,1015,6.005,1016,6.005,1017,4.73,1018,6.005,1019,4.73,1020,4.73,1021,4.73,1022,4.73,1023,4.73,1024,4.73]],["title/pipes/NumberFormatPipe.html",[242,2.485,540,2.315]],["body/pipes/NumberFormatPipe.html",[3,0.198,4,0.198,5,0.198,11,0.863,17,1.337,18,0.275,19,0.017,20,2.24,21,0.223,22,0.013,23,0.013,32,2.737,34,1.75,44,1.407,68,1.183,70,1.407,71,0.9,92,1.347,118,3.662,120,2.242,133,0.445,135,1.037,149,0.863,157,2.159,242,4.11,350,1.75,540,3.829,541,3.949,545,3.331,555,5.439,625,2.324,1025,5.439,1026,4.408,1027,5.439,1028,6.3,1029,5.106,1030,6.3,1031,6.3,1032,6.3,1033,5.439,1034,6.3,1035,6.3,1036,6.3]],["title/interfaces/OddsBestOffer.html",[0,0.288,1037,2.485]],["body/interfaces/OddsBestOffer.html",[0,0.416,2,1.333,3,0.214,4,0.214,5,0.214,8,0.326,9,1.063,18,0.297,19,0.017,21,0.241,22,0.014,23,0.014,133,0.575,215,1.277,557,2.776,563,4.659,568,2.641,1037,4.305,1038,3.595,1039,4.261,1040,4.293,1041,5.877,1042,4.777,1043,5.103,1044,4.659,1045,3.349]],["title/interfaces/OddsBestOfferOutcome.html",[0,0.288,1042,2.485]],["body/interfaces/OddsBestOfferOutcome.html",[0,0.411,2,1.316,3,0.211,4,0.211,5,0.211,8,0.322,9,1.055,17,1.49,18,0.293,19,0.017,21,0.238,22,0.014,23,0.014,71,0.862,133,0.473,215,1.627,413,1.104,557,2.137,560,2.832,563,4.622,567,4.15,568,3.138,572,3.727,582,3.313,1042,4.27,1044,4.622,1045,4.268,1046,4.694,1047,4.268]],["title/components/OddsComponent.html",[24,0.706,212,1.249]],["body/components/OddsComponent.html",[3,0.075,4,0.075,5,0.075,8,0.115,9,0.505,11,0.767,18,0.326,19,0.017,20,1.294,21,0.085,22,0.007,23,0.007,24,0.732,25,0.635,26,1.176,27,1.552,28,0.798,29,0.761,30,0.761,32,1.679,34,0.663,35,2.686,36,2.59,38,1.291,40,1.356,42,2.218,44,0.863,45,3.408,50,1.784,61,0.694,68,1.438,70,1.25,71,0.703,92,1.197,93,2.004,103,0.635,117,3.238,118,3.01,119,1.481,120,1.186,123,4.343,125,3.9,133,0.395,134,1.904,135,0.393,138,0.928,149,0.327,158,0.607,176,1.291,177,0.928,178,0.881,179,0.798,180,3.238,181,2.896,182,2.96,183,2.389,184,2.749,185,3.421,186,1.426,187,3.326,189,1.783,191,2.7,193,2.758,195,0.881,196,1.176,198,0.761,199,1.232,200,1.123,201,0.761,202,0.761,203,0.761,204,0.635,205,0.761,206,0.635,207,0.761,208,0.635,209,0.761,210,0.635,211,0.761,212,1.488,213,0.761,214,0.635,215,1.051,216,0.761,217,0.635,218,0.761,219,0.635,220,0.761,221,0.635,222,0.726,223,1.232,224,0.635,225,0.761,226,0.635,227,0.635,228,0.533,229,1.027,230,0.761,231,0.635,232,0.663,233,0.761,234,0.761,244,1.102,270,2.804,298,1.102,318,2.423,320,0.726,328,2.212,350,1.353,354,2.96,363,0.928,370,2.423,402,1.679,413,0.801,415,3.198,420,2.248,433,2.584,440,1.176,501,2.423,503,2.423,557,0.761,568,2.692,569,3.509,571,2.584,583,1.176,586,3.038,589,2.399,590,2.399,591,3.519,592,2.212,593,2.044,594,2.423,625,1.796,626,3.252,627,1.904,628,3.33,630,2.116,631,1.904,632,1.904,633,1.904,634,3.198,704,1.893,727,1.497,737,2.044,739,2.96,740,1.497,741,2.212,742,2.423,743,3.242,746,1.176,750,3.242,751,2.7,753,3.038,755,2.399,758,1.263,760,1.367,761,1.263,773,2.212,813,3.767,814,2.399,815,1.497,817,1.367,818,1.497,863,1.586,921,2.423,929,1.263,937,3.509,1048,1.671,1049,3.948,1050,3.948,1051,3.133,1052,3.948,1053,3.133,1054,3.133,1055,3.133,1056,4.538,1057,2.705,1058,1.936,1059,3.767,1060,3.133,1061,1.936,1062,3.918,1063,3.133,1064,1.936,1065,4.538,1066,2.297,1067,3.133,1068,2.705,1069,3.133,1070,2.705,1071,2.705,1072,2.423,1073,3.133,1074,1.936,1075,3.133,1076,3.133,1077,3.133,1078,1.936,1079,3.133,1080,1.936,1081,1.936,1082,1.936,1083,1.936,1084,2.423,1085,3.133,1086,1.671,1087,1.936,1088,1.936,1089,1.936,1090,3.948,1091,3.133,1092,1.936,1093,1.367,1094,1.936,1095,1.936,1096,3.133,1097,1.936,1098,3.133,1099,2.705,1100,3.133,1101,3.133,1102,3.133,1103,3.133,1104,3.133,1105,2.705,1106,2.705,1107,3.133,1108,4.538,1109,3.133,1110,1.367,1111,1.671,1112,2.705,1113,1.936,1114,2.705,1115,2.705,1116,1.936,1117,1.936,1118,3.133,1119,1.936,1120,1.671,1121,1.497,1122,1.936,1123,2.788,1124,1.936,1125,1.936,1126,1.936,1127,1.367,1128,1.936,1129,1.497,1130,1.671,1131,1.671,1132,1.936,1133,1.497,1134,1.936,1135,1.936,1136,2.212,1137,1.936,1138,1.497,1139,1.671]],["title/components/OddsLineComponent.html",[24,0.706,214,1.249]],["body/components/OddsLineComponent.html",[3,0.098,4,0.098,5,0.098,8,0.15,11,0.655,17,1.205,18,0.306,19,0.017,20,1.271,21,0.111,22,0.008,23,0.008,24,0.873,25,0.831,26,1.454,27,0.997,28,1.045,29,0.997,30,0.997,34,0.869,35,2.834,36,2.706,38,1.597,40,1.677,42,0.869,44,1.068,50,2.207,61,0.909,68,1.315,70,1.068,71,0.748,89,1.389,92,0.669,93,1.328,103,0.831,118,2.521,133,0.459,134,3.202,135,0.515,149,0.428,158,0.796,176,1.597,177,1.215,178,1.154,179,1.045,180,2.521,181,2.869,182,2.873,183,2.255,184,2.397,185,3.251,186,1.154,187,3.442,189,2.071,191,2.667,193,3.202,195,2.922,196,1.541,198,0.997,199,1.523,200,1.389,201,0.997,202,0.997,203,0.997,204,0.831,205,0.997,206,0.831,207,0.997,208,0.831,209,0.997,210,0.831,211,0.997,212,0.831,213,0.997,214,1.727,215,1.488,216,0.997,217,0.831,218,0.997,219,0.831,220,0.997,221,0.831,222,0.951,223,1.523,224,0.831,225,0.997,226,0.831,227,0.831,228,0.698,229,0.831,230,0.997,231,0.831,232,0.869,233,0.997,234,0.997,262,2.355,277,4.628,320,1.977,350,1.328,363,1.858,402,2.077,413,0.515,420,3.232,498,1.541,547,2.679,548,2.859,556,1.961,557,0.997,558,2.207,559,1.961,560,1.097,586,2.207,589,1.541,590,1.541,591,2.737,592,2.737,593,2.529,625,1.154,626,4.063,627,3.202,634,1.444,678,2.189,737,3.437,739,3.069,740,2.997,741,2.737,742,3.638,743,2.859,746,1.541,750,1.541,751,1.283,753,3,755,1.541,758,2.529,813,3.72,814,2.859,815,1.961,885,1.654,1027,5.544,1110,1.79,1112,3.346,1114,3.346,1115,2.189,1123,1.79,1129,1.961,1131,2.189,1133,2.997,1136,1.79,1138,1.961,1139,3.346,1140,5.167,1141,2.189,1142,4.705,1143,3.876,1144,3.876,1145,5.676,1146,4.705,1147,2.535,1148,4.628,1149,3.876,1150,2.535,1151,2.535,1152,3.876,1153,5.676,1154,4.39,1155,2.535,1156,3.876,1157,3.72,1158,5.268,1159,3.346,1160,2.535,1161,2.535,1162,2.535,1163,2.535,1164,2.535,1165,5.985,1166,3.876,1167,3.876,1168,3.876,1169,3.876,1170,3.876,1171,3.876,1172,3.876,1173,2.535,1174,2.535,1175,2.535,1176,2.535,1177,3.876,1178,4.705,1179,2.535,1180,2.535,1181,2.535,1182,5.268,1183,2.535,1184,2.535,1185,1.961,1186,2.535,1187,2.535,1188,2.535,1189,2.189,1190,2.535,1191,2.535,1192,2.535,1193,2.535,1194,2.535,1195,2.535]],["title/interfaces/OddsOffer.html",[0,0.288,1040,2.315]],["body/interfaces/OddsOffer.html",[0,0.359,2,1.151,3,0.184,4,0.184,5,0.184,8,0.282,9,0.971,11,1.175,17,1.404,18,0.418,19,0.017,21,0.208,22,0.013,23,0.013,133,0.525,215,1.533,413,0.966,557,2.99,571,3.767,582,3.051,638,6.331,863,3.051,938,3.172,1038,3.104,1039,3.679,1040,3.663,1041,5.67,1043,4.661,1044,4.256,1045,2.891,1047,4.227,1196,6.028,1197,4.227,1198,5.116,1199,5.712,1200,3.359]],["title/interfaces/OddsOfferOutcome.html",[0,0.288,1047,2.315]],["body/interfaces/OddsOfferOutcome.html",[0,0.33,2,1.056,3,0.169,4,0.169,5,0.169,8,0.258,9,0.919,11,1.251,18,0.42,19,0.017,20,2.511,21,0.191,22,0.012,23,0.012,118,3.404,120,1.713,133,0.38,215,1.716,402,3.056,413,0.886,557,1.716,571,3.247,579,3.247,582,2.887,584,4.093,863,2.887,935,3.466,938,3.045,1038,2.848,1044,5.061,1045,4.356,1047,3.466,1197,4.093,1200,3.082,1201,3.769,1202,5.815,1203,6.735,1204,5.543,1205,4.924,1206,5.703,1207,5.484,1208,5.484,1209,5.484]],["title/interfaces/OddsResponse.html",[0,0.288,1210,2.69]],["body/interfaces/OddsResponse.html",[0,0.325,2,1.041,3,0.167,4,0.167,5,0.167,8,0.255,9,0.91,11,1.206,17,1.339,18,0.398,19,0.017,21,0.188,22,0.012,23,0.012,133,0.606,215,1.612,363,3.664,398,3.434,413,0.874,557,1.692,560,1.862,567,3.814,568,3.024,572,2.451,579,3.961,582,2.86,583,4.644,606,3.99,658,3.814,863,2.86,929,4.658,930,5.521,931,5.18,935,4.227,938,3.024,1037,4.37,1038,2.808,1110,3.99,1197,4.07,1210,3.99,1211,3.716,1212,5.783,1213,5.783,1214,3.99,1215,3.328]],["title/injectables/OddsService.html",[304,1.005,1059,2.69]],["body/injectables/OddsService.html",[1,0.995,3,0.076,4,0.076,5,0.076,8,0.236,11,1.027,18,0.328,19,0.017,20,2.166,21,0.086,22,0.007,23,0.007,42,2.54,44,0.874,52,1.929,60,2.241,61,1.138,63,2.447,68,1.445,70,1.674,71,0.84,89,1.138,92,1.552,93,1.088,97,1.607,118,2.693,124,3.054,125,3.343,130,1.191,133,0.529,135,0.399,138,0.943,140,0.995,149,0.332,151,2.544,157,2.016,158,1.252,186,1.444,215,1.363,254,1.521,299,3.153,304,0.837,305,0.851,319,2.02,320,0.738,331,2.783,333,0.895,347,0.851,348,0.851,350,2.325,367,2.455,402,2.455,406,1.701,413,0.399,440,3.791,457,1.195,484,3.688,519,2.241,556,1.521,557,2.555,558,1.807,559,1.521,560,0.851,567,2.273,568,0.943,571,1.807,573,4.161,574,3.542,579,3.944,625,0.895,836,2.455,927,3.548,929,4.628,930,1.521,931,2.455,936,3.506,1037,3.688,1040,2.783,1041,3.542,1042,2.988,1045,3.266,1047,2.783,1059,2.241,1066,1.607,1071,3.954,1072,2.455,1086,1.698,1154,4.824,1198,2.455,1199,3.954,1202,4.339,1204,2.455,1207,3.954,1208,2.74,1209,2.74,1210,3.234,1212,1.698,1214,3.234,1216,1.698,1217,3.174,1218,3.174,1219,3.174,1220,3.991,1221,3.174,1222,3.991,1223,3.174,1224,3.991,1225,3.446,1226,1.698,1227,3.954,1228,1.967,1229,2.74,1230,3.174,1231,1.967,1232,2.74,1233,3.174,1234,3.174,1235,3.174,1236,3.174,1237,1.967,1238,2.455,1239,2.241,1240,3.174,1241,3.174,1242,1.967,1243,1.967,1244,1.967,1245,3.174,1246,3.086,1247,3.991,1248,3.991,1249,3.174,1250,1.967,1251,3.174,1252,1.967,1253,5.884,1254,1.967,1255,4.58,1256,3.174,1257,1.967,1258,1.967,1259,1.967,1260,1.967,1261,1.967,1262,1.698,1263,1.967,1264,2.74,1265,1.521,1266,1.698,1267,1.698,1268,1.698,1269,1.698,1270,1.967,1271,1.698,1272,1.967,1273,1.698,1274,1.698,1275,1.967,1276,1.967,1277,3.174,1278,1.967,1279,1.967,1280,3.174,1281,3.174,1282,1.967,1283,1.967,1284,1.967,1285,1.967,1286,3.174,1287,3.174,1288,1.967,1289,1.967,1290,1.967,1291,1.967,1292,1.967,1293,4.58,1294,3.174,1295,3.174,1296,5.374,1297,1.967,1298,5.884,1299,5.884,1300,1.967,1301,4.58,1302,1.967,1303,1.967,1304,3.991,1305,1.967,1306,1.967,1307,1.967,1308,1.967,1309,1.967,1310,1.967,1311,1.967,1312,1.967,1313,1.967,1314,4.58,1315,1.967,1316,1.967,1317,1.967,1318,1.967,1319,1.967]],["title/interfaces/Player.html",[0,0.288,935,2.315]],["body/interfaces/Player.html",[0,0.417,2,1.336,3,0.214,4,0.214,5,0.214,8,0.327,9,1.065,17,1.501,18,0.356,19,0.017,20,2.318,21,0.242,22,0.014,23,0.014,71,1.002,413,1.121,582,2.795,584,4.62,935,4.671,1123,3.899,1320,4.768]],["title/interfaces/Point2d.html",[0,0.288,1321,2.69]],["body/interfaces/Point2d.html",[0,0.413,2,1.321,3,0.212,4,0.212,5,0.212,8,0.323,9,1.057,18,0.354,19,0.017,20,2.486,21,0.239,22,0.014,23,0.014,120,2.193,413,1.109,1321,4.634,1322,3.109,1323,4.715,1324,4.715,1325,4.715,1326,4.715,1327,7.584,1328,7.584,1329,7.3]],["title/interfaces/Quadrangle2d.html",[0,0.288,1330,2.69]],["body/interfaces/Quadrangle2d.html",[0,0.376,2,1.205,3,0.193,4,0.193,5,0.193,8,0.295,9,1,18,0.381,19,0.017,21,0.218,22,0.013,23,0.013,133,0.434,413,1.011,751,3.58,1321,5.548,1322,2.836,1324,6.565,1325,5.356,1326,5.356,1330,4.38,1331,4.3,1332,7.72,1333,7.072,1334,7.072,1335,5.356,1336,6.204,1337,6.204,1338,6.204]],["title/components/SnapComponent.html",[24,0.706,217,1.249]],["body/components/SnapComponent.html",[3,0.059,4,0.059,5,0.059,8,0.09,9,0.414,11,0.661,18,0.236,19,0.017,21,0.067,22,0.005,23,0.005,24,0.811,25,0.499,26,0.963,27,0.598,28,0.627,29,0.598,30,0.598,32,1.376,33,2.576,34,0.521,35,2.534,36,2.528,38,1.058,40,1.111,42,2.525,43,2.097,44,1.078,46,3.026,53,2.881,61,0.92,63,2.389,65,2.576,66,2.378,67,3.143,68,1.513,70,1.078,71,0.625,89,1.7,90,3.222,91,0.815,92,1.549,93,2.21,95,1.985,96,2.217,99,2.763,103,0.842,104,2.217,109,1.462,113,1.813,116,1.813,119,1.25,120,1.001,130,0.963,133,0.545,135,0.309,138,0.729,139,1.074,140,0.77,144,1.313,145,1.176,146,3.143,147,0.992,148,1.675,149,0.257,152,0.866,157,1.341,158,1.962,175,1.176,176,1.373,177,0.729,178,0.692,179,0.627,180,0.815,181,1.597,182,1.686,183,0.729,184,2.296,185,3.468,186,2.158,187,2.097,189,1.538,191,1.686,193,0.924,194,1.176,198,0.598,199,1.009,200,0.92,201,0.598,202,0.598,203,0.598,204,0.499,205,0.598,206,0.499,207,0.598,208,0.499,209,0.598,210,0.499,211,0.598,212,0.499,213,0.598,214,0.499,215,0.595,216,0.598,217,1.283,218,0.598,219,0.499,220,0.598,221,0.499,222,0.571,223,1.009,224,0.499,225,0.598,226,0.499,227,0.499,228,1.204,229,0.499,230,0.598,231,1.655,232,1.625,233,0.598,234,0.598,244,1.897,270,2.273,289,1.313,312,1.985,319,2.213,320,1.779,333,0.692,341,1.985,350,1.142,355,1.985,356,3.026,363,1.876,369,0.815,370,1.985,393,2.763,397,1.462,398,1.56,402,1.376,405,1.985,407,4.578,411,2.352,413,0.309,415,1.462,417,2.217,418,3.378,419,2.217,420,1.897,421,3.38,427,2.217,432,1.985,433,1.462,440,2.378,498,0.924,510,1.813,519,2.352,540,0.924,568,1.231,586,2.228,589,2.881,590,2.024,591,2.352,609,2.217,612,2.217,622,1.813,626,3.093,628,3.25,629,3.563,630,2.541,631,2.024,632,1.56,633,2.656,634,2.228,651,1.176,652,1.981,704,2.419,712,1.813,737,0.992,743,0.924,744,2.217,745,2.217,748,1.074,750,1.56,751,0.77,752,0.992,753,1.897,755,2.378,758,0.992,760,2.763,761,2.173,763,1.985,770,1.985,771,2.217,773,1.813,817,1.813,818,1.176,885,0.992,887,1.813,988,3.602,991,3.563,1001,1.985,1006,3.563,1009,2.217,1066,1.3,1068,2.217,1093,1.074,1159,2.217,1265,1.985,1335,3.378,1339,1.313,1340,3.331,1341,3.331,1342,2.567,1343,3.331,1344,5.05,1345,2.567,1346,2.567,1347,2.567,1348,3.913,1349,3.913,1350,3.913,1351,3.913,1352,3.913,1353,3.913,1354,3.913,1355,3.563,1356,3.903,1357,2.567,1358,2.567,1359,1.521,1360,3.913,1361,2.217,1362,2.217,1363,2.567,1364,2.567,1365,2.576,1366,2.567,1367,1.521,1368,2.567,1369,1.985,1370,2.567,1371,2.567,1372,2.567,1373,1.521,1374,2.567,1375,2.567,1376,2.567,1377,1.521,1378,2.567,1379,2.567,1380,3.913,1381,1.521,1382,2.567,1383,2.567,1384,1.521,1385,2.567,1386,3.913,1387,3.331,1388,3.913,1389,2.567,1390,3.913,1391,1.521,1392,2.217,1393,2.567,1394,1.521,1395,1.521,1396,2.567,1397,2.567,1398,2.567,1399,3.913,1400,2.567,1401,2.567,1402,2.567,1403,1.521,1404,2.567,1405,2.567,1406,1.521,1407,2.567,1408,2.567,1409,1.521,1410,3.774,1411,1.521,1412,1.521,1413,1.313,1414,2.567,1415,1.521,1416,1.313,1417,2.567,1418,2.567,1419,1.521,1420,1.521,1421,1.521,1422,1.521,1423,1.56,1424,1.521,1425,1.313,1426,1.176,1427,1.313,1428,1.521,1429,1.521,1430,1.176,1431,1.521,1432,1.521,1433,1.313,1434,1.521,1435,1.313,1436,1.521,1437,1.521,1438,1.521,1439,1.521,1440,2.567,1441,1.521,1442,1.521,1443,1.521,1444,1.521,1445,1.521,1446,1.521,1447,1.521,1448,1.521,1449,1.521,1450,1.521,1451,2.567,1452,1.521,1453,1.521,1454,1.521,1455,1.521,1456,1.521,1457,1.521,1458,1.521,1459,1.521,1460,1.521,1461,1.521,1462,1.521,1463,1.521,1464,1.521,1465,1.521,1466,1.313,1467,1.521,1468,1.521,1469,1.521,1470,1.521,1471,1.521,1472,1.521,1473,1.521,1474,1.521,1475,1.521,1476,2.217,1477,2.217,1478,1.176,1479,3.331,1480,3.378,1481,2.567,1482,2.567,1483,3.331,1484,1.521,1485,1.521,1486,1.313,1487,1.521]],["title/injectables/SnapOddsFacade.html",[304,1.005,1355,2.69]],["body/injectables/SnapOddsFacade.html",[3,0.152,4,0.152,5,0.152,8,0.232,11,1.019,18,0.325,19,0.017,21,0.172,22,0.014,23,0.011,42,2.066,43,2.106,44,1.465,61,1.906,65,4.661,66,3.925,68,1.396,70,1.66,71,0.794,91,2.85,92,1.403,99,3.755,103,1.743,113,3.755,133,0.619,135,0.798,138,1.884,145,3.038,149,0.664,157,2.066,158,1.891,215,1.496,299,2.85,304,1.403,305,1.7,319,3.416,333,1.788,347,1.7,348,1.7,350,1.822,397,3.432,406,3.461,412,4.112,652,3.269,667,3.392,687,2.774,704,1.884,838,4.911,921,4.112,1033,4.591,1066,3.269,1238,4.112,1355,3.755,1365,3.038,1423,3.231,1430,4.994,1466,3.392,1488,5.576,1489,3.392,1490,4.591,1491,4.591,1492,3.929,1493,4.911,1494,3.929,1495,4.591,1496,3.929,1497,4.591,1498,5.576,1499,4.591,1500,3.929,1501,4.591,1502,5.318,1503,3.929,1504,4.591,1505,3.929,1506,3.929,1507,3.929,1508,3.929,1509,3.929,1510,3.929,1511,6.027,1512,4.591,1513,3.929,1514,3.929,1515,3.929,1516,3.929,1517,3.929,1518,3.929,1519,3.929]],["title/components/SpinnerComponent.html",[24,0.706,219,1.249]],["body/components/SpinnerComponent.html",[3,0.13,4,0.13,5,0.13,8,0.199,18,0.181,19,0.017,21,0.147,22,0.01,23,0.01,24,1.03,25,1.103,26,1.792,27,1.323,28,1.387,29,1.323,30,1.323,34,1.153,35,2.964,36,2.83,38,1.968,40,2.067,50,2.719,68,0.78,71,0.629,103,1.103,119,1.263,120,1.011,133,0.293,134,2.902,135,0.683,149,0.569,176,1.387,179,1.387,180,1.803,181,1.613,184,2.173,186,2.173,189,2.375,191,2.81,196,3.672,198,1.323,199,1.877,200,1.712,201,1.323,202,1.323,203,1.323,204,1.103,205,1.323,206,1.103,207,1.323,208,1.103,209,1.323,210,1.103,211,1.323,212,1.103,213,1.323,214,1.103,215,0.78,216,1.323,217,1.103,218,1.323,219,1.981,220,1.323,221,1.103,222,1.263,223,1.877,224,1.103,225,1.323,226,1.103,227,1.103,228,0.927,229,1.103,230,1.323,231,1.103,232,1.153,233,1.323,234,1.323,411,2.376,545,3.622,586,1.916,625,2.173,634,3.44,739,2.195,746,2.902,747,4.123,748,5.296,749,4.324,752,3.116,814,4.752,1120,2.905,1121,3.693,1239,3.372,1478,2.602,1520,2.905,1521,7.269,1522,5.552,1523,4.776,1524,3.365,1525,3.365,1526,3.365,1527,7.086,1528,6.966,1529,4.776,1530,6.381,1531,3.365,1532,4.776,1533,2.602,1534,4.776,1535,4.776,1536,5.552,1537,3.365,1538,3.365,1539,4.776,1540,4.776,1541,2.905,1542,3.365,1543,6.628,1544,6.042,1545,2.602,1546,3.365,1547,3.365,1548,3.365,1549,3.365,1550,3.365,1551,3.365,1552,4.123,1553,2.602]],["title/interfaces/SportEvent.html",[0,0.288,1066,1.928]],["body/interfaces/SportEvent.html",[0,0.25,2,0.8,3,0.128,4,0.213,5,0.128,8,0.196,9,0.76,17,1.647,18,0.406,19,0.017,20,2.16,21,0.145,22,0.01,23,0.01,71,0.436,133,0.288,151,3.51,363,3.712,366,5.689,398,3.642,413,0.671,432,4.635,581,3.647,582,2.387,583,4.809,584,4.446,606,4.232,616,3.33,637,5.689,863,3.034,929,4.299,938,3.038,1066,2.387,1110,3.33,1136,3.33,1197,3.642,1213,5.175,1215,2.556,1322,1.882,1554,2.854,1555,2.854,1556,4.716,1557,3.642,1558,4.635,1559,5.994,1560,5.994,1561,5.994,1562,5.994,1563,6.589,1564,5.994,1565,4.716,1566,5.994,1567,5.994,1568,5.994,1569,5.994,1570,5.994,1571,5.994,1572,5.175,1573,4.716,1574,4.071,1575,4.716,1576,4.071,1577,3.647,1578,4.071,1579,2.157,1580,3.306]],["title/interfaces/SportsBook.html",[0,0.288,567,2.169]],["body/interfaces/SportsBook.html",[0,0.373,2,1.196,3,0.192,4,0.192,5,0.192,8,0.292,9,0.994,11,1.043,17,1.429,18,0.391,19,0.017,21,0.216,22,0.013,23,0.013,71,0.975,133,0.537,215,1.682,402,3.779,413,1.003,557,1.942,560,3.204,567,3.515,572,4.215,582,3.124,658,3.515,863,3.124,938,3.227,1040,4.285,1123,4.358,1197,4.285,1200,3.488,1214,5.227,1572,5.329,1581,4.265,1582,4.265]],["title/interfaces/SportsBookLineViewModel.html",[0,0.288,547,2.169]],["body/interfaces/SportsBookLineViewModel.html",[0,0.297,2,0.952,3,0.206,4,0.153,5,0.153,8,0.233,9,0.858,11,1.176,17,1.557,18,0.39,19,0.017,20,2.513,21,0.172,22,0.011,23,0.011,89,1.411,118,4.215,120,2.09,130,1.477,151,1.992,195,3.072,215,1.497,337,2.567,413,0.799,547,3.031,560,1.703,562,2.567,569,4.998,570,5.58,571,4.222,578,3.043,927,2.779,1045,3.927,1157,4.914,1198,4.998,1204,5.382,1205,6.008,1214,2.779,1583,3.043,1584,6.463,1585,6.463,1586,6.463,1587,6.463,1588,6.463,1589,6.959]],["title/interfaces/SportsBookViewModel.html",[0,0.288,936,2.485]],["body/interfaces/SportsBookViewModel.html",[0,0.37,2,1.186,3,0.19,4,0.19,5,0.19,8,0.29,9,0.989,11,1.038,17,1.568,18,0.362,19,0.017,21,0.214,22,0.013,23,0.013,71,0.973,89,2.201,125,3.291,130,2.638,133,0.427,151,3.109,195,3.052,228,1.692,334,4.007,337,4.007,413,0.995,547,4.004,558,2.791,560,3.043,562,3.197,572,3.819,574,5.437,575,4.749,576,4.749,578,4.749,927,4.336,936,4.007,937,4.749,938,2.944,1154,5.437,1200,4.336,1583,3.79,1590,6.141]],["title/components/SwitchSvgComponent.html",[24,0.706,221,1.249]],["body/components/SwitchSvgComponent.html",[3,0.18,4,0.18,5,0.18,19,0.017,21,0.203,22,0.013,23,0.013,24,1.214,25,1.524,26,2.228,27,1.827,28,1.916,29,1.827,30,1.827,34,1.593,35,3.084,36,2.944,38,2.448,40,2.57,71,0.783,103,1.524,133,0.405,135,0.944,149,0.786,176,1.916,178,2.115,179,1.916,181,2.228,182,2.353,183,2.228,189,2.711,198,1.827,199,2.334,200,2.129,201,1.827,202,1.827,203,1.827,204,1.524,205,1.827,206,1.524,207,1.827,208,1.524,209,1.827,210,1.524,211,1.827,212,1.524,213,1.827,214,1.524,215,1.077,216,1.827,217,1.524,218,1.827,219,1.524,220,1.827,221,2.261,222,2.456,223,2.334,224,1.524,225,1.827,226,1.524,227,1.524,228,1.281,229,1.524,230,1.827,231,1.524,232,1.593,233,1.827,234,1.827,1591,4.013,1592,4.593,1593,6.545,1594,5.939]],["title/interfaces/TranslationEntries.html",[0,0.288,617,2.69]],["body/interfaces/TranslationEntries.html",[0,0.331,2,1.06,3,0.17,4,0.17,5,0.17,8,0.259,9,0.921,17,1.714,18,0.42,19,0.017,21,0.192,22,0.012,23,0.012,89,1.57,183,2.1,413,0.889,617,4.036,658,2.495,736,5.823,772,5.823,773,4.762,812,5.823,1099,5.823,1105,5.823,1106,5.823,1476,5.823,1477,5.823,1595,3.782,1596,3.782,1597,4.381,1598,4.381,1599,6.744,1600,5.823,1601,6.744,1602,5.823,1603,6.744,1604,5.823,1605,6.744]],["title/components/TriggerComponent.html",[24,0.706,224,1.249]],["body/components/TriggerComponent.html",[3,0.155,4,0.155,5,0.155,8,0.236,18,0.327,19,0.017,21,0.174,22,0.011,23,0.011,24,1.126,25,1.307,26,2.015,27,1.567,28,1.643,29,1.567,30,1.567,34,1.366,35,3.031,36,2.893,38,2.213,40,2.324,50,3.058,68,1.407,71,0.708,75,2.213,103,2.13,119,2.015,120,1.613,133,0.347,134,3.69,135,0.809,149,0.674,176,2.213,177,1.911,178,1.814,179,1.643,180,2.137,181,2.574,182,2.718,189,2.554,198,1.567,199,2.111,200,1.925,201,1.567,202,1.567,203,1.567,204,1.307,205,1.567,206,1.307,207,1.567,208,1.307,209,1.567,210,1.307,211,1.567,212,1.307,213,1.567,214,1.307,215,0.924,216,1.567,217,1.307,218,1.567,219,1.307,220,1.567,221,1.307,222,1.496,223,2.111,224,2.13,225,1.567,226,1.307,227,1.307,228,1.098,229,1.307,230,1.567,231,1.307,232,1.366,233,1.567,234,1.567,244,2.27,270,1.911,320,1.496,415,3.7,545,2.601,630,2.137,746,2.423,751,2.018,752,2.601,761,2.601,817,2.815,1057,4.636,1062,5.243,1084,4.153,1111,3.442,1127,2.815,1185,3.083,1239,3.792,1533,3.083,1545,3.083,1552,3.442,1606,3.442,1607,6.072,1608,5.37,1609,6.497,1610,5.243,1611,6.072,1612,3.987,1613,3.987,1614,3.987,1615,3.987,1616,3.987,1617,3.083,1618,5.024]],["title/components/TriggerSvgComponent.html",[24,0.706,226,1.249]],["body/components/TriggerSvgComponent.html",[3,0.185,4,0.185,5,0.185,19,0.017,21,0.209,22,0.013,23,0.013,24,1.229,25,1.566,26,2.267,27,1.877,29,1.877,30,1.877,34,1.637,35,3.092,36,2.952,40,2.615,71,0.796,103,2.173,133,0.416,135,0.97,149,0.807,189,2.738,198,1.877,199,2.375,200,2.166,201,1.877,202,1.877,203,1.877,204,1.566,205,1.877,206,1.566,207,1.877,208,1.566,209,1.877,210,1.566,211,1.877,212,1.566,213,1.877,214,1.566,215,1.107,216,1.877,217,1.566,218,1.877,219,1.566,220,1.877,221,1.566,222,1.792,223,2.375,224,1.566,225,1.877,226,2.284,227,1.566,228,1.316,229,1.566,230,1.877,231,1.566,232,1.637,233,1.877,234,1.877,1592,4.673,1619,4.123,1620,6.042]],["title/interfaces/TvChannel.html",[0,0.288,1579,2.485]],["body/interfaces/TvChannel.html",[0,0.335,2,1.072,3,0.172,4,0.172,5,0.172,8,0.262,9,0.928,11,0.973,17,1.593,18,0.401,19,0.017,20,2.097,21,0.194,22,0.012,23,0.012,71,0.948,75,2.636,133,0.386,413,0.899,581,4.452,582,2.914,584,4.373,616,5.081,863,2.914,938,3.365,1157,4.065,1197,4.116,1215,3.425,1322,2.522,1361,4.97,1557,4.664,1558,5.935,1574,4.97,1576,4.97,1577,5.237,1579,3.756,1621,3.127,1622,3.824,1623,5.847,1624,7.196,1625,4.97,1626,5.757,1627,5.757,1628,4.429,1629,4.429]],["title/classes/TvSearchNoResultError.html",[149,0.644,1423,2.315]],["body/classes/TvSearchNoResultError.html",[3,0.221,4,0.221,5,0.221,19,0.016,21,0.249,22,0.015,23,0.014,61,2.567,68,1.318,149,0.962,371,4.018,406,3.05,413,1.155,433,3.24,563,4.749,583,3.458,595,4.4,704,3.433,1423,4.351,1617,4.4,1630,5.807,1631,4.913,1632,5.69,1633,5.69,1634,5.69,1635,5.69]],["title/interfaces/TvSearchResult.html",[0,0.288,43,2.042]],["body/interfaces/TvSearchResult.html",[0,0.372,2,1.191,3,0.191,4,0.191,5,0.191,8,0.291,9,0.992,17,1.426,18,0.362,19,0.017,21,0.215,22,0.013,23,0.013,43,3.3,117,3.774,130,2.31,133,0.536,406,4.066,413,0.999,433,3.506,438,4.761,934,5.315,1322,2.802,1330,5.119,1369,3.805,1557,4.65,1621,3.474,1636,4.248,1637,5.803,1638,7.042,1639,7.042,1640,7.042,1641,6.157,1642,6.157,1643,6.157]],["title/interfaces/TvSearchResultEntry.html",[0,0.288,117,2.042]],["body/interfaces/TvSearchResultEntry.html",[0,0.339,2,1.086,3,0.174,4,0.174,5,0.174,8,0.381,9,0.935,18,0.367,19,0.017,20,2.367,21,0.196,22,0.012,23,0.012,91,3.647,117,3.111,133,0.505,228,1.599,328,4.099,363,3.085,398,4.136,406,3.449,413,0.911,433,3.305,510,4.099,583,3.911,1066,3.77,1136,4.099,1322,2.554,1369,5.759,1557,4.466,1558,5.451,1577,4.489,1578,5.875,1579,4.859,1621,3.167,1623,5.012,1637,5.451,1644,3.873,1645,5.805,1646,5.805,1647,7.22,1648,6.806,1649,5.875,1650,6.806]],["title/injectables/TvSearchService.html",[304,1.005,1493,2.69]],["body/injectables/TvSearchService.html",[1,2.35,3,0.096,4,0.096,5,0.096,8,0.147,9,0.614,11,1.003,17,1.354,18,0.344,19,0.017,20,1.522,21,0.109,22,0.008,23,0.008,42,2.512,43,1.33,44,1.05,52,2.317,60,2.692,61,1.367,63,2.674,68,1.516,70,1.635,71,0.782,75,1.913,90,3.166,91,3.18,92,1.631,93,1.306,97,1.93,119,1.43,120,1.145,133,0.555,135,0.504,138,1.189,140,1.256,149,0.419,157,2.118,158,1.634,228,1.05,254,1.919,299,1.33,304,1.006,305,1.074,319,3.128,320,1.43,331,1.508,333,1.129,347,1.074,348,1.074,350,2.186,367,2.948,393,2.692,397,2.643,405,4.028,406,3.418,411,2.692,412,2.948,413,1.141,415,2.171,416,2.948,457,1.508,484,4.032,503,1.919,510,2.692,517,4.497,519,4.618,593,3.398,606,1.752,625,1.735,652,2.637,687,1.752,727,4.028,833,2.142,838,4.618,841,2.142,859,1.919,872,3.291,1066,2.637,1157,2.692,1225,4.008,1226,2.142,1227,4.497,1229,3.291,1238,4.028,1246,4.779,1262,2.142,1264,4.497,1265,1.919,1266,2.142,1267,2.142,1268,2.142,1269,2.142,1271,5.123,1273,2.142,1274,2.142,1344,4.028,1362,3.291,1365,1.919,1423,2.317,1490,3.291,1491,3.291,1493,2.692,1495,3.291,1497,3.291,1498,5.865,1499,3.291,1501,3.291,1504,2.142,1512,3.291,1557,2.317,1649,4.853,1651,5.765,1652,2.142,1653,4.642,1654,3.812,1655,3.812,1656,6.18,1657,3.812,1658,2.481,1659,3.812,1660,3.812,1661,5.209,1662,3.812,1663,6.678,1664,2.481,1665,3.812,1666,3.812,1667,3.812,1668,3.291,1669,5.209,1670,2.481,1671,3.812,1672,3.812,1673,3.812,1674,2.481,1675,3.812,1676,3.812,1677,3.812,1678,3.812,1679,5.209,1680,2.481,1681,5.934,1682,3.812,1683,3.812,1684,3.812,1685,2.481,1686,2.481,1687,2.481,1688,3.812,1689,3.812,1690,4.642,1691,3.812,1692,2.481,1693,2.481,1694,2.481,1695,2.481,1696,2.481,1697,2.481,1698,2.481,1699,2.481,1700,2.481,1701,2.481,1702,2.142,1703,2.481,1704,2.481,1705,2.481,1706,2.481,1707,3.291,1708,2.481,1709,2.481,1710,3.812,1711,2.481,1712,2.481,1713,2.481,1714,2.481,1715,2.481]],["title/components/UserFeedbackMessageComponent.html",[24,0.706,227,1.249]],["body/components/UserFeedbackMessageComponent.html",[3,0.141,4,0.141,5,0.141,8,0.215,18,0.196,19,0.017,21,0.159,22,0.011,23,0.011,24,1.074,25,1.194,26,1.894,27,1.431,28,1.501,29,1.431,30,1.431,34,1.248,35,3.009,36,2.86,38,2.08,40,2.184,50,2.874,68,0.844,71,0.665,103,1.194,133,0.439,134,3.067,135,0.739,146,3.871,147,2.376,148,2.376,149,0.615,152,2.074,176,2.08,177,1.746,178,1.657,179,1.501,181,1.746,182,1.843,183,1.746,184,2.297,187,2.705,189,2.459,191,2.555,195,1.657,198,1.431,199,1.984,200,2.077,201,1.431,202,1.431,203,1.431,204,1.194,205,1.431,206,1.194,207,1.431,208,1.194,209,1.431,210,1.194,211,1.431,212,1.194,213,1.431,214,1.194,215,0.844,216,1.431,217,1.194,218,1.431,219,1.194,220,1.431,221,1.194,222,1.366,223,1.984,224,1.194,225,1.431,226,1.194,227,2.051,228,1.987,229,2.458,230,1.431,231,1.194,232,1.248,233,1.431,234,1.431,270,3.259,287,3.903,359,2.816,420,2.074,626,2.376,627,2.213,628,2.074,629,2.571,630,3.521,631,3.801,632,3.521,633,3.521,704,1.746,748,2.571,750,2.213,751,1.843,753,2.874,754,3.144,755,2.213,945,2.816,1070,4.358,1093,2.571,1127,3.564,1480,3.144,1600,4.358,1602,4.358,1604,4.358,1716,4.358,1717,3.144,1718,5.793,1719,5.048,1720,3.642,1721,3.144,1722,3.144,1723,2.816,1724,3.144,1725,3.642,1726,3.642,1727,3.642]],["title/components/WebcamComponent.html",[24,0.706,231,1.249]],["body/components/WebcamComponent.html",[3,0.059,4,0.059,5,0.059,8,0.258,9,0.412,11,0.659,17,0.925,18,0.324,19,0.017,21,0.066,22,0.005,23,0.005,24,0.808,25,0.496,26,1.463,27,1.304,28,0.623,29,0.595,30,0.595,32,1.369,33,2.565,34,0.518,35,2.563,36,2.475,38,1.053,40,1.106,42,2.285,44,0.704,46,3.015,50,1.455,53,1.553,61,0.916,63,2.178,67,2.866,68,1.559,70,1.074,71,0.623,75,1.053,89,1.398,91,3.053,92,1.503,93,2.101,103,0.496,105,2.206,118,1.369,119,1.463,120,1.171,124,2.369,126,2.206,130,1.774,131,1.976,133,0.51,135,0.307,136,2.544,139,1.068,140,0.766,146,0.861,147,0.987,148,1.667,149,0.256,150,1.667,152,0.861,153,2.206,157,1.813,158,1.367,176,1.367,177,0.725,178,0.688,179,0.623,180,0.811,181,1.225,183,0.725,184,1.983,185,1.974,186,1.983,187,1.369,189,1.532,191,0.766,193,0.919,195,1.163,196,1.553,198,0.595,199,1.004,200,1.189,201,0.595,202,0.595,203,0.595,204,0.496,205,0.595,206,0.496,207,0.595,208,0.496,209,0.595,210,0.496,211,0.595,212,0.496,213,0.595,214,0.496,215,0.35,216,0.595,217,0.496,218,0.595,219,0.496,220,0.595,221,0.496,222,0.568,223,1.004,224,0.496,225,0.595,226,0.496,227,0.496,228,0.914,229,0.496,230,0.595,231,1.734,232,2.008,233,0.595,234,0.595,243,3.735,262,2.369,266,3.015,270,1.59,299,0.811,319,1.679,320,1.245,328,1.804,331,1.553,333,0.688,337,1.667,350,1.137,354,1.667,355,1.976,359,1.976,369,2.534,393,2.753,397,1.889,413,0.307,415,1.455,416,1.976,420,1.455,421,1.17,430,2.206,433,1.455,440,1.553,497,2.206,545,2.164,552,2.206,584,1.553,586,1.455,588,1.306,593,1.667,594,1.976,622,1.068,625,2.506,627,2.648,628,1.455,630,2.09,631,1.553,632,1.553,633,1.553,652,1.974,658,2.22,704,2.413,705,1.306,712,1.804,737,0.987,739,2.544,741,2.342,743,0.919,746,1.553,749,1.667,750,0.919,751,0.766,752,2.843,753,0.861,755,2.369,758,0.987,813,1.068,814,3.347,819,3.338,821,1.17,825,1.306,836,1.976,838,3.554,840,2.206,849,5.63,850,2.206,853,2.206,855,3.366,857,4.082,858,4.259,859,3.656,860,2.206,868,2.864,887,2.342,888,2.206,943,3.015,988,3.284,991,1.068,1001,1.976,1084,1.976,1093,1.804,1121,1.976,1127,2.342,1129,3.015,1130,1.306,1133,1.976,1138,1.976,1185,1.17,1189,2.206,1239,3.338,1344,1.976,1410,3.762,1413,3.366,1416,1.306,1425,2.206,1426,1.17,1427,1.306,1433,1.306,1435,1.306,1478,1.17,1486,1.306,1533,1.976,1541,1.306,1545,3.015,1553,1.976,1557,1.553,1610,2.864,1617,1.17,1618,4.259,1702,1.306,1721,2.206,1722,1.306,1723,1.17,1724,1.306,1728,1.306,1729,3.318,1730,3.318,1731,2.555,1732,3.318,1733,3.318,1734,4.728,1735,4.728,1736,3.318,1737,3.318,1738,2.555,1739,3.899,1740,4.357,1741,2.555,1742,3.899,1743,2.555,1744,3.899,1745,3.899,1746,3.899,1747,1.513,1748,2.555,1749,2.555,1750,1.513,1751,2.864,1752,3.899,1753,1.513,1754,2.555,1755,2.555,1756,2.555,1757,5.033,1758,2.555,1759,2.555,1760,1.513,1761,2.555,1762,2.555,1763,1.513,1764,2.555,1765,1.513,1766,3.318,1767,2.555,1768,2.555,1769,2.555,1770,3.899,1771,1.513,1772,2.555,1773,1.513,1774,2.555,1775,2.555,1776,2.555,1777,1.513,1778,1.513,1779,2.555,1780,1.513,1781,2.555,1782,3.318,1783,3.318,1784,2.555,1785,1.513,1786,2.555,1787,1.513,1788,1.513,1789,2.555,1790,2.555,1791,1.513,1792,2.555,1793,2.555,1794,3.899,1795,3.318,1796,2.555,1797,2.555,1798,2.555,1799,1.513,1800,5.033,1801,2.555,1802,1.513,1803,3.318,1804,3.899,1805,1.513,1806,2.555,1807,1.513,1808,1.513,1809,1.513,1810,1.513,1811,1.513,1812,1.513,1813,1.513,1814,2.555,1815,1.513,1816,1.513,1817,1.513,1818,1.513,1819,1.513,1820,1.513,1821,1.513,1822,1.513,1823,1.513,1824,1.513,1825,1.513,1826,1.513,1827,1.513,1828,1.513,1829,1.513,1830,1.513,1831,1.513,1832,1.513,1833,1.513,1834,1.513,1835,1.513,1836,1.513,1837,1.513,1838,1.513,1839,1.513,1840,1.513,1841,1.513,1842,1.513,1843,1.513,1844,2.555,1845,1.513,1846,1.513,1847,2.555,1848,1.513,1849,1.513,1850,2.555,1851,3.899,1852,1.513,1853,4.728,1854,1.513,1855,1.513,1856,4.357,1857,4.357,1858,1.513,1859,1.513,1860,1.513,1861,1.306,1862,3.318,1863,1.306,1864,2.555,1865,2.555,1866,3.318,1867,1.513,1868,1.513,1869,1.513,1870,1.513,1871,1.306,1872,1.513,1873,1.513,1874,1.513,1875,1.513,1876,1.513,1877,1.513]],["title/coverage.html",[1878,4.495]],["body/coverage.html",[0,0.575,1,1.453,5,0.111,6,2.478,7,5.021,18,0.155,19,0.017,22,0.009,23,0.009,24,1.346,25,0.941,31,2.478,43,1.538,63,1.242,66,1.744,67,1.634,72,2.586,89,2.01,97,1.453,117,1.538,125,1.538,141,2.219,149,0.719,195,1.936,204,0.941,206,0.941,208,0.941,210,0.941,212,0.941,214,0.941,215,0.665,217,0.941,219,0.941,221,0.941,224,0.941,226,0.941,227,0.941,229,1.395,231,0.941,241,1.872,242,1.872,268,2.026,270,1.376,277,2.219,287,2.219,304,1.855,306,2.219,307,3.004,320,1.077,352,2.478,353,2.478,369,1.538,373,3.29,374,3.29,406,2.28,450,2.219,458,2.219,484,1.872,485,2.478,540,2.586,542,2.478,543,2.478,547,1.634,548,1.744,557,1.993,560,1.841,561,3.29,562,3.658,567,1.634,568,1.376,573,1.872,579,1.634,580,2.478,585,2.478,596,2.478,597,2.478,617,2.026,621,2.478,625,3.272,635,3.921,636,3.921,652,1.453,689,2.219,690,2.219,726,2.478,762,2.478,819,2.026,820,2.219,821,2.219,822,2.478,829,2.219,925,2.478,926,2.478,935,1.744,936,1.872,938,1.376,939,2.478,942,2.478,946,2.219,988,1.872,989,2.219,1006,2.026,1007,2.478,1011,2.219,1025,2.478,1026,2.478,1037,1.872,1038,3.658,1039,3.29,1040,1.744,1042,1.872,1046,2.478,1047,1.744,1048,2.478,1059,2.026,1066,1.453,1072,2.219,1140,2.478,1141,2.478,1148,2.219,1201,2.478,1210,2.026,1211,2.478,1216,2.478,1320,2.478,1321,2.026,1322,3.572,1323,2.478,1330,2.026,1331,2.478,1339,2.478,1355,2.026,1356,2.219,1423,1.744,1430,2.219,1488,2.478,1489,2.478,1493,2.026,1520,2.478,1553,5.79,1554,2.478,1555,2.478,1579,1.872,1581,2.478,1582,2.478,1583,3.29,1591,2.478,1595,2.478,1596,2.478,1606,2.478,1618,5.021,1619,2.478,1621,3.58,1622,2.478,1630,2.478,1631,2.478,1636,2.478,1637,2.219,1644,2.478,1651,2.478,1652,2.478,1716,2.478,1717,2.478,1728,2.478,1863,2.478,1871,2.478,1878,2.478,1879,2.478,1880,2.87,1881,5.07,1882,2.87,1883,6.668,1884,4.255,1885,2.87,1886,2.87,1887,2.87,1888,2.87,1889,2.87,1890,4.255,1891,2.87,1892,2.87,1893,2.87,1894,2.87,1895,5.07,1896,4.255,1897,5.07,1898,4.255,1899,5.07,1900,2.87,1901,4.255,1902,4.255,1903,4.255,1904,2.87,1905,2.87,1906,2.87,1907,2.87,1908,2.87,1909,6.811,1910,6.811,1911,2.87,1912,2.87,1913,2.87,1914,3.29,1915,3.29,1916,2.87,1917,2.87,1918,4.255,1919,2.478,1920,2.478,1921,2.478,1922,2.478,1923,2.478,1924,2.478,1925,2.478,1926,2.87,1927,2.87,1928,4.255,1929,2.87,1930,2.87,1931,5.07,1932,5.07,1933,5.07,1934,2.87,1935,2.87,1936,2.87,1937,2.87,1938,2.87,1939,2.87]],["title/dependencies.html",[238,2.99,1940,3.178]],["body/dependencies.html",[19,0.017,22,0.014,23,0.014,135,1.075,136,4.53,137,3.739,232,1.815,238,3.454,243,3.739,259,4.571,261,5.561,262,3.915,266,4.095,333,2.409,501,4.095,526,4.571,1941,5.295,1942,7.747,1943,5.295,1944,5.295,1945,5.295,1946,5.295,1947,5.295,1948,5.295,1949,5.295,1950,5.295,1951,5.295,1952,5.295,1953,5.295,1954,5.295,1955,5.295,1956,5.295,1957,5.295,1958,5.295,1959,5.295,1960,5.295,1961,5.295,1962,5.295,1963,5.295,1964,5.295]],["title/miscellaneous/enumerations.html",[1965,1.703,1966,3.957]],["body/miscellaneous/enumerations.html",[3,0.196,8,0.298,19,0.017,22,0.013,23,0.013,57,3.56,89,1.808,120,2.347,124,3.064,130,2.346,146,3.56,228,1.389,229,1.653,306,3.9,307,5.015,334,4.079,335,4.354,336,4.354,337,3.29,339,5.397,340,5.397,341,4.835,342,5.397,343,5.397,344,5.397,345,5.493,346,5.493,369,3.35,704,2.417,943,3.9,945,3.9,957,4.354,989,3.9,991,4.797,1004,5.397,1005,5.397,1043,3.9,1914,3.9,1915,4.835,1965,2.703,1966,4.354,1967,5.043,1968,4.354,1969,5.043,1970,5.043,1971,5.043,1972,5.043]],["title/miscellaneous/functions.html",[1965,1.703,1973,3.957]],["body/miscellaneous/functions.html",[8,0.334,11,1.13,17,1.514,18,0.304,19,0.016,22,0.014,23,0.014,57,4.394,70,1.843,71,0.881,92,1.765,141,5.173,458,5.173,1232,5.775,1914,4.36,1915,5.516,1965,3.021,1968,5.775,1973,4.867,1974,5.638,1975,5.638,1976,5.638]],["title/index.html",[8,0.188,1977,3.178,1978,3.178]],["body/index.html",[4,0.223,19,0.012,22,0.012,23,0.012,24,1.3,36,2.861,86,4.442,108,3.116,130,2.155,176,1.819,200,1.582,238,3.747,251,3.81,252,4.959,296,3.81,315,4.442,320,1.656,460,3.413,576,4.442,605,6.32,616,4.055,658,2.513,681,3.81,734,4.959,763,3.413,770,3.413,858,3.413,1246,5.422,1392,3.81,1625,3.81,1668,3.81,1707,3.81,1723,5.23,1751,3.81,1861,3.81,1879,5.839,1979,6.385,1980,4.413,1981,7.012,1982,5.744,1983,4.413,1984,4.413,1985,4.413,1986,6.763,1987,5.744,1988,5.744,1989,4.413,1990,4.413,1991,4.413,1992,4.413,1993,4.413,1994,4.413,1995,7.569,1996,5.744,1997,5.744,1998,4.413,1999,4.413,2000,4.413,2001,4.413,2002,4.413,2003,4.413,2004,4.413,2005,4.413,2006,5.744,2007,4.413,2008,5.744,2009,4.413,2010,4.413,2011,4.413,2012,5.744,2013,4.413,2014,4.413,2015,4.413,2016,4.413,2017,6.385,2018,6.385,2019,4.413,2020,5.744,2021,4.413,2022,4.413,2023,4.413,2024,4.413,2025,4.413,2026,4.413,2027,4.413,2028,4.413,2029,4.413,2030,4.413,2031,4.413,2032,4.413,2033,4.413,2034,4.413,2035,4.413,2036,4.413]],["title/modules.html",[237,4.027]],["body/modules.html",[19,0.015,22,0.015,23,0.015,236,4.331,237,4.744,262,3.728,1592,4.744,2037,6.134,2038,6.134]],["title/overview.html",[2039,4.495]],["body/overview.html",[2,1.156,19,0.017,22,0.013,23,0.013,25,2.173,26,1.792,186,2.173,204,2.173,206,2.173,208,2.173,210,2.173,212,2.173,214,2.173,217,2.173,219,2.173,221,2.173,224,2.173,226,2.173,227,2.173,231,2.173,235,4.123,236,5.685,238,3.942,239,4.123,240,4.123,241,4.324,242,4.324,243,4.266,244,2.72,245,3.693,305,2.067,541,3.693,595,3.693,749,3.942,2039,4.123,2040,4.776,2041,4.776,2042,4.776]],["title/miscellaneous/typealiases.html",[1965,1.703,2043,4.584]],["body/miscellaneous/typealiases.html",[8,0.357,18,0.375,19,0.015,22,0.015,23,0.015,820,4.662,863,3.051,887,4.912,1426,4.662,1965,3.231,2044,6.028,2045,6.028,2046,6.956]],["title/miscellaneous/variables.html",[1965,1.703,2047,3.957]],["body/miscellaneous/variables.html",[7,5.857,8,0.24,18,0.33,19,0.017,22,0.012,23,0.012,51,3.834,52,2.463,53,2.463,54,2.862,55,2.644,56,2.862,57,2.308,58,2.862,59,2.644,72,3.3,97,2.052,108,2.862,119,2.734,120,2.154,262,4.266,295,2.862,320,2.634,347,3.038,348,3.038,373,3.134,374,4.199,415,3.092,450,4.199,456,5.286,460,3.134,461,3.499,462,3.499,463,3.499,464,3.499,635,3.134,636,4.735,689,4.199,690,4.199,829,5.274,946,5.274,1011,5.274,1148,5.274,1356,5.274,1919,3.499,1920,3.499,1921,3.499,1922,3.499,1923,3.499,1924,5.647,1925,3.499,1965,2.172,2047,3.499,2048,4.053,2049,4.053,2050,4.053,2051,5.43,2052,4.053,2053,4.053,2054,4.053,2055,4.053,2056,7.019,2057,7.574,2058,7.019,2059,7.019,2060,5.43,2061,4.053]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"pipes/BestOfferLinePipe.html":{},"interfaces/BestOfferLineViewModel.html":{},"interfaces/BestOfferViewModel.html":{},"interfaces/Competitor.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"pipes/NumberFormatPipe.html":{},"interfaces/OddsBestOffer.html":{},"interfaces/OddsBestOfferOutcome.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{},"components/SwitchSvgComponent.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":625,"title":{},"body":{"components/FooterComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"pipes/NumberFormatPipe.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"injectables/OddsService.html":{},"components/SpinnerComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["0.11.4",{"_index":1964,"title":{},"body":{"dependencies.html":{}}}],["0.1rem",{"_index":1131,"title":{},"body":{"components/OddsComponent.html":{},"components/OddsLineComponent.html":{}}}],["0.1s",{"_index":1536,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["0.2rem",{"_index":1139,"title":{},"body":{"components/OddsComponent.html":{},"components/OddsLineComponent.html":{}}}],["0.3rem",{"_index":1182,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["0.4",{"_index":1119,"title":{},"body":{"components/OddsComponent.html":{}}}],["0.4.1",{"_index":1959,"title":{},"body":{"dependencies.html":{}}}],["0.4rem",{"_index":1178,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["0.5",{"_index":1616,"title":{},"body":{"components/TriggerComponent.html":{}}}],["0.5rem",{"_index":1122,"title":{},"body":{"components/OddsComponent.html":{}}}],["0.6rem",{"_index":1174,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["0.9",{"_index":844,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["0.9rem",{"_index":1190,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["0/1",{"_index":1883,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1890,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1930,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1891,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1929,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":1860,"title":{},"body":{"components/WebcamComponent.html":{}}}],["002133",{"_index":1194,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["0085cd",{"_index":1128,"title":{},"body":{"components/OddsComponent.html":{}}}],["1",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{},"overview.html":{}}}],["1.3",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["1.5rem",{"_index":1526,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["1/1",{"_index":1910,"title":{},"body":{"coverage.html":{}}}],["1/17",{"_index":1912,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1902,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1884,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1885,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2031,"title":{},"body":{"index.html":{}}}],["10.0.0",{"_index":1955,"title":{},"body":{"dependencies.html":{}}}],["10/21",{"_index":1893,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1553,"title":{},"body":{"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["1000",{"_index":444,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["1024",{"_index":452,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["11",{"_index":2041,"title":{},"body":{"overview.html":{}}}],["11/18",{"_index":1889,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":1937,"title":{},"body":{"coverage.html":{}}}],["12/18",{"_index":1908,"title":{},"body":{"coverage.html":{}}}],["13.1.3",{"_index":1942,"title":{},"body":{"dependencies.html":{}}}],["13.4.6",{"_index":1950,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":2040,"title":{},"body":{"overview.html":{}}}],["14.0.0",{"_index":1948,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1873,"title":{},"body":{"components/WebcamComponent.html":{}}}],["16",{"_index":1871,"title":{},"body":{"components/WebcamComponent.html":{},"coverage.html":{}}}],["1920",{"_index":1797,"title":{},"body":{"components/WebcamComponent.html":{}}}],["1em",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["1px",{"_index":740,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{}}}],["2",{"_index":749,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/ImageManipulationService.html":{},"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":1962,"title":{},"body":{"dependencies.html":{}}}],["2.28.0",{"_index":1953,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":1958,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1952,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1935,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1898,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1918,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":1917,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1542,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["200",{"_index":1875,"title":{},"body":{"components/WebcamComponent.html":{}}}],["23",{"_index":2042,"title":{},"body":{"overview.html":{}}}],["25",{"_index":1916,"title":{},"body":{"coverage.html":{}}}],["2500",{"_index":446,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["255",{"_index":1118,"title":{},"body":{"components/OddsComponent.html":{}}}],["2560",{"_index":1798,"title":{},"body":{"components/WebcamComponent.html":{}}}],["2d",{"_index":1325,"title":{},"body":{"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{}}}],["2px",{"_index":1124,"title":{},"body":{"components/OddsComponent.html":{}}}],["3",{"_index":747,"title":{},"body":{"components/HeaderComponent.html":{},"components/SpinnerComponent.html":{}}}],["3/2.2",{"_index":1859,"title":{},"body":{"components/WebcamComponent.html":{}}}],["3/3",{"_index":1931,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1896,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":1928,"title":{},"body":{"coverage.html":{}}}],["31",{"_index":1926,"title":{},"body":{"coverage.html":{}}}],["320",{"_index":1796,"title":{},"body":{"components/WebcamComponent.html":{}}}],["33",{"_index":1881,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":1886,"title":{},"body":{"coverage.html":{}}}],["375/295",{"_index":1858,"title":{},"body":{"components/WebcamComponent.html":{}}}],["3rem",{"_index":1525,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["4",{"_index":1529,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["4.17.1",{"_index":1957,"title":{},"body":{"dependencies.html":{}}}],["4/11",{"_index":1887,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":1901,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1934,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1112,"title":{},"body":{"components/OddsComponent.html":{},"components/OddsLineComponent.html":{}}}],["47",{"_index":1892,"title":{},"body":{"coverage.html":{}}}],["4px",{"_index":1852,"title":{},"body":{"components/WebcamComponent.html":{}}}],["4rem",{"_index":815,"title":{},"body":{"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{}}}],["5",{"_index":1911,"title":{},"body":{"coverage.html":{}}}],["5/10",{"_index":1907,"title":{},"body":{"coverage.html":{}}}],["5/16",{"_index":1927,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":1899,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":1906,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1618,"title":{},"body":{"components/TriggerComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["500",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{}}}],["512",{"_index":448,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["5px",{"_index":1872,"title":{},"body":{"components/WebcamComponent.html":{}}}],["6",{"_index":1544,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["6/18",{"_index":1882,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1933,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":1913,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["61",{"_index":1888,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1905,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1897,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1854,"title":{},"body":{"components/WebcamComponent.html":{}}}],["7.4.0",{"_index":1960,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":1114,"title":{},"body":{"components/OddsComponent.html":{},"components/OddsLineComponent.html":{}}}],["75",{"_index":1895,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1531,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["8/10",{"_index":1904,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1903,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1932,"title":{},"body":{"coverage.html":{}}}],["9/10",{"_index":1894,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1900,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1863,"title":{},"body":{"components/WebcamComponent.html":{},"coverage.html":{}}}],["92",{"_index":1936,"title":{},"body":{"coverage.html":{}}}],["999px",{"_index":1868,"title":{},"body":{"components/WebcamComponent.html":{}}}],["__box",{"_index":1180,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["__boxes",{"_index":1179,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["__button",{"_index":1615,"title":{},"body":{"components/TriggerComponent.html":{}}}],["__close",{"_index":816,"title":{},"body":{"components/HelpComponent.html":{}}}],["__column",{"_index":1481,"title":{},"body":{"components/SnapComponent.html":{}}}],["__competitor",{"_index":1173,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["__headline",{"_index":1727,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{}}}],["__line",{"_index":1137,"title":{},"body":{"components/OddsComponent.html":{}}}],["__lines",{"_index":1135,"title":{},"body":{"components/OddsComponent.html":{}}}],["__link",{"_index":1125,"title":{},"body":{"components/OddsComponent.html":{}}}],["__odds",{"_index":1191,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["__powered",{"_index":1486,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["__reload",{"_index":1485,"title":{},"body":{"components/SnapComponent.html":{}}}],["__row",{"_index":1482,"title":{},"body":{"components/SnapComponent.html":{}}}],["__separator",{"_index":1116,"title":{},"body":{"components/OddsComponent.html":{}}}],["__spacer",{"_index":1487,"title":{},"body":{"components/SnapComponent.html":{}}}],["__spinner",{"_index":1111,"title":{},"body":{"components/OddsComponent.html":{},"components/TriggerComponent.html":{}}}],["__sport",{"_index":1192,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["__sportbook",{"_index":1132,"title":{},"body":{"components/OddsComponent.html":{}}}],["__switch",{"_index":1484,"title":{},"body":{"components/SnapComponent.html":{}}}],["__target",{"_index":1188,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["__tournament",{"_index":1113,"title":{},"body":{"components/OddsComponent.html":{}}}],["__tv",{"_index":1866,"title":{},"body":{"components/WebcamComponent.html":{}}}],["_blank",{"_index":1164,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["_links",{"_index":1197,"title":{},"body":{"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/TvChannel.html":{}}}],["_state",{"_index":308,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["above",{"_index":1175,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["absolute",{"_index":1545,"title":{},"body":{"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["acc",{"_index":468,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["accent",{"_index":742,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{}}}],["access_token",{"_index":10,"title":{},"body":{"interfaces/AccessToken.html":{}}}],["accessed",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/WebcamComponent.html":{}}}],["accessors",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationConfigService.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["accesstoken",{"_index":1,"title":{"interfaces/AccessToken.html":{}},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{},"coverage.html":{}}}],["accesstokenprovider",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["according",{"_index":1772,"title":{},"body":{"components/WebcamComponent.html":{}}}],["account",{"_index":1758,"title":{},"body":{"components/WebcamComponent.html":{}}}],["accusam",{"_index":798,"title":{},"body":{"components/HelpComponent.html":{}}}],["action",{"_index":676,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["actual_component",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["add",{"_index":1669,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["added",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["additional",{"_index":839,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["addseconds",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["addseconds(new",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["affected",{"_index":2024,"title":{},"body":{"index.html":{}}}],["affected:test",{"_index":2023,"title":{},"body":{"index.html":{}}}],["afterviewinit",{"_index":1729,"title":{},"body":{"components/WebcamComponent.html":{}}}],["afterwards",{"_index":1398,"title":{},"body":{"components/SnapComponent.html":{}}}],["against",{"_index":408,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["agianst",{"_index":1676,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["aired",{"_index":1578,"title":{},"body":{"interfaces/SportEvent.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["aliases",{"_index":2044,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":420,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["aliquyam",{"_index":793,"title":{},"body":{"components/HelpComponent.html":{}}}],["allow",{"_index":1776,"title":{},"body":{"components/WebcamComponent.html":{}}}],["allowed",{"_index":884,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["american",{"_index":1234,"title":{},"body":{"injectables/OddsService.html":{}}}],["amet",{"_index":778,"title":{},"body":{"components/HelpComponent.html":{}}}],["analytics",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{}}}],["analytics.service",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{}}}],["analytics.service.ts",{"_index":636,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["analytics.service.ts:10",{"_index":685,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:103",{"_index":669,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:107",{"_index":662,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:11",{"_index":653,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:22",{"_index":673,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:45",{"_index":654,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:54",{"_index":680,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:67",{"_index":659,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:76",{"_index":683,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:83",{"_index":661,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:87",{"_index":663,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:91",{"_index":664,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:95",{"_index":671,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analytics.service.ts:99",{"_index":666,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["analyticsservice",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{}}}],["analyzed",{"_index":1677,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["angular",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["angular/animations",{"_index":1941,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1943,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["angular/compiler",{"_index":1944,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"pipes/BestOfferLinePipe.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"pipes/NumberFormatPipe.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1945,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":1947,"title":{},"body":{"dependencies.html":{}}}],["animation",{"_index":1535,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["api",{"_index":1246,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{},"index.html":{}}}],["api/api",{"_index":1506,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["api/tv",{"_index":1507,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["apiurl",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":734,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["app.component",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":25,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationConfigService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application/octet",{"_index":1705,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["applicationconfig",{"_index":97,"title":{"interfaces/ApplicationConfig.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/LoggerService.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationconfigservice",{"_index":63,"title":{"injectables/ApplicationConfigService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"injectables/LoggerService.html":{},"injectables/NotificationService.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["applicationstate",{"_index":1383,"title":{},"body":{"components/SnapComponent.html":{}}}],["appmodule",{"_index":236,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps/.../app",{"_index":1967,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../application",{"_index":2049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../console",{"_index":2048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../document",{"_index":2050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../google",{"_index":2051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../location",{"_index":2052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../log",{"_index":1968,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["apps/.../manipulated",{"_index":2045,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../media",{"_index":1969,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../navigator",{"_index":2053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../storage",{"_index":2054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../window",{"_index":2055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/snapodds/src/app/app.component.ts",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/app.component.ts:104",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:21",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:23",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:24",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:25",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:26",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:27",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:28",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:29",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:30",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:31",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:34",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:45",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:47",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:60",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:70",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:78",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.component.ts:87",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/snapodds/src/app/app.module.ts",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/snapodds/src/app/app.module.ts:67",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/snapodds/src/app/content/content.component.ts",{"_index":585,"title":{},"body":{"components/ContentComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/footer/footer.component.ts",{"_index":621,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/header/header.component.ts",{"_index":726,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/header/header.component.ts:15",{"_index":732,"title":{},"body":{"components/HeaderComponent.html":{}}}],["apps/snapodds/src/app/header/header.component.ts:9",{"_index":731,"title":{},"body":{"components/HeaderComponent.html":{}}}],["apps/snapodds/src/app/help/help.component.ts",{"_index":762,"title":{},"body":{"components/HelpComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/help/help.component.ts:15",{"_index":769,"title":{},"body":{"components/HelpComponent.html":{}}}],["apps/snapodds/src/app/help/help.component.ts:9",{"_index":768,"title":{},"body":{"components/HelpComponent.html":{}}}],["apps/snapodds/src/app/odds",{"_index":1140,"title":{},"body":{"components/OddsLineComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts",{"_index":1048,"title":{},"body":{"components/OddsComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:12",{"_index":1081,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:13",{"_index":1082,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:14",{"_index":1083,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:16",{"_index":1061,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:17",{"_index":1060,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:26",{"_index":1074,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:40",{"_index":1064,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:62",{"_index":1078,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/odds/odds.component.ts:72",{"_index":1080,"title":{},"body":{"components/OddsComponent.html":{}}}],["apps/snapodds/src/app/pipes/best",{"_index":542,"title":{},"body":{"pipes/BestOfferLinePipe.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/pipes/number",{"_index":1025,"title":{},"body":{"pipes/NumberFormatPipe.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts",{"_index":1339,"title":{},"body":{"components/SnapComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:102",{"_index":1384,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:118",{"_index":1395,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:135",{"_index":1367,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:146",{"_index":1359,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:159",{"_index":1373,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:177",{"_index":1394,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:184",{"_index":1391,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:22",{"_index":1415,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:24",{"_index":1409,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:25",{"_index":1412,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:27",{"_index":1411,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:28",{"_index":1357,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:48",{"_index":1381,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:63",{"_index":1403,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:79",{"_index":1377,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/snap/snap.component.ts:89",{"_index":1406,"title":{},"body":{"components/SnapComponent.html":{}}}],["apps/snapodds/src/app/spinner/spinner.component.ts",{"_index":1520,"title":{},"body":{"components/SpinnerComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/spinner/spinner.component.ts:10",{"_index":1524,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["apps/snapodds/src/app/svgs/switch.svg.component.ts",{"_index":1591,"title":{},"body":{"components/SwitchSvgComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/svgs/trigger.svg.component.ts",{"_index":1619,"title":{},"body":{"components/TriggerSvgComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/trigger/trigger.component.ts",{"_index":1606,"title":{},"body":{"components/TriggerComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/trigger/trigger.component.ts:10",{"_index":1613,"title":{},"body":{"components/TriggerComponent.html":{}}}],["apps/snapodds/src/app/trigger/trigger.component.ts:11",{"_index":1614,"title":{},"body":{"components/TriggerComponent.html":{}}}],["apps/snapodds/src/app/trigger/trigger.component.ts:9",{"_index":1612,"title":{},"body":{"components/TriggerComponent.html":{}}}],["apps/snapodds/src/app/user",{"_index":1716,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts",{"_index":1728,"title":{},"body":{"components/WebcamComponent.html":{},"coverage.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:105",{"_index":1763,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:115",{"_index":1771,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:124",{"_index":1778,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:132",{"_index":1750,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:140",{"_index":1760,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:148",{"_index":1753,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:19",{"_index":1787,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:20",{"_index":1799,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:25",{"_index":1805,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:26",{"_index":1807,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:27",{"_index":1791,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:28",{"_index":1802,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:30",{"_index":1785,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:32",{"_index":1788,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:33",{"_index":1748,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:46",{"_index":1777,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:60",{"_index":1773,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:72",{"_index":1780,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/app/webcam/webcam.component.ts:94",{"_index":1765,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apps/snapodds/src/config/application",{"_index":352,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"coverage.html":{}}}],["apps/snapodds/src/models/best",{"_index":561,"title":{},"body":{"interfaces/BestOfferLineViewModel.html":{},"interfaces/BestOfferViewModel.html":{},"coverage.html":{}}}],["apps/snapodds/src/models/line",{"_index":925,"title":{},"body":{"interfaces/LineOdds.html":{},"coverage.html":{}}}],["apps/snapodds/src/models/sports",{"_index":1583,"title":{},"body":{"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/api/api",{"_index":1630,"title":{},"body":{"classes/TvSearchNoResultError.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/api/odds.service.ts",{"_index":1216,"title":{},"body":{"injectables/OddsService.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/api/odds.service.ts:107",{"_index":1244,"title":{},"body":{"injectables/OddsService.html":{}}}],["apps/snapodds/src/services/api/odds.service.ts:136",{"_index":1261,"title":{},"body":{"injectables/OddsService.html":{}}}],["apps/snapodds/src/services/api/odds.service.ts:184",{"_index":1254,"title":{},"body":{"injectables/OddsService.html":{}}}],["apps/snapodds/src/services/api/odds.service.ts:210",{"_index":1237,"title":{},"body":{"injectables/OddsService.html":{}}}],["apps/snapodds/src/services/api/odds.service.ts:219",{"_index":1231,"title":{},"body":{"injectables/OddsService.html":{}}}],["apps/snapodds/src/services/api/odds.service.ts:22",{"_index":1228,"title":{},"body":{"injectables/OddsService.html":{}}}],["apps/snapodds/src/services/api/odds.service.ts:32",{"_index":1263,"title":{},"body":{"injectables/OddsService.html":{}}}],["apps/snapodds/src/services/api/odds.service.ts:40",{"_index":1242,"title":{},"body":{"injectables/OddsService.html":{}}}],["apps/snapodds/src/services/api/odds.service.ts:56",{"_index":1250,"title":{},"body":{"injectables/OddsService.html":{}}}],["apps/snapodds/src/services/api/odds.service.ts:75",{"_index":1258,"title":{},"body":{"injectables/OddsService.html":{}}}],["apps/snapodds/src/services/api/tv",{"_index":1651,"title":{},"body":{"injectables/TvSearchService.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts:11",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts:12",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts:14",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts:22",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts:36",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts:45",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts:52",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/snapodds/src/services/auth/auth.service.ts:60",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/snapodds/src/services/config/application",{"_index":373,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/snapodds/src/services/i18n/file",{"_index":596,"title":{},"body":{"classes/FileTranslateLoader.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/i18n/translation",{"_index":1595,"title":{},"body":{"interfaces/TranslationEntries.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/image",{"_index":820,"title":{},"body":{"injectables/ImageManipulationService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/snapodds/src/services/logger/log",{"_index":1914,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["apps/snapodds/src/services/logger/logger.service.ts",{"_index":942,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/logger/logger.service.ts:11",{"_index":947,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/snapodds/src/services/logger/logger.service.ts:17",{"_index":949,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/snapodds/src/services/logger/logger.service.ts:21",{"_index":951,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/snapodds/src/services/logger/logger.service.ts:25",{"_index":968,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/snapodds/src/services/logger/logger.service.ts:29",{"_index":953,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/snapodds/src/services/logger/logger.service.ts:41",{"_index":960,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/snapodds/src/services/logger/logger.service.ts:66",{"_index":955,"title":{},"body":{"injectables/LoggerService.html":{}}}],["apps/snapodds/src/services/notification/notification.service.ts",{"_index":1007,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/notification/notification.service.ts:17",{"_index":1017,"title":{},"body":{"injectables/NotificationService.html":{}}}],["apps/snapodds/src/services/notification/notification.service.ts:27",{"_index":1013,"title":{},"body":{"injectables/NotificationService.html":{}}}],["apps/snapodds/src/services/notification/notification.service.ts:8",{"_index":1012,"title":{},"body":{"injectables/NotificationService.html":{}}}],["apps/snapodds/src/services/snap",{"_index":1488,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"coverage.html":{}}}],["apps/snapodds/src/services/tokens/console",{"_index":1919,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/snapodds/src/services/tokens/document",{"_index":1920,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/snapodds/src/services/tokens/location",{"_index":1921,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/snapodds/src/services/tokens/navigator",{"_index":1922,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/snapodds/src/services/tokens/storage",{"_index":1923,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/snapodds/src/services/tokens/window",{"_index":1925,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/snapodds/src/services/tracking/google",{"_index":635,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/snapodds/src/states/app",{"_index":306,"title":{},"body":{"injectables/AppStateStore.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["apps/snapodds/src/states/media",{"_index":989,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["appstate",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{}}}],["appstate.show_help",{"_index":324,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["appstates",{"_index":335,"title":{},"body":{"injectables/AppStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["appstatestore",{"_index":67,"title":{"injectables/AppStateStore.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["area",{"_index":1781,"title":{},"body":{"components/WebcamComponent.html":{}}}],["array",{"_index":1240,"title":{},"body":{"injectables/OddsService.html":{}}}],["arraybuffer",{"_index":1786,"title":{},"body":{"components/WebcamComponent.html":{}}}],["artifacts",{"_index":2006,"title":{},"body":{"index.html":{}}}],["aspect",{"_index":1856,"title":{},"body":{"components/WebcamComponent.html":{}}}],["assign",{"_index":1079,"title":{},"body":{"components/OddsComponent.html":{}}}],["assigned",{"_index":1067,"title":{},"body":{"components/OddsComponent.html":{}}}],["assigns",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["auth/auth.service",{"_index":1266,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["authenticate",{"_index":1667,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["authorities",{"_index":12,"title":{},"body":{"interfaces/AccessToken.html":{}}}],["authorization",{"_index":1272,"title":{},"body":{"injectables/OddsService.html":{}}}],["authresponse",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresponse.access_token",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresponse.expires_in",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice",{"_index":484,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{},"coverage.html":{}}}],["auto",{"_index":588,"title":{},"body":{"components/ContentComponent.html":{},"components/WebcamComponent.html":{}}}],["automatically",{"_index":1999,"title":{},"body":{"index.html":{}}}],["autosearchsport",{"_index":1490,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["autosearchsport(imagedata",{"_index":1495,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["autosnap",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/variables.html":{}}}],["autosnap_delay",{"_index":375,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["autosnap_delay_initial",{"_index":376,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["autosnap_max_dimension",{"_index":377,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["autosnapping",{"_index":360,"title":{},"body":{"interfaces/ApplicationConfig.html":{}}}],["available",{"_index":658,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"interfaces/LineOdds.html":{},"interfaces/OddsResponse.html":{},"interfaces/SportsBook.html":{},"interfaces/TranslationEntries.html":{},"components/WebcamComponent.html":{},"index.html":{}}}],["avoid",{"_index":550,"title":{},"body":{"pipes/BestOfferLinePipe.html":{}}}],["b",{"_index":1333,"title":{},"body":{"interfaces/Quadrangle2d.html":{}}}],["background",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["bar",{"_index":1527,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["base",{"_index":634,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{}}}],["based",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"components/SnapComponent.html":{}}}],["baseline",{"_index":738,"title":{},"body":{"components/HeaderComponent.html":{}}}],["baseurl",{"_index":1225,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["beacon",{"_index":711,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["bearer",{"_index":1273,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["below",{"_index":1176,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["beneath",{"_index":856,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["best",{"_index":568,"title":{},"body":{"interfaces/BestOfferLineViewModel.html":{},"interfaces/BestOfferViewModel.html":{},"interfaces/LineOdds.html":{},"interfaces/OddsBestOffer.html":{},"interfaces/OddsBestOfferOutcome.html":{},"components/OddsComponent.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"coverage.html":{}}}],["bestoffer",{"_index":928,"title":{},"body":{"interfaces/LineOdds.html":{}}}],["bestoffer.name",{"_index":1107,"title":{},"body":{"components/OddsComponent.html":{}}}],["bestofferline",{"_index":544,"title":{},"body":{"pipes/BestOfferLinePipe.html":{}}}],["bestofferlinepipe",{"_index":241,"title":{"pipes/BestOfferLinePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/BestOfferLinePipe.html":{},"coverage.html":{},"overview.html":{}}}],["bestofferlineviewmodel",{"_index":548,"title":{"interfaces/BestOfferLineViewModel.html":{}},"body":{"pipes/BestOfferLinePipe.html":{},"interfaces/BestOfferLineViewModel.html":{},"interfaces/BestOfferViewModel.html":{},"components/OddsLineComponent.html":{},"coverage.html":{}}}],["bestofferresponse",{"_index":1245,"title":{},"body":{"injectables/OddsService.html":{}}}],["bestoffers",{"_index":1212,"title":{},"body":{"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{}}}],["bestofferviewmodel",{"_index":573,"title":{"interfaces/BestOfferViewModel.html":{}},"body":{"interfaces/BestOfferViewModel.html":{},"interfaces/LineOdds.html":{},"injectables/OddsService.html":{},"coverage.html":{}}}],["bet",{"_index":1044,"title":{},"body":{"interfaces/OddsBestOffer.html":{},"interfaces/OddsBestOfferOutcome.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{}}}],["bets",{"_index":1206,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{}}}],["better",{"_index":1251,"title":{},"body":{"injectables/OddsService.html":{}}}],["between",{"_index":593,"title":{},"body":{"components/ContentComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["bit",{"_index":1396,"title":{},"body":{"components/SnapComponent.html":{}}}],["blob",{"_index":838,"title":{},"body":{"injectables/ImageManipulationService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["block",{"_index":1121,"title":{},"body":{"components/OddsComponent.html":{},"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{}}}],["book",{"_index":560,"title":{},"body":{"pipes/BestOfferLinePipe.html":{},"interfaces/BestOfferLineViewModel.html":{},"interfaces/BestOfferViewModel.html":{},"interfaces/LineOdds.html":{},"interfaces/OddsBestOfferOutcome.html":{},"components/OddsLineComponent.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{},"coverage.html":{}}}],["book.ts",{"_index":1582,"title":{},"body":{"interfaces/SportsBook.html":{},"coverage.html":{}}}],["books",{"_index":1193,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["boolean",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/NotificationService.html":{},"components/TriggerComponent.html":{},"interfaces/TvChannel.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["boolean(this.accesstoken",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{}}}],["border",{"_index":739,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{}}}],["bottom",{"_index":627,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["box",{"_index":813,"title":{},"body":{"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/WebcamComponent.html":{}}}],["break",{"_index":979,"title":{},"body":{"injectables/LoggerService.html":{}}}],["breaks",{"_index":1726,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{}}}],["broadcasted",{"_index":1556,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["browse",{"_index":2038,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"components/OddsLineComponent.html":{},"components/WebcamComponent.html":{},"dependencies.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["browserapi",{"_index":1014,"title":{},"body":{"injectables/NotificationService.html":{}}}],["browsermodule",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":605,"title":{},"body":{"classes/FileTranslateLoader.html":{},"index.html":{}}}],["build:elements",{"_index":2013,"title":{},"body":{"index.html":{}}}],["builder",{"_index":1988,"title":{},"body":{"index.html":{}}}],["button",{"_index":760,"title":{},"body":{"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{}}}],["c",{"_index":751,"title":{},"body":{"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["calculate",{"_index":1688,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["calculated",{"_index":1684,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["calculates",{"_index":872,"title":{},"body":{"injectables/ImageManipulationService.html":{},"injectables/TvSearchService.html":{}}}],["call",{"_index":1068,"title":{},"body":{"components/OddsComponent.html":{},"components/SnapComponent.html":{}}}],["callback",{"_index":354,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"components/OddsComponent.html":{},"components/WebcamComponent.html":{}}}],["callbacks",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["called",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["camera",{"_index":421,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["cameras",{"_index":1672,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["cameraswitched",{"_index":1738,"title":{},"body":{"components/WebcamComponent.html":{}}}],["cameraswitched(deviceid",{"_index":1749,"title":{},"body":{"components/WebcamComponent.html":{}}}],["can't",{"_index":552,"title":{},"body":{"pipes/BestOfferLinePipe.html":{},"components/WebcamComponent.html":{}}}],["cancel",{"_index":759,"title":{},"body":{"components/HeaderComponent.html":{}}}],["cancelsnap",{"_index":730,"title":{},"body":{"components/HeaderComponent.html":{}}}],["canvas",{"_index":837,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["canvas.getcontext('2d",{"_index":902,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["canvas.height",{"_index":900,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["canvas.toblob",{"_index":915,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["canvas.width",{"_index":899,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["case",{"_index":976,"title":{},"body":{"injectables/LoggerService.html":{}}}],["catch",{"_index":703,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{}}}],["catcherror",{"_index":1503,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["catcherror((error",{"_index":1514,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["category",{"_index":637,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"interfaces/SportEvent.html":{}}}],["center",{"_index":755,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["centercontentonzoom",{"_index":1739,"title":{},"body":{"components/WebcamComponent.html":{}}}],["change",{"_index":315,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{},"index.html":{}}}],["changed",{"_index":1075,"title":{},"body":{"components/OddsComponent.html":{}}}],["changes",{"_index":318,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{}}}],["changes.tvsearchresultentry.currentvalue",{"_index":1088,"title":{},"body":{"components/OddsComponent.html":{}}}],["channel",{"_index":1558,"title":{},"body":{"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["channel.ts",{"_index":1622,"title":{},"body":{"interfaces/TvChannel.html":{},"coverage.html":{}}}],["channels",{"_index":1646,"title":{},"body":{"interfaces/TvSearchResultEntry.html":{}}}],["checks",{"_index":655,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["child(#{$i",{"_index":1548,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["class",{"_index":149,"title":{"classes/FileTranslateLoader.html":{},"classes/TvSearchNoResultError.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"pipes/BestOfferLinePipe.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"pipes/NumberFormatPipe.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"classes/TvSearchNoResultError.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["classes",{"_index":595,"title":{},"body":{"classes/FileTranslateLoader.html":{},"classes/TvSearchNoResultError.html":{},"overview.html":{}}}],["clean",{"_index":1378,"title":{},"body":{"components/SnapComponent.html":{}}}],["clears",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["clickable",{"_index":1183,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["clicked",{"_index":1611,"title":{},"body":{"components/TriggerComponent.html":{}}}],["client",{"_index":1668,"title":{},"body":{"injectables/TvSearchService.html":{},"index.html":{}}}],["clita",{"_index":805,"title":{},"body":{"components/HelpComponent.html":{}}}],["closecallback",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["closed",{"_index":356,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"components/HeaderComponent.html":{},"components/SnapComponent.html":{}}}],["closeevent",{"_index":394,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/HeaderComponent.html":{}}}],["closeoddsview",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/OddsComponent.html":{}}}],["cluster_appmodule",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":616,"title":{},"body":{"classes/FileTranslateLoader.html":{},"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{},"index.html":{}}}],["color",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["column",{"_index":590,"title":{},"body":{"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{}}}],["combined",{"_index":578,"title":{},"body":{"interfaces/BestOfferViewModel.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{}}}],["competitor",{"_index":579,"title":{"interfaces/Competitor.html":{}},"body":{"interfaces/Competitor.html":{},"interfaces/LineOdds.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"coverage.html":{}}}],["competitor.id",{"_index":1319,"title":{},"body":{"injectables/OddsService.html":{}}}],["competitor.name",{"_index":1104,"title":{},"body":{"components/OddsComponent.html":{}}}],["competitorid",{"_index":1202,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{},"injectables/OddsService.html":{}}}],["competitorindex",{"_index":1293,"title":{},"body":{"injectables/OddsService.html":{}}}],["competitorname",{"_index":1145,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["competitors",{"_index":929,"title":{},"body":{"interfaces/LineOdds.html":{},"components/OddsComponent.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/SportEvent.html":{}}}],["competitors.findindex((competitor",{"_index":1318,"title":{},"body":{"injectables/OddsService.html":{}}}],["competitors.map",{"_index":1280,"title":{},"body":{"injectables/OddsService.html":{}}}],["competitors?.length",{"_index":1276,"title":{},"body":{"injectables/OddsService.html":{}}}],["component",{"_index":24,"title":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["components",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"overview.html":{}}}],["compression",{"_index":846,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["config",{"_index":378,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"injectables/LoggerService.html":{},"injectables/NotificationService.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["config.service.ts",{"_index":374,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.service.ts:106",{"_index":396,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:113",{"_index":392,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:121",{"_index":400,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:128",{"_index":431,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:24",{"_index":451,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:26",{"_index":453,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:27",{"_index":449,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:28",{"_index":447,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:29",{"_index":445,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:35",{"_index":442,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:44",{"_index":436,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:54",{"_index":455,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:61",{"_index":428,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:68",{"_index":424,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:76",{"_index":410,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:83",{"_index":422,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:90",{"_index":423,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.service.ts:97",{"_index":404,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["config.ts",{"_index":353,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"coverage.html":{}}}],["config/application",{"_index":457,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/LoggerService.html":{},"injectables/NotificationService.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["configuration",{"_index":460,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["configure",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["configured",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationConfigService.html":{},"injectables/LoggerService.html":{},"components/SnapComponent.html":{}}}],["connector",{"_index":1874,"title":{},"body":{"components/WebcamComponent.html":{}}}],["consetetur",{"_index":779,"title":{},"body":{"components/HelpComponent.html":{}}}],["consideration",{"_index":1659,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["console",{"_index":946,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationConfigService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/OddsService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["constructor",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"classes/TvSearchNoResultError.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["constructor(@inject(window",{"_index":1161,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["constructor(applicationconfigservice",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"injectables/LoggerService.html":{}}}],["constructor(appstatestore",{"_index":767,"title":{},"body":{"components/HelpComponent.html":{}}}],["constructor(http",{"_index":1226,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["constructor(imagemanipulationservice",{"_index":1747,"title":{},"body":{"components/WebcamComponent.html":{}}}],["constructor(logger",{"_index":651,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"components/SnapComponent.html":{}}}],["constructor(navigator",{"_index":1010,"title":{},"body":{"injectables/NotificationService.html":{}}}],["constructor(oddsservice",{"_index":1058,"title":{},"body":{"components/OddsComponent.html":{}}}],["constructor(private",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"components/OddsComponent.html":{}}}],["constructor(tvsearchservice",{"_index":1492,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["constructor(window",{"_index":1147,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["container",{"_index":1130,"title":{},"body":{"components/OddsComponent.html":{},"components/WebcamComponent.html":{}}}],["contains",{"_index":576,"title":{},"body":{"interfaces/BestOfferViewModel.html":{},"interfaces/SportsBookViewModel.html":{},"index.html":{}}}],["content",{"_index":586,"title":{},"body":{"components/ContentComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{}}}],["content'},{'name",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["content.component.scss",{"_index":587,"title":{},"body":{"components/ContentComponent.html":{}}}],["content/content.component",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["contentcomponent",{"_index":204,"title":{"components/ContentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["convert",{"_index":1232,"title":{},"body":{"injectables/OddsService.html":{},"miscellaneous/functions.html":{}}}],["converts",{"_index":836,"title":{},"body":{"injectables/ImageManipulationService.html":{},"injectables/OddsService.html":{},"components/WebcamComponent.html":{}}}],["converttoamericanodds",{"_index":1217,"title":{},"body":{"injectables/OddsService.html":{}}}],["converttoamericanodds(odds",{"_index":1230,"title":{},"body":{"injectables/OddsService.html":{}}}],["coordinate",{"_index":1329,"title":{},"body":{"interfaces/Point2d.html":{}}}],["correctly",{"_index":419,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{}}}],["corresponding",{"_index":398,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/HelpComponent.html":{},"interfaces/OddsResponse.html":{},"components/SnapComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["cors",{"_index":1951,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":1530,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["coverage",{"_index":1878,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1665,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["createcustomelement",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["createcustomelement(appcomponent",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["createimagefromcanvas",{"_index":823,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["createimagefromcanvas(canvas",{"_index":831,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["creates",{"_index":867,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["createsnapscreenheaders",{"_index":1654,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["createsnapscreenheaders(accesstoken",{"_index":1662,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["crop",{"_index":824,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["crop(source",{"_index":847,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["cropandresizeimage",{"_index":825,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["cropandresizeimage(source",{"_index":864,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["cropped",{"_index":860,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["crops",{"_index":853,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["current",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TvSearchService.html":{}}}],["currentcolor",{"_index":1532,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["currently",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["currenttimestamp",{"_index":1656,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["cursor",{"_index":1184,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["cursors",{"_index":1756,"title":{},"body":{"components/WebcamComponent.html":{}}}],["customelements.define('snapodds",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["d",{"_index":1334,"title":{},"body":{"interfaces/Quadrangle2d.html":{}}}],["data",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"interfaces/LineOdds.html":{},"injectables/LoggerService.html":{},"injectables/OddsService.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{}}}],["dataurl",{"_index":1764,"title":{},"body":{"components/WebcamComponent.html":{}}}],["date",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{},"components/OddsComponent.html":{},"dependencies.html":{}}}],["date.now",{"_index":1512,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["date.parse(responsedate",{"_index":1712,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["datetime",{"_index":1567,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["dd't'hh:mm:ss.ssszz",{"_index":1571,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["de",{"_index":600,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["debug",{"_index":943,"title":{},"body":{"injectables/LoggerService.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{}}}],["debug(...data",{"_index":948,"title":{},"body":{"injectables/LoggerService.html":{}}}],["debugimagemanipulations",{"_index":1740,"title":{},"body":{"components/WebcamComponent.html":{}}}],["declarations",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["declare",{"_index":688,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["decoration",{"_index":1126,"title":{},"body":{"components/OddsComponent.html":{}}}],["decorators",{"_index":1413,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["deep",{"_index":1724,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["default",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"miscellaneous/variables.html":{}}}],["default_application_config",{"_index":450,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultlanguage",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["defer",{"_index":1417,"title":{},"body":{"components/SnapComponent.html":{}}}],["defined",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"pipes/BestOfferLinePipe.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"pipes/NumberFormatPipe.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"classes/TvSearchNoResultError.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["delay",{"_index":411,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"injectables/TvSearchService.html":{}}}],["dep",{"_index":2027,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":238,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["depending",{"_index":1360,"title":{},"body":{"components/SnapComponent.html":{}}}],["depth",{"_index":1877,"title":{},"body":{"components/WebcamComponent.html":{}}}],["description",{"_index":413,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/OddsBestOfferOutcome.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{},"interfaces/TranslationEntries.html":{},"interfaces/TvChannel.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["destroyed",{"_index":1343,"title":{},"body":{"components/SnapComponent.html":{}}}],["determine",{"_index":1761,"title":{},"body":{"components/WebcamComponent.html":{}}}],["determines",{"_index":429,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/NotificationService.html":{}}}],["determining",{"_index":336,"title":{},"body":{"injectables/AppStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["dev",{"_index":1997,"title":{},"body":{"index.html":{}}}],["development",{"_index":1987,"title":{},"body":{"index.html":{}}}],["device",{"_index":369,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["device_camera_ready",{"_index":1005,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["device_init",{"_index":1004,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["device_no_camera",{"_index":345,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["device_no_permission",{"_index":346,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["deviceid",{"_index":1752,"title":{},"body":{"components/WebcamComponent.html":{}}}],["diagram",{"_index":2030,"title":{},"body":{"index.html":{}}}],["diam",{"_index":783,"title":{},"body":{"components/HelpComponent.html":{}}}],["difference",{"_index":1681,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["differenceinseconds",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["differenceinseconds(this.tokenexpirationdate",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{}}}],["different",{"_index":1376,"title":{},"body":{"components/SnapComponent.html":{}}}],["dimension",{"_index":425,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/ImageManipulationService.html":{}}}],["direction",{"_index":589,"title":{},"body":{"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{}}}],["directive",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["directives",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["directory",{"_index":2008,"title":{},"body":{"index.html":{}}}],["disable",{"_index":359,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["disabled",{"_index":1609,"title":{},"body":{"components/TriggerComponent.html":{}}}],["discipline",{"_index":1573,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["dispatch",{"_index":311,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["dispatch(state",{"_index":313,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["display",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["displayed",{"_index":1233,"title":{},"body":{"injectables/OddsService.html":{}}}],["dist/elements",{"_index":2015,"title":{},"body":{"index.html":{}}}],["dist/snapodds",{"_index":2007,"title":{},"body":{"index.html":{}}}],["distinguished",{"_index":553,"title":{},"body":{"pipes/BestOfferLinePipe.html":{}}}],["distributed",{"_index":1984,"title":{},"body":{"index.html":{}}}],["div",{"_index":1534,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["div::after",{"_index":1540,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["div:nth",{"_index":1547,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["dobootstrap",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["document",{"_index":829,"title":{},"body":{"injectables/ImageManipulationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":1879,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doesn't",{"_index":1627,"title":{},"body":{"interfaces/TvChannel.html":{}}}],["dolor",{"_index":776,"title":{},"body":{"components/HelpComponent.html":{}}}],["dolore",{"_index":791,"title":{},"body":{"components/HelpComponent.html":{}}}],["dolores",{"_index":801,"title":{},"body":{"components/HelpComponent.html":{}}}],["dom",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["don't",{"_index":607,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["dotenv",{"_index":1954,"title":{},"body":{"dependencies.html":{}}}],["downscale",{"_index":826,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["downscale(sourcewidth",{"_index":869,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["drawdebugimage",{"_index":1741,"title":{},"body":{"components/WebcamComponent.html":{}}}],["drawdebugimage(blob",{"_index":1762,"title":{},"body":{"components/WebcamComponent.html":{}}}],["due",{"_index":1363,"title":{},"body":{"components/SnapComponent.html":{}}}],["duo",{"_index":800,"title":{},"body":{"components/HelpComponent.html":{}}}],["duration",{"_index":667,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"injectables/SnapOddsFacade.html":{}}}],["during",{"_index":604,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["dynamic",{"_index":1946,"title":{},"body":{"dependencies.html":{}}}],["ea",{"_index":802,"title":{},"body":{"components/HelpComponent.html":{}}}],["eirmod",{"_index":785,"title":{},"body":{"components/HelpComponent.html":{}}}],["el",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["element",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"index.html":{}}}],["elementref",{"_index":1800,"title":{},"body":{"components/WebcamComponent.html":{}}}],["elitr",{"_index":781,"title":{},"body":{"components/HelpComponent.html":{}}}],["ellipsis",{"_index":1134,"title":{},"body":{"components/OddsComponent.html":{}}}],["emit",{"_index":1368,"title":{},"body":{"components/SnapComponent.html":{}}}],["emitcloseevent",{"_index":380,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["emitloggerevent",{"_index":381,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["emitloggerevent(loglevel",{"_index":395,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["emitresultsevent",{"_index":382,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["emitresultsevent(resultentry",{"_index":399,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["emits",{"_index":326,"title":{},"body":{"injectables/AppStateStore.html":{},"components/HeaderComponent.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["empty",{"_index":918,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["en",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationConfigService.html":{},"classes/FileTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["enable",{"_index":358,"title":{},"body":{"interfaces/ApplicationConfig.html":{}}}],["enabled",{"_index":430,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/WebcamComponent.html":{}}}],["end",{"_index":1136,"title":{},"body":{"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["endpoint",{"_index":1675,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["endpoints",{"_index":1994,"title":{},"body":{"index.html":{}}}],["endtime",{"_index":1559,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["entity",{"_index":581,"title":{},"body":{"interfaces/Competitor.html":{},"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{}}}],["entries",{"_index":438,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"classes/FileTranslateLoader.html":{},"interfaces/TvSearchResult.html":{}}}],["entries.de",{"_index":618,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["entries.en",{"_index":619,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["entries.ts",{"_index":1596,"title":{},"body":{"interfaces/TranslationEntries.html":{},"coverage.html":{}}}],["entry",{"_index":1369,"title":{},"body":{"components/SnapComponent.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["entry.ts",{"_index":1644,"title":{},"body":{"interfaces/TvSearchResultEntry.html":{},"coverage.html":{}}}],["entrycomponents",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["enum",{"_index":338,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["enumerations",{"_index":1966,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1795,"title":{},"body":{"components/WebcamComponent.html":{}}}],["environment.debugimagemanipulations",{"_index":1782,"title":{},"body":{"components/WebcamComponent.html":{}}}],["environments/environment",{"_index":1809,"title":{},"body":{"components/WebcamComponent.html":{}}}],["eos",{"_index":797,"title":{},"body":{"components/HelpComponent.html":{}}}],["erat",{"_index":794,"title":{},"body":{"components/HelpComponent.html":{}}}],["error",{"_index":704,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"classes/TvSearchNoResultError.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{}}}],["error(...data",{"_index":950,"title":{},"body":{"injectables/LoggerService.html":{}}}],["errormessage",{"_index":917,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["errors",{"_index":1365,"title":{},"body":{"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["errors.pipe(delay(this.applicationconfigservice.getautosnapdelay",{"_index":1461,"title":{},"body":{"components/SnapComponent.html":{}}}],["errors.ts",{"_index":1631,"title":{},"body":{"classes/TvSearchNoResultError.html":{},"coverage.html":{}}}],["errors.ts:4",{"_index":1633,"title":{},"body":{"classes/TvSearchNoResultError.html":{}}}],["est",{"_index":811,"title":{},"body":{"components/HelpComponent.html":{}}}],["et",{"_index":790,"title":{},"body":{"components/HelpComponent.html":{}}}],["event",{"_index":363,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"interfaces/Competitor.html":{},"injectables/GoogleAnalyticsService.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"interfaces/OddsResponse.html":{},"components/SnapComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["event.preventdefault",{"_index":1162,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["event.ts",{"_index":1555,"title":{},"body":{"interfaces/SportEvent.html":{},"coverage.html":{}}}],["eventaction",{"_index":699,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["eventcategory",{"_index":697,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["eventemitter",{"_index":1062,"title":{},"body":{"components/OddsComponent.html":{},"components/TriggerComponent.html":{}}}],["eventlabel",{"_index":700,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["events",{"_index":1617,"title":{},"body":{"components/TriggerComponent.html":{},"classes/TvSearchNoResultError.html":{},"components/WebcamComponent.html":{}}}],["eventvalue",{"_index":702,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["execute",{"_index":2020,"title":{},"body":{"index.html":{}}}],["executed",{"_index":355,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["existing",{"_index":1379,"title":{},"body":{"components/SnapComponent.html":{}}}],["expiration",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["expires_in",{"_index":13,"title":{},"body":{"interfaces/AccessToken.html":{}}}],["export",{"_index":21,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"pipes/BestOfferLinePipe.html":{},"interfaces/BestOfferLineViewModel.html":{},"interfaces/BestOfferViewModel.html":{},"interfaces/Competitor.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"pipes/NumberFormatPipe.html":{},"interfaces/OddsBestOffer.html":{},"interfaces/OddsBestOfferOutcome.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{},"components/SwitchSvgComponent.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["express",{"_index":1956,"title":{},"body":{"dependencies.html":{}}}],["express.js",{"_index":1985,"title":{},"body":{"index.html":{}}}],["extends",{"_index":563,"title":{},"body":{"interfaces/BestOfferLineViewModel.html":{},"interfaces/OddsBestOffer.html":{},"interfaces/OddsBestOfferOutcome.html":{},"classes/TvSearchNoResultError.html":{}}}],["external",{"_index":1575,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["externalid",{"_index":1560,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["externally",{"_index":608,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["extract",{"_index":1255,"title":{},"body":{"injectables/OddsService.html":{}}}],["extracted",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["facade.service",{"_index":1431,"title":{},"body":{"components/SnapComponent.html":{}}}],["facade.service.ts",{"_index":1489,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"coverage.html":{}}}],["facade.service.ts:10",{"_index":1494,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["facade.service.ts:22",{"_index":1500,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["facade.service.ts:44",{"_index":1496,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["facingmode",{"_index":1793,"title":{},"body":{"components/WebcamComponent.html":{}}}],["factor",{"_index":861,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["factory",{"_index":2058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["failed",{"_index":921,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/OddsComponent.html":{},"injectables/SnapOddsFacade.html":{}}}],["fails",{"_index":1069,"title":{},"body":{"components/OddsComponent.html":{}}}],["fallback",{"_index":675,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["false",{"_index":415,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["features",{"_index":2034,"title":{},"body":{"index.html":{}}}],["feedback",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["fff",{"_index":1129,"title":{},"body":{"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/WebcamComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"pipes/BestOfferLinePipe.html":{},"interfaces/BestOfferLineViewModel.html":{},"interfaces/BestOfferViewModel.html":{},"interfaces/Competitor.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"pipes/NumberFormatPipe.html":{},"interfaces/OddsBestOffer.html":{},"interfaces/OddsBestOfferOutcome.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{},"components/SwitchSvgComponent.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["filereader",{"_index":1832,"title":{},"body":{"components/WebcamComponent.html":{}}}],["files",{"_index":2000,"title":{},"body":{"index.html":{}}}],["filetranslateloader",{"_index":268,"title":{"classes/FileTranslateLoader.html":{}},"body":{"modules/AppModule.html":{},"classes/FileTranslateLoader.html":{},"coverage.html":{}}}],["filter",{"_index":437,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["filter((offer",{"_index":1283,"title":{},"body":{"injectables/OddsService.html":{}}}],["filter((state",{"_index":997,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["find",{"_index":1238,"title":{},"body":{"injectables/OddsService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["findcompetitorindexbyid",{"_index":1218,"title":{},"body":{"injectables/OddsService.html":{}}}],["findcompetitorindexbyid(competitors",{"_index":1236,"title":{},"body":{"injectables/OddsService.html":{}}}],["first",{"_index":1335,"title":{},"body":{"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{}}}],["flag",{"_index":1625,"title":{},"body":{"interfaces/TvChannel.html":{},"index.html":{}}}],["flatter",{"_index":1247,"title":{},"body":{"injectables/OddsService.html":{}}}],["flex",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["fns",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["focus",{"_index":818,"title":{},"body":{"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{}}}],["font",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["footer",{"_index":622,"title":{},"body":{"components/FooterComponent.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["footer'},{'name",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["footer.component.scss",{"_index":623,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["footercomponent",{"_index":206,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["foreach((offer",{"_index":1285,"title":{},"body":{"injectables/OddsService.html":{}}}],["format",{"_index":1568,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["format.pipe",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["format.pipe.ts",{"_index":1026,"title":{},"body":{"pipes/NumberFormatPipe.html":{},"coverage.html":{}}}],["format.pipe.ts:11",{"_index":1029,"title":{},"body":{"pipes/NumberFormatPipe.html":{}}}],["forwarded",{"_index":965,"title":{},"body":{"injectables/LoggerService.html":{}}}],["found",{"_index":433,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"components/WebcamComponent.html":{}}}],["fourth",{"_index":1338,"title":{},"body":{"interfaces/Quadrangle2d.html":{}}}],["frame",{"_index":1766,"title":{},"body":{"components/WebcamComponent.html":{}}}],["from(this.applicationconfigservice.accesstokenprovider()).pipe",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["fromloglevel",{"_index":458,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["fromloglevel(loglevel",{"_index":1974,"title":{},"body":{"miscellaneous/functions.html":{}}}],["function",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/NotificationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":1973,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1751,"title":{},"body":{"components/WebcamComponent.html":{},"index.html":{}}}],["g",{"_index":2003,"title":{},"body":{"index.html":{}}}],["ga",{"_index":690,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ga('send",{"_index":707,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["game",{"_index":1123,"title":{},"body":{"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"interfaces/Player.html":{},"interfaces/SportsBook.html":{}}}],["gamelineoddsbysporteventid",{"_index":1219,"title":{},"body":{"injectables/OddsService.html":{}}}],["gamelineoddsbysporteventid(sporteventid",{"_index":1241,"title":{},"body":{"injectables/OddsService.html":{}}}],["generate",{"_index":2005,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1980,"title":{},"body":{"index.html":{}}}],["get(settings.$z",{"_index":1865,"title":{},"body":{"components/WebcamComponent.html":{}}}],["getaccesstoken",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["getaccesstokenprovider",{"_index":454,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["getapiurl",{"_index":383,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["getautosnapdelay",{"_index":384,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["getautosnapdelay(initial",{"_index":409,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["getbaseurl",{"_index":1262,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["getcurrenttimestamp",{"_index":1686,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["getlanguage",{"_index":385,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["getloglevel",{"_index":386,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["getsnapdimension",{"_index":387,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["getstate",{"_index":312,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{},"components/SnapComponent.html":{}}}],["getting",{"_index":1977,"title":{"index.html":{}},"body":{}}],["gettranslation",{"_index":598,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["gettranslation(lang",{"_index":610,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["gettvsearchresult",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["getviewfinder",{"_index":1742,"title":{},"body":{"components/WebcamComponent.html":{}}}],["given",{"_index":402,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"classes/FileTranslateLoader.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"interfaces/OddsOfferOutcome.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"interfaces/SportsBook.html":{}}}],["globally",{"_index":657,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["googleanalytics",{"_index":656,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["googleanalyticsservice",{"_index":66,"title":{"injectables/GoogleAnalyticsService.html":{}},"body":{"components/AppComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"coverage.html":{}}}],["googletagmanager",{"_index":660,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["grabbed",{"_index":1623,"title":{},"body":{"interfaces/TvChannel.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["grabs",{"_index":1626,"title":{},"body":{"interfaces/TvChannel.html":{}}}],["graph",{"_index":2028,"title":{},"body":{"index.html":{}}}],["grow",{"_index":624,"title":{},"body":{"components/FooterComponent.html":{}}}],["gtag",{"_index":689,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gtag('event",{"_index":715,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["gubergren",{"_index":807,"title":{},"body":{"components/HelpComponent.html":{}}}],["handleerror",{"_index":1345,"title":{},"body":{"components/SnapComponent.html":{}}}],["handleerror(error",{"_index":1358,"title":{},"body":{"components/SnapComponent.html":{}}}],["handleiniterror",{"_index":1743,"title":{},"body":{"components/WebcamComponent.html":{}}}],["handleiniterror(error",{"_index":1769,"title":{},"body":{"components/WebcamComponent.html":{}}}],["handlesuccess",{"_index":1346,"title":{},"body":{"components/SnapComponent.html":{}}}],["handlesuccess(sporteventsresponse",{"_index":1366,"title":{},"body":{"components/SnapComponent.html":{}}}],["hascompetitor",{"_index":1296,"title":{},"body":{"injectables/OddsService.html":{}}}],["hasmultiplewebcams",{"_index":1732,"title":{},"body":{"components/WebcamComponent.html":{}}}],["hasvalidaccesstoken",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["hasvibrationapi",{"_index":1008,"title":{},"body":{"injectables/NotificationService.html":{}}}],["header",{"_index":727,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"injectables/TvSearchService.html":{}}}],["header'},{'name",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["header.component.html",{"_index":729,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":728,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["headercomponent",{"_index":208,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headers",{"_index":1271,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["headers.set('x",{"_index":1708,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["height",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"injectables/ImageManipulationService.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{}}}],["help",{"_index":763,"title":{},"body":{"components/HelpComponent.html":{},"components/SnapComponent.html":{},"index.html":{}}}],["help'},{'name",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["help.component.html",{"_index":765,"title":{},"body":{"components/HelpComponent.html":{}}}],["help.component.scss",{"_index":764,"title":{},"body":{"components/HelpComponent.html":{}}}],["help/help.component",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["helpcomponent",{"_index":210,"title":{"components/HelpComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["helppage",{"_index":327,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["hh:mm",{"_index":1103,"title":{},"body":{"components/OddsComponent.html":{}}}],["hidden",{"_index":1133,"title":{},"body":{"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/WebcamComponent.html":{}}}],["higher",{"_index":958,"title":{},"body":{"injectables/LoggerService.html":{}}}],["hittype",{"_index":708,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["holds",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["homepage",{"_index":1624,"title":{},"body":{"interfaces/TvChannel.html":{}}}],["host",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["href",{"_index":940,"title":{},"body":{"interfaces/Link.html":{}}}],["html",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["htmlcanvaselement",{"_index":832,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["htmlelement",{"_index":850,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["htmlvideoelement",{"_index":848,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["http",{"_index":1229,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["http://localhost:3333",{"_index":2001,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":1998,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":1227,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["httpclientmodule",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":1264,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["httpresponse",{"_index":1679,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["https://api.us.snapscreen.com",{"_index":461,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["i)}deg",{"_index":1550,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["i18n",{"_index":365,"title":{},"body":{"interfaces/ApplicationConfig.html":{}}}],["id",{"_index":584,"title":{},"body":{"interfaces/Competitor.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/Player.html":{},"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{},"components/WebcamComponent.html":{}}}],["ideal",{"_index":1794,"title":{},"body":{"components/WebcamComponent.html":{}}}],["identifier",{"_index":1072,"title":{},"body":{"components/OddsComponent.html":{},"injectables/OddsService.html":{},"coverage.html":{}}}],["image",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationConfigService.html":{},"injectables/ImageManipulationService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["image.ts",{"_index":2046,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["image/jpeg",{"_index":841,"title":{},"body":{"injectables/ImageManipulationService.html":{},"injectables/TvSearchService.html":{}}}],["imageasdataurl",{"_index":1733,"title":{},"body":{"components/WebcamComponent.html":{}}}],["imagedata",{"_index":1498,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["imagemanipulationservice",{"_index":819,"title":{"injectables/ImageManipulationService.html":{}},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["images",{"_index":1643,"title":{},"body":{"interfaces/TvSearchResult.html":{}}}],["implementation",{"_index":2057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"pipes/BestOfferLinePipe.html":{},"classes/FileTranslateLoader.html":{},"pipes/NumberFormatPipe.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["import",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"pipes/BestOfferLinePipe.html":{},"interfaces/BestOfferLineViewModel.html":{},"interfaces/BestOfferViewModel.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"pipes/NumberFormatPipe.html":{},"interfaces/OddsBestOffer.html":{},"interfaces/OddsBestOfferOutcome.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookViewModel.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["important",{"_index":1862,"title":{},"body":{"components/WebcamComponent.html":{}}}],["imports",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["improve",{"_index":1035,"title":{},"body":{"pipes/NumberFormatPipe.html":{}}}],["include",{"_index":630,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/BestOfferLineViewModel.html":{},"interfaces/BestOfferViewModel.html":{},"interfaces/Competitor.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"interfaces/OddsBestOffer.html":{},"interfaces/OddsBestOfferOutcome.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":1632,"title":{},"body":{"classes/TvSearchNoResultError.html":{}}}],["indicates",{"_index":1361,"title":{},"body":{"components/SnapComponent.html":{},"interfaces/TvChannel.html":{}}}],["infinite",{"_index":1538,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"pipes/BestOfferLinePipe.html":{},"interfaces/BestOfferLineViewModel.html":{},"interfaces/BestOfferViewModel.html":{},"interfaces/Competitor.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"pipes/NumberFormatPipe.html":{},"interfaces/OddsBestOffer.html":{},"interfaces/OddsBestOfferOutcome.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{},"components/SwitchSvgComponent.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{}}}],["info(...data",{"_index":952,"title":{},"body":{"injectables/LoggerService.html":{}}}],["initial",{"_index":414,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["initialization",{"_index":1989,"title":{},"body":{"index.html":{}}}],["initialize",{"_index":1839,"title":{},"body":{"components/WebcamComponent.html":{}}}],["initialized",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/WebcamComponent.html":{}}}],["initializes",{"_index":1382,"title":{},"body":{"components/SnapComponent.html":{}}}],["inject",{"_index":885,"title":{},"body":{"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/NotificationService.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{}}}],["inject(console",{"_index":970,"title":{},"body":{"injectables/LoggerService.html":{}}}],["inject(document",{"_index":889,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["inject(location",{"_index":1434,"title":{},"body":{"components/SnapComponent.html":{}}}],["inject(navigator",{"_index":1020,"title":{},"body":{"injectables/NotificationService.html":{}}}],["injectable",{"_index":304,"title":{"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"injectables/OddsService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}},"body":{"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"injectables/OddsService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"coverage.html":{}}}],["injectables",{"_index":305,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"injectables/OddsService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":2059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('browser",{"_index":2056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injector",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["inline",{"_index":1120,"title":{},"body":{"components/OddsComponent.html":{},"components/SpinnerComponent.html":{}}}],["inlined",{"_index":603,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["input",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["inputs",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["inside",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"components/WebcamComponent.html":{}}}],["instanceof",{"_index":1466,"title":{},"body":{"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{}}}],["instead",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["interaction",{"_index":1002,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["interactive",{"_index":2035,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AccessToken.html":{},"interfaces/ApplicationConfig.html":{},"interfaces/BestOfferLineViewModel.html":{},"interfaces/BestOfferViewModel.html":{},"interfaces/Competitor.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"interfaces/OddsBestOffer.html":{},"interfaces/OddsBestOfferOutcome.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{},"interfaces/TranslationEntries.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{}},"body":{"interfaces/AccessToken.html":{},"interfaces/ApplicationConfig.html":{},"interfaces/BestOfferLineViewModel.html":{},"interfaces/BestOfferViewModel.html":{},"interfaces/Competitor.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"interfaces/OddsBestOffer.html":{},"interfaces/OddsBestOfferOutcome.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{},"interfaces/TranslationEntries.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AccessToken.html":{},"interfaces/ApplicationConfig.html":{},"pipes/BestOfferLinePipe.html":{},"interfaces/BestOfferLineViewModel.html":{},"interfaces/BestOfferViewModel.html":{},"interfaces/Competitor.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"interfaces/OddsBestOffer.html":{},"interfaces/OddsBestOfferOutcome.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{},"interfaces/TranslationEntries.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"overview.html":{}}}],["interrupt",{"_index":1819,"title":{},"body":{"components/WebcamComponent.html":{}}}],["interval",{"_index":1715,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["invidunt",{"_index":787,"title":{},"body":{"components/HelpComponent.html":{}}}],["invoked",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["ipsum",{"_index":775,"title":{},"body":{"components/HelpComponent.html":{}}}],["isaboveloglevel",{"_index":944,"title":{},"body":{"injectables/LoggerService.html":{}}}],["isaboveloglevel(loglevel",{"_index":954,"title":{},"body":{"injectables/LoggerService.html":{}}}],["isautosnapenabled",{"_index":388,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["isgoogleanalytics",{"_index":639,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["isgoogletagmanager",{"_index":640,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["iso",{"_index":1566,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["istokenexpired",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["isvibrateenabled",{"_index":389,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["items",{"_index":737,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["jest",{"_index":2022,"title":{},"body":{"index.html":{}}}],["jpeg",{"_index":845,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["js/1.0.0",{"_index":686,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["justify",{"_index":591,"title":{},"body":{"components/ContentComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{}}}],["justo",{"_index":799,"title":{},"body":{"components/HelpComponent.html":{}}}],["kasd",{"_index":806,"title":{},"body":{"components/HelpComponent.html":{}}}],["key",{"_index":469,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["keyframes",{"_index":1551,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["keys",{"_index":1597,"title":{},"body":{"interfaces/TranslationEntries.html":{}}}],["l",{"_index":1479,"title":{},"body":{"components/SnapComponent.html":{}}}],["label",{"_index":638,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"interfaces/OddsOffer.html":{}}}],["labore",{"_index":789,"title":{},"body":{"components/HelpComponent.html":{}}}],["lag",{"_index":1714,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["landscape",{"_index":1480,"title":{},"body":{"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["lang",{"_index":613,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["language",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"classes/FileTranslateLoader.html":{},"miscellaneous/variables.html":{}}}],["larger",{"_index":883,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["left",{"_index":752,"title":{},"body":{"components/HeaderComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["legend",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["lets",{"_index":1018,"title":{},"body":{"injectables/NotificationService.html":{}}}],["letter",{"_index":615,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["level",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/LoggerService.html":{}}}],["level.ts",{"_index":1915,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["levels",{"_index":961,"title":{},"body":{"injectables/LoggerService.html":{}}}],["lg",{"_index":629,"title":{},"body":{"components/FooterComponent.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["libraries",{"_index":1990,"title":{},"body":{"index.html":{}}}],["library",{"_index":1774,"title":{},"body":{"components/WebcamComponent.html":{}}}],["libs/response/src/lib/typings/auth/access",{"_index":6,"title":{},"body":{"interfaces/AccessToken.html":{},"coverage.html":{}}}],["libs/response/src/lib/typings/link.ts",{"_index":939,"title":{},"body":{"interfaces/Link.html":{},"coverage.html":{}}}],["libs/response/src/lib/typings/odds/competitor.ts",{"_index":580,"title":{},"body":{"interfaces/Competitor.html":{},"coverage.html":{}}}],["libs/response/src/lib/typings/odds/odds",{"_index":1038,"title":{},"body":{"interfaces/OddsBestOffer.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"coverage.html":{}}}],["libs/response/src/lib/typings/odds/outcome.ts",{"_index":1046,"title":{},"body":{"interfaces/OddsBestOfferOutcome.html":{},"coverage.html":{}}}],["libs/response/src/lib/typings/odds/player.ts",{"_index":1320,"title":{},"body":{"interfaces/Player.html":{},"coverage.html":{}}}],["libs/response/src/lib/typings/odds/sports",{"_index":1581,"title":{},"body":{"interfaces/SportsBook.html":{},"coverage.html":{}}}],["libs/response/src/lib/typings/tv",{"_index":1322,"title":{},"body":{"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"coverage.html":{}}}],["lifetime",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["line",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"pipes/BestOfferLinePipe.html":{},"interfaces/BestOfferLineViewModel.html":{},"interfaces/BestOfferViewModel.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["line'},{'name",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["line.component",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["line.component.html",{"_index":1143,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["line.component.scss",{"_index":1142,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["line.component.ts",{"_index":1141,"title":{},"body":{"components/OddsLineComponent.html":{},"coverage.html":{}}}],["line.component.ts:12",{"_index":1150,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["line.component.ts:13",{"_index":1151,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["line.component.ts:14",{"_index":1149,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["line.component.ts:24",{"_index":1155,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["line.moneyline",{"_index":1168,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["line.overunder",{"_index":1171,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["line.overunderodds",{"_index":1172,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["line.spread",{"_index":1166,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["line.spreadodds",{"_index":1167,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["line/odds",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"components/OddsLineComponent.html":{},"coverage.html":{}}}],["linear",{"_index":1537,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lineindex",{"_index":1146,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["lineodds",{"_index":125,"title":{"interfaces/LineOdds.html":{}},"body":{"components/AppComponent.html":{},"injectables/ApplicationConfigService.html":{},"interfaces/LineOdds.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"interfaces/SportsBookViewModel.html":{},"coverage.html":{}}}],["lineodds.sportsbooks",{"_index":1094,"title":{},"body":{"components/OddsComponent.html":{}}}],["lineodds.sportsbooks.length",{"_index":1095,"title":{},"body":{"components/OddsComponent.html":{}}}],["lines",{"_index":574,"title":{},"body":{"interfaces/BestOfferViewModel.html":{},"injectables/OddsService.html":{},"interfaces/SportsBookViewModel.html":{}}}],["link",{"_index":938,"title":{"interfaces/Link.html":{}},"body":{"interfaces/Link.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookViewModel.html":{},"interfaces/TvChannel.html":{},"coverage.html":{}}}],["list",{"_index":934,"title":{},"body":{"interfaces/LineOdds.html":{},"interfaces/TvSearchResult.html":{}}}],["listen",{"_index":317,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["literal",{"_index":863,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/TvChannel.html":{},"miscellaneous/typealiases.html":{}}}],["live",{"_index":933,"title":{},"body":{"interfaces/LineOdds.html":{}}}],["load",{"_index":1390,"title":{},"body":{"components/SnapComponent.html":{}}}],["loaded",{"_index":609,"title":{},"body":{"classes/FileTranslateLoader.html":{},"components/SnapComponent.html":{}}}],["loader",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["loader.ts",{"_index":597,"title":{},"body":{"classes/FileTranslateLoader.html":{},"coverage.html":{}}}],["loader.ts:12",{"_index":602,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["loader.ts:21",{"_index":611,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["loading",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationConfigService.html":{},"components/OddsComponent.html":{}}}],["loadlineodds",{"_index":1053,"title":{},"body":{"components/OddsComponent.html":{}}}],["loadlineodds(sporteventid",{"_index":1063,"title":{},"body":{"components/OddsComponent.html":{}}}],["loads",{"_index":1065,"title":{},"body":{"components/OddsComponent.html":{}}}],["loadsportevents",{"_index":1347,"title":{},"body":{"components/SnapComponent.html":{}}}],["loadsportevents(autosnap",{"_index":1372,"title":{},"body":{"components/SnapComponent.html":{}}}],["local",{"_index":2060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstorage",{"_index":2061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["location",{"_index":1356,"title":{},"body":{"components/SnapComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["log",{"_index":362,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"injectables/LoggerService.html":{}}}],["log(loglevel",{"_index":959,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logcallback",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["logged",{"_index":963,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logger",{"_index":397,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["logger/log",{"_index":459,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["logger/logger.service",{"_index":687,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["loggereventcallback",{"_index":966,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loggerservice",{"_index":652,"title":{"injectables/LoggerService.html":{}},"body":{"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["loglevel",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["loglevel's",{"_index":956,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loglevel.debug",{"_index":977,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loglevel.error",{"_index":984,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loglevel.info",{"_index":980,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loglevel.silent",{"_index":462,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["loglevel.warn",{"_index":982,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loglevels",{"_index":1970,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logo",{"_index":1628,"title":{},"body":{"interfaces/TvChannel.html":{}}}],["logs",{"_index":964,"title":{},"body":{"injectables/LoggerService.html":{}}}],["longer",{"_index":417,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{}}}],["lookup",{"_index":1375,"title":{},"body":{"components/SnapComponent.html":{}}}],["lorem",{"_index":774,"title":{},"body":{"components/HelpComponent.html":{}}}],["made",{"_index":1645,"title":{},"body":{"interfaces/TvSearchResultEntry.html":{}}}],["magna",{"_index":792,"title":{},"body":{"components/HelpComponent.html":{}}}],["main",{"_index":1983,"title":{},"body":{"index.html":{}}}],["manage",{"_index":1397,"title":{},"body":{"components/SnapComponent.html":{}}}],["manipulated",{"_index":888,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["manipulatedimage",{"_index":887,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/typealiases.html":{}}}],["manipulation",{"_index":920,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["manipulation.service",{"_index":1810,"title":{},"body":{"components/WebcamComponent.html":{}}}],["manipulation.service.ts",{"_index":822,"title":{},"body":{"injectables/ImageManipulationService.html":{},"coverage.html":{}}}],["manipulation.service.ts:105",{"_index":835,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["manipulation.service.ts:144",{"_index":881,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["manipulation.service.ts:155",{"_index":871,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["manipulation.service.ts:19",{"_index":866,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["manipulation.service.ts:59",{"_index":878,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["manipulation.service.ts:70",{"_index":852,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["manipulation.service.ts:9",{"_index":830,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["manipulation/image",{"_index":821,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["manipulation/manipulated",{"_index":1426,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/typealiases.html":{}}}],["manually",{"_index":1671,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["map",{"_index":331,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["map((accesstoken",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["map((response",{"_index":1274,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["map((sportsbook",{"_index":1278,"title":{},"body":{"injectables/OddsService.html":{}}}],["mapbestoffertoviewmodel",{"_index":1220,"title":{},"body":{"injectables/OddsService.html":{}}}],["mapbestoffertoviewmodel(offers",{"_index":1243,"title":{},"body":{"injectables/OddsService.html":{}}}],["maplineoddsresponse",{"_index":1221,"title":{},"body":{"injectables/OddsService.html":{}}}],["maplineoddsresponse(lineodds",{"_index":1249,"title":{},"body":{"injectables/OddsService.html":{}}}],["mapsportsbooksnames",{"_index":1222,"title":{},"body":{"injectables/OddsService.html":{}}}],["mapsportsbooksnames(outcome",{"_index":1252,"title":{},"body":{"injectables/OddsService.html":{}}}],["mapsportsbookstoviewmodel",{"_index":1223,"title":{},"body":{"injectables/OddsService.html":{}}}],["mapsportsbookstoviewmodel(sportsbooks",{"_index":1257,"title":{},"body":{"injectables/OddsService.html":{}}}],["mapto",{"_index":1003,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["mapto(true",{"_index":999,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["maptoofferlines",{"_index":1224,"title":{},"body":{"injectables/OddsService.html":{}}}],["maptoofferlines(outcome",{"_index":1260,"title":{},"body":{"injectables/OddsService.html":{}}}],["margin",{"_index":626,"title":{},"body":{"components/FooterComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["match",{"_index":432,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{},"interfaces/SportEvent.html":{}}}],["matching",{"_index":23,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"pipes/BestOfferLinePipe.html":{},"interfaces/BestOfferLineViewModel.html":{},"interfaces/BestOfferViewModel.html":{},"interfaces/Competitor.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"pipes/NumberFormatPipe.html":{},"interfaces/OddsBestOffer.html":{},"interfaces/OddsBestOfferOutcome.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{},"components/SwitchSvgComponent.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.abs((this.element.offsetheight",{"_index":1849,"title":{},"body":{"components/WebcamComponent.html":{}}}],["math.abs((this.element.offsetwidth",{"_index":1846,"title":{},"body":{"components/WebcamComponent.html":{}}}],["math.div($bar",{"_index":1543,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["math.div($spinner",{"_index":1528,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["math.div(9",{"_index":1870,"title":{},"body":{"components/WebcamComponent.html":{}}}],["math.floor((maxdimension",{"_index":924,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["math.floor((source.videoheight",{"_index":912,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["math.floor((source.videowidth",{"_index":911,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["math.floor((viewfinder.clientheight",{"_index":910,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["math.floor((viewfinder.clientwidth",{"_index":909,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["math.max(source.videowidth",{"_index":906,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["max",{"_index":868,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["maxdimension",{"_index":865,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["media",{"_index":744,"title":{},"body":{"components/HeaderComponent.html":{},"components/SnapComponent.html":{}}}],["mediadeviceinfo",{"_index":1812,"title":{},"body":{"components/WebcamComponent.html":{}}}],["mediadevices.length",{"_index":1814,"title":{},"body":{"components/WebcamComponent.html":{}}}],["mediadevicestate",{"_index":991,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{}}}],["mediadevicestate.device_camera_ready",{"_index":998,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["mediadevicestatestore",{"_index":988,"title":{"injectables/MediaDeviceStateStore.html":{}},"body":{"injectables/MediaDeviceStateStore.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["mediatrackconstraints",{"_index":1792,"title":{},"body":{"components/WebcamComponent.html":{}}}],["mergemap",{"_index":1418,"title":{},"body":{"components/SnapComponent.html":{}}}],["merges",{"_index":443,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["message",{"_index":1070,"title":{},"body":{"components/OddsComponent.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["message'},{'name",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["message.component",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["message.component.html",{"_index":1719,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{}}}],["message.component.scss",{"_index":1718,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{}}}],["message.component.ts",{"_index":1717,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{},"coverage.html":{}}}],["message.component.ts:10",{"_index":1720,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{}}}],["message/user",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"components/UserFeedbackMessageComponent.html":{},"coverage.html":{}}}],["metadata",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"pipes/BestOfferLinePipe.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"pipes/NumberFormatPipe.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["method",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/SnapComponent.html":{}}}],["methods",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"pipes/BestOfferLinePipe.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"pipes/NumberFormatPipe.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["mime",{"_index":842,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["mimetype",{"_index":833,"title":{},"body":{"injectables/ImageManipulationService.html":{},"injectables/TvSearchService.html":{}}}],["min",{"_index":1189,"title":{},"body":{"components/OddsLineComponent.html":{},"components/WebcamComponent.html":{}}}],["minute",{"_index":2032,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":1965,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mixin",{"_index":1855,"title":{},"body":{"components/WebcamComponent.html":{}}}],["mm",{"_index":1570,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["mode",{"_index":427,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{}}}],["model",{"_index":558,"title":{},"body":{"pipes/BestOfferLinePipe.html":{},"interfaces/BestOfferLineViewModel.html":{},"interfaces/BestOfferViewModel.html":{},"interfaces/LineOdds.html":{},"components/OddsLineComponent.html":{},"injectables/OddsService.html":{},"interfaces/SportsBookViewModel.html":{}}}],["model.ts",{"_index":562,"title":{},"body":{"interfaces/BestOfferLineViewModel.html":{},"interfaces/BestOfferViewModel.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{},"coverage.html":{}}}],["models/best",{"_index":556,"title":{},"body":{"pipes/BestOfferLinePipe.html":{},"components/OddsLineComponent.html":{},"injectables/OddsService.html":{}}}],["models/line",{"_index":1086,"title":{},"body":{"components/OddsComponent.html":{},"injectables/OddsService.html":{}}}],["models/sports",{"_index":559,"title":{},"body":{"pipes/BestOfferLinePipe.html":{},"components/OddsLineComponent.html":{},"injectables/OddsService.html":{}}}],["module",{"_index":235,"title":{"modules/AppModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":237,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["money",{"_index":569,"title":{},"body":{"interfaces/BestOfferLineViewModel.html":{},"components/OddsComponent.html":{},"interfaces/SportsBookLineViewModel.html":{}}}],["moneyline",{"_index":1198,"title":{},"body":{"interfaces/OddsOffer.html":{},"injectables/OddsService.html":{},"interfaces/SportsBookLineViewModel.html":{}}}],["moneylineurl",{"_index":1584,"title":{},"body":{"interfaces/SportsBookLineViewModel.html":{}}}],["moneysportsbookname",{"_index":564,"title":{},"body":{"interfaces/BestOfferLineViewModel.html":{}}}],["mouseevent",{"_index":1153,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["movex",{"_index":1845,"title":{},"body":{"components/WebcamComponent.html":{}}}],["movey",{"_index":1848,"title":{},"body":{"components/WebcamComponent.html":{}}}],["name",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"pipes/BestOfferLinePipe.html":{},"interfaces/BestOfferLineViewModel.html":{},"interfaces/BestOfferViewModel.html":{},"interfaces/Competitor.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"pipes/NumberFormatPipe.html":{},"interfaces/OddsBestOfferOutcome.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookViewModel.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/functions.html":{}}}],["navigate",{"_index":770,"title":{},"body":{"components/HelpComponent.html":{},"components/SnapComponent.html":{},"index.html":{}}}],["navigator",{"_index":1011,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["neartimestamp",{"_index":1663,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["necessary",{"_index":1666,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["needs",{"_index":882,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["negative",{"_index":1502,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["nesting",{"_index":1876,"title":{},"body":{"components/WebcamComponent.html":{}}}],["never",{"_index":1281,"title":{},"body":{"injectables/OddsService.html":{}}}],["new",{"_index":320,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/ImageManipulationService.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":1093,"title":{},"body":{"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["nextwebcam",{"_index":1734,"title":{},"body":{"components/WebcamComponent.html":{}}}],["ng",{"_index":1723,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":1744,"title":{},"body":{"components/WebcamComponent.html":{}}}],["ngdobootstrap",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["ngonchanges",{"_index":1054,"title":{},"body":{"components/OddsComponent.html":{}}}],["ngonchanges(changes",{"_index":1073,"title":{},"body":{"components/OddsComponent.html":{}}}],["ngondestroy",{"_index":1348,"title":{},"body":{"components/SnapComponent.html":{}}}],["ngoninit",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["ngx",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/FileTranslateLoader.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["ngxwebcamcomponent",{"_index":1803,"title":{},"body":{"components/WebcamComponent.html":{}}}],["none",{"_index":1127,"title":{},"body":{"components/OddsComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["nonumy",{"_index":784,"title":{},"body":{"components/HelpComponent.html":{}}}],["noop",{"_index":456,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["noresults",{"_index":1052,"title":{},"body":{"components/OddsComponent.html":{}}}],["notificationservice",{"_index":1006,"title":{"injectables/NotificationService.html":{}},"body":{"injectables/NotificationService.html":{},"components/SnapComponent.html":{},"coverage.html":{}}}],["notifies",{"_index":1407,"title":{},"body":{"components/SnapComponent.html":{}}}],["notify",{"_index":1009,"title":{},"body":{"injectables/NotificationService.html":{},"components/SnapComponent.html":{}}}],["now",{"_index":1682,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["nowrap",{"_index":757,"title":{},"body":{"components/HeaderComponent.html":{}}}],["npm",{"_index":2012,"title":{},"body":{"index.html":{}}}],["nrwl/angular",{"_index":1949,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"pipes/NumberFormatPipe.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"interfaces/OddsOfferOutcome.html":{},"injectables/OddsService.html":{},"interfaces/SportsBookLineViewModel.html":{},"components/WebcamComponent.html":{}}}],["number",{"_index":20,"title":{},"body":{"interfaces/AccessToken.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/Competitor.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"pipes/NumberFormatPipe.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"interfaces/OddsOfferOutcome.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{}}}],["numberformat",{"_index":1027,"title":{},"body":{"pipes/NumberFormatPipe.html":{},"components/OddsLineComponent.html":{}}}],["numberformatpipe",{"_index":242,"title":{"pipes/NumberFormatPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/NumberFormatPipe.html":{},"coverage.html":{},"overview.html":{}}}],["numbers",{"_index":1034,"title":{},"body":{"pipes/NumberFormatPipe.html":{}}}],["nx",{"_index":1981,"title":{},"body":{"index.html":{}}}],["o",{"_index":1169,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["object.defineproperty(this.pinchzoomcomponent.pinchzoom",{"_index":1844,"title":{},"body":{"components/WebcamComponent.html":{}}}],["object.entries(config).reduce",{"_index":467,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["observable",{"_index":319,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["observe",{"_index":1697,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["odds",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"interfaces/LineOdds.html":{},"interfaces/OddsBestOffer.html":{},"interfaces/OddsBestOfferOutcome.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLineViewModel.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["odds'},{'name",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["odds.component.html",{"_index":1051,"title":{},"body":{"components/OddsComponent.html":{}}}],["odds.component.scss",{"_index":1050,"title":{},"body":{"components/OddsComponent.html":{}}}],["odds.ts",{"_index":926,"title":{},"body":{"interfaces/LineOdds.html":{},"coverage.html":{}}}],["odds/odds.component",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["odds/snap",{"_index":1430,"title":{},"body":{"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"coverage.html":{}}}],["oddsbestoffer",{"_index":1037,"title":{"interfaces/OddsBestOffer.html":{}},"body":{"interfaces/OddsBestOffer.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"coverage.html":{}}}],["oddsbestofferoutcome",{"_index":1042,"title":{"interfaces/OddsBestOfferOutcome.html":{}},"body":{"interfaces/OddsBestOffer.html":{},"interfaces/OddsBestOfferOutcome.html":{},"injectables/OddsService.html":{},"coverage.html":{}}}],["oddsbestoffers",{"_index":577,"title":{},"body":{"interfaces/BestOfferViewModel.html":{}}}],["oddscomponent",{"_index":212,"title":{"components/OddsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["oddslinecomponent",{"_index":214,"title":{"components/OddsLineComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["oddsoffer",{"_index":1040,"title":{"interfaces/OddsOffer.html":{}},"body":{"interfaces/OddsBestOffer.html":{},"interfaces/OddsOffer.html":{},"injectables/OddsService.html":{},"interfaces/SportsBook.html":{},"coverage.html":{}}}],["oddsofferoutcome",{"_index":1047,"title":{"interfaces/OddsOfferOutcome.html":{}},"body":{"interfaces/OddsBestOfferOutcome.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"injectables/OddsService.html":{},"coverage.html":{}}}],["oddsoffers",{"_index":1590,"title":{},"body":{"interfaces/SportsBookViewModel.html":{}}}],["oddsresponse",{"_index":1210,"title":{"interfaces/OddsResponse.html":{}},"body":{"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"coverage.html":{}}}],["oddsservice",{"_index":1059,"title":{"injectables/OddsService.html":{}},"body":{"components/OddsComponent.html":{},"injectables/OddsService.html":{},"coverage.html":{}}}],["of(this.accesstoken",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["of(this.translations.get(lang",{"_index":620,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["offer",{"_index":557,"title":{},"body":{"pipes/BestOfferLinePipe.html":{},"interfaces/BestOfferLineViewModel.html":{},"interfaces/BestOfferViewModel.html":{},"interfaces/LineOdds.html":{},"interfaces/OddsBestOffer.html":{},"interfaces/OddsBestOfferOutcome.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/SportsBook.html":{},"coverage.html":{}}}],["offer.outcomes",{"_index":1284,"title":{},"body":{"injectables/OddsService.html":{}}}],["offer.outcomes.foreach((outcome",{"_index":1286,"title":{},"body":{"injectables/OddsService.html":{}}}],["offer.pipe",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["offer.pipe.ts",{"_index":543,"title":{},"body":{"pipes/BestOfferLinePipe.html":{},"coverage.html":{}}}],["offer.pipe.ts:13",{"_index":549,"title":{},"body":{"pipes/BestOfferLinePipe.html":{}}}],["offer.ts",{"_index":1039,"title":{},"body":{"interfaces/OddsBestOffer.html":{},"interfaces/OddsOffer.html":{},"coverage.html":{}}}],["offer.type",{"_index":1298,"title":{},"body":{"injectables/OddsService.html":{}}}],["offers",{"_index":1214,"title":{},"body":{"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLineViewModel.html":{}}}],["offers.foreach((offer",{"_index":1291,"title":{},"body":{"injectables/OddsService.html":{}}}],["offset",{"_index":1757,"title":{},"body":{"components/WebcamComponent.html":{}}}],["omitundefinedproperties",{"_index":390,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["omitundefinedproperties(config",{"_index":434,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["onchanges",{"_index":1049,"title":{},"body":{"components/OddsComponent.html":{}}}],["ondestroy",{"_index":1340,"title":{},"body":{"components/SnapComponent.html":{}}}],["one",{"_index":575,"title":{},"body":{"interfaces/BestOfferViewModel.html":{},"injectables/LoggerService.html":{},"interfaces/SportsBookViewModel.html":{}}}],["oninit",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["onlineoddsloaded",{"_index":1055,"title":{},"body":{"components/OddsComponent.html":{}}}],["onlineoddsloaded(lineodds",{"_index":1077,"title":{},"body":{"components/OddsComponent.html":{}}}],["onlineoddsloadfailed",{"_index":1056,"title":{},"body":{"components/OddsComponent.html":{}}}],["opacity",{"_index":1552,"title":{},"body":{"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{}}}],["opened",{"_index":1159,"title":{},"body":{"components/OddsLineComponent.html":{},"components/SnapComponent.html":{}}}],["openoutcomeredirecturl",{"_index":1144,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["openoutcomeredirecturl($event",{"_index":1152,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["opens",{"_index":1156,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["optimized",{"_index":1248,"title":{},"body":{"injectables/OddsService.html":{}}}],["optional",{"_index":11,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"pipes/BestOfferLinePipe.html":{},"interfaces/BestOfferLineViewModel.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"pipes/NumberFormatPipe.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{},"interfaces/TvChannel.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":418,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{}}}],["ordered",{"_index":1971,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["orientation",{"_index":745,"title":{},"body":{"components/HeaderComponent.html":{},"components/SnapComponent.html":{}}}],["origin",{"_index":1539,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["otherwise",{"_index":1767,"title":{},"body":{"components/WebcamComponent.html":{}}}],["out",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationConfigService.html":{},"overview.html":{}}}],["outcome",{"_index":1045,"title":{},"body":{"interfaces/OddsBestOffer.html":{},"interfaces/OddsBestOfferOutcome.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"injectables/OddsService.html":{},"interfaces/SportsBookLineViewModel.html":{}}}],["outcome._links?.redirect?.href",{"_index":1297,"title":{},"body":{"injectables/OddsService.html":{}}}],["outcome.competitorid",{"_index":1295,"title":{},"body":{"injectables/OddsService.html":{}}}],["outcome.sportsbook",{"_index":1314,"title":{},"body":{"injectables/OddsService.html":{}}}],["outcome.target",{"_index":1304,"title":{},"body":{"injectables/OddsService.html":{}}}],["outcome.ts",{"_index":1201,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{},"coverage.html":{}}}],["outcome.type",{"_index":1299,"title":{},"body":{"injectables/OddsService.html":{}}}],["outcomes",{"_index":1041,"title":{},"body":{"interfaces/OddsBestOffer.html":{},"interfaces/OddsOffer.html":{},"injectables/OddsService.html":{}}}],["output",{"_index":1084,"title":{},"body":{"components/OddsComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["outputs",{"_index":1057,"title":{},"body":{"components/OddsComponent.html":{},"components/TriggerComponent.html":{}}}],["outside",{"_index":368,"title":{},"body":{"interfaces/ApplicationConfig.html":{}}}],["over",{"_index":1208,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{},"injectables/OddsService.html":{}}}],["over/under",{"_index":1205,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{},"interfaces/SportsBookLineViewModel.html":{}}}],["over_under",{"_index":1199,"title":{},"body":{"interfaces/OddsOffer.html":{},"injectables/OddsService.html":{}}}],["overflow",{"_index":594,"title":{},"body":{"components/ContentComponent.html":{},"components/OddsComponent.html":{},"components/WebcamComponent.html":{}}}],["overunder",{"_index":570,"title":{},"body":{"interfaces/BestOfferLineViewModel.html":{},"interfaces/SportsBookLineViewModel.html":{}}}],["overunderodds",{"_index":1585,"title":{},"body":{"interfaces/SportsBookLineViewModel.html":{}}}],["overundersportsbookname",{"_index":565,"title":{},"body":{"interfaces/BestOfferLineViewModel.html":{}}}],["overunderurl",{"_index":1586,"title":{},"body":{"interfaces/SportsBookLineViewModel.html":{}}}],["overview",{"_index":2039,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1940,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":743,"title":{},"body":{"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["page",{"_index":712,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["page_path",{"_index":717,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["page_title",{"_index":718,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["page_view",{"_index":716,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["pageview",{"_index":709,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["param",{"_index":350,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"pipes/BestOfferLinePipe.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"pipes/NumberFormatPipe.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["parameters",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"pipes/BestOfferLinePipe.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"pipes/NumberFormatPipe.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":854,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["partial",{"_index":435,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["participating",{"_index":1565,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["parts",{"_index":879,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["patched",{"_index":1775,"title":{},"body":{"components/WebcamComponent.html":{}}}],["patches",{"_index":1754,"title":{},"body":{"components/WebcamComponent.html":{}}}],["peer",{"_index":2014,"title":{},"body":{"index.html":{}}}],["perform",{"_index":405,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{},"injectables/TvSearchService.html":{}}}],["performed",{"_index":1408,"title":{},"body":{"components/SnapComponent.html":{}}}],["performs",{"_index":1501,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["periodically",{"_index":1386,"title":{},"body":{"components/SnapComponent.html":{}}}],["pinch",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["pinchzoomcomponent",{"_index":1735,"title":{},"body":{"components/WebcamComponent.html":{}}}],["pinchzoommodule",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe",{"_index":540,"title":{"pipes/BestOfferLinePipe.html":{},"pipes/NumberFormatPipe.html":{}},"body":{"pipes/BestOfferLinePipe.html":{},"pipes/NumberFormatPipe.html":{},"components/SnapComponent.html":{},"coverage.html":{}}}],["pipe(takeuntil(this.destroyed",{"_index":1440,"title":{},"body":{"components/SnapComponent.html":{}}}],["pipes",{"_index":541,"title":{},"body":{"pipes/BestOfferLinePipe.html":{},"pipes/NumberFormatPipe.html":{},"overview.html":{}}}],["pipes/best",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/number",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":555,"title":{},"body":{"pipes/BestOfferLinePipe.html":{},"pipes/NumberFormatPipe.html":{}}}],["plane",{"_index":1326,"title":{},"body":{"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{}}}],["player",{"_index":935,"title":{"interfaces/Player.html":{}},"body":{"interfaces/LineOdds.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/Player.html":{},"coverage.html":{}}}],["playerid",{"_index":1203,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{}}}],["players",{"_index":930,"title":{},"body":{"interfaces/LineOdds.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{}}}],["plus",{"_index":1031,"title":{},"body":{"pipes/NumberFormatPipe.html":{}}}],["point",{"_index":1324,"title":{},"body":{"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{}}}],["point2d",{"_index":1321,"title":{"interfaces/Point2d.html":{}},"body":{"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"coverage.html":{}}}],["pointer",{"_index":1185,"title":{},"body":{"components/OddsLineComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["pointing",{"_index":1589,"title":{},"body":{"interfaces/SportsBookLineViewModel.html":{}}}],["portrait",{"_index":633,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["position",{"_index":1239,"title":{},"body":{"injectables/OddsService.html":{},"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["positive",{"_index":1033,"title":{},"body":{"pipes/NumberFormatPipe.html":{},"injectables/SnapOddsFacade.html":{}}}],["possible",{"_index":1043,"title":{},"body":{"interfaces/OddsBestOffer.html":{},"interfaces/OddsOffer.html":{},"miscellaneous/enumerations.html":{}}}],["poster",{"_index":1629,"title":{},"body":{"interfaces/TvChannel.html":{}}}],["powered",{"_index":1850,"title":{},"body":{"components/WebcamComponent.html":{}}}],["preferredheight",{"_index":876,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["preferredwidth",{"_index":875,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["prepend",{"_index":1030,"title":{},"body":{"pipes/NumberFormatPipe.html":{}}}],["present",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["pressing",{"_index":1402,"title":{},"body":{"components/SnapComponent.html":{}}}],["primary",{"_index":817,"title":{},"body":{"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{}}}],["private",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["processed",{"_index":1362,"title":{},"body":{"components/SnapComponent.html":{},"injectables/TvSearchService.html":{}}}],["processing",{"_index":1610,"title":{},"body":{"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["prod",{"_index":2009,"title":{},"body":{"index.html":{}}}],["production",{"_index":2010,"title":{},"body":{"index.html":{}}}],["programmatically",{"_index":412,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["project",{"_index":1979,"title":{},"body":{"index.html":{}}}],["project=snapodds",{"_index":2004,"title":{},"body":{"index.html":{}}}],["projects",{"_index":1982,"title":{},"body":{"index.html":{}}}],["promise",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["promise((resolve",{"_index":913,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["promise.reject('no",{"_index":463,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":9,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/BestOfferLineViewModel.html":{},"interfaces/BestOfferViewModel.html":{},"interfaces/Competitor.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/MediaDeviceStateStore.html":{},"interfaces/OddsBestOffer.html":{},"interfaces/OddsBestOfferOutcome.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{},"interfaces/TranslationEntries.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["property",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["provide",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["providedin",{"_index":347,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"injectables/OddsService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":366,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"interfaces/SportEvent.html":{}}}],["pseudo",{"_index":1722,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["quadrangle",{"_index":1332,"title":{},"body":{"interfaces/Quadrangle2d.html":{}}}],["quadrangle2d",{"_index":1330,"title":{"interfaces/Quadrangle2d.html":{}},"body":{"interfaces/Quadrangle2d.html":{},"interfaces/TvSearchResult.html":{},"coverage.html":{}}}],["quadrangles",{"_index":1641,"title":{},"body":{"interfaces/TvSearchResult.html":{}}}],["quality",{"_index":834,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["race",{"_index":1419,"title":{},"body":{"components/SnapComponent.html":{}}}],["radius",{"_index":1541,"title":{},"body":{"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{}}}],["ratio",{"_index":1857,"title":{},"body":{"components/WebcamComponent.html":{}}}],["reached",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["read",{"_index":1806,"title":{},"body":{"components/WebcamComponent.html":{}}}],["readability",{"_index":1036,"title":{},"body":{"pipes/NumberFormatPipe.html":{}}}],["reader",{"_index":1831,"title":{},"body":{"components/WebcamComponent.html":{}}}],["reader.onloadend",{"_index":1833,"title":{},"body":{"components/WebcamComponent.html":{}}}],["reader.readasdataurl(blob",{"_index":1836,"title":{},"body":{"components/WebcamComponent.html":{}}}],["reader.result",{"_index":1835,"title":{},"body":{"components/WebcamComponent.html":{}}}],["readonly",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["ready",{"_index":1001,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["rebum",{"_index":803,"title":{},"body":{"components/HelpComponent.html":{}}}],["redirect",{"_index":1200,"title":{},"body":{"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookViewModel.html":{}}}],["redirecturl",{"_index":1154,"title":{},"body":{"components/OddsLineComponent.html":{},"injectables/OddsService.html":{},"interfaces/SportsBookViewModel.html":{}}}],["refresh_token",{"_index":14,"title":{},"body":{"interfaces/AccessToken.html":{}}}],["register",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{}}}],["registerautosnap",{"_index":1349,"title":{},"body":{"components/SnapComponent.html":{}}}],["registered",{"_index":1576,"title":{},"body":{"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{}}}],["reject",{"_index":914,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["reject(error",{"_index":923,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["reject(errormessage",{"_index":922,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["relative",{"_index":1533,"title":{},"body":{"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["release",{"_index":2011,"title":{},"body":{"index.html":{}}}],["reload",{"_index":1392,"title":{},"body":{"components/SnapComponent.html":{},"index.html":{}}}],["reloadpage",{"_index":1350,"title":{},"body":{"components/SnapComponent.html":{}}}],["render",{"_index":337,"title":{},"body":{"injectables/AppStateStore.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{}}}],["rendered",{"_index":840,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["rendering",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"interfaces/LineOdds.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/OddsService.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{}}}],["renderingcontext",{"_index":901,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["renderingcontext?.drawimage(source",{"_index":903,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["renders",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["replaysubject",{"_index":332,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["replaysubject(1",{"_index":321,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["reported",{"_index":372,"title":{},"body":{"interfaces/ApplicationConfig.html":{}}}],["representation",{"_index":1975,"title":{},"body":{"miscellaneous/functions.html":{}}}],["represents",{"_index":582,"title":{},"body":{"interfaces/Competitor.html":{},"interfaces/OddsBestOfferOutcome.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/Player.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/TvChannel.html":{}}}],["request",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{},"components/SnapComponent.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{}}}],["requestaccesstoken",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["requestuuid",{"_index":1638,"title":{},"body":{"interfaces/TvSearchResult.html":{}}}],["reset",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{},"overview.html":{}}}],["resized",{"_index":873,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["resizing",{"_index":426,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["resolve",{"_index":916,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["respective",{"_index":1374,"title":{},"body":{"components/SnapComponent.html":{}}}],["response",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/TvSearchService.html":{}}}],["response.body",{"_index":1701,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["response.body?.resultentries.length",{"_index":1700,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["response.headers.get('date",{"_index":1711,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["response.ts",{"_index":1211,"title":{},"body":{"interfaces/OddsResponse.html":{},"coverage.html":{}}}],["response/typings",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/LineOdds.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["responsedate",{"_index":1710,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["responses",{"_index":1991,"title":{},"body":{"index.html":{}}}],["rest",{"_index":1993,"title":{},"body":{"index.html":{}}}],["result",{"_index":1637,"title":{},"body":{"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"coverage.html":{}}}],["result.sportevent.starttime",{"_index":1102,"title":{},"body":{"components/OddsComponent.html":{}}}],["result.sportevent.tournament",{"_index":1100,"title":{},"body":{"components/OddsComponent.html":{}}}],["result.ts",{"_index":1636,"title":{},"body":{"interfaces/TvSearchResult.html":{},"coverage.html":{}}}],["result.tvchannel.name",{"_index":1101,"title":{},"body":{"components/OddsComponent.html":{}}}],["resultcallback",{"_index":401,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["resultentries",{"_index":1639,"title":{},"body":{"interfaces/TvSearchResult.html":{}}}],["resultentry",{"_index":403,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["resulting",{"_index":843,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["results",{"_index":22,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"pipes/BestOfferLinePipe.html":{},"interfaces/BestOfferLineViewModel.html":{},"interfaces/BestOfferViewModel.html":{},"interfaces/Competitor.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"pipes/NumberFormatPipe.html":{},"interfaces/OddsBestOffer.html":{},"interfaces/OddsBestOfferOutcome.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{},"components/SwitchSvgComponent.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resultscallback",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":367,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["retrieves",{"_index":612,"title":{},"body":{"classes/FileTranslateLoader.html":{},"components/SnapComponent.html":{}}}],["retrywhen",{"_index":1420,"title":{},"body":{"components/SnapComponent.html":{}}}],["retrywhen((errors",{"_index":1460,"title":{},"body":{"components/SnapComponent.html":{}}}],["return",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"pipes/BestOfferLinePipe.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"pipes/NumberFormatPipe.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["returned",{"_index":371,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"injectables/AuthService.html":{},"injectables/ImageManipulationService.html":{},"classes/TvSearchNoResultError.html":{}}}],["returns",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"pipes/BestOfferLinePipe.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"pipes/NumberFormatPipe.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"miscellaneous/functions.html":{}}}],["rgb(0",{"_index":1869,"title":{},"body":{"components/WebcamComponent.html":{}}}],["rgba(255",{"_index":1117,"title":{},"body":{"components/OddsComponent.html":{}}}],["right",{"_index":758,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["root",{"_index":348,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"injectables/OddsService.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"miscellaneous/variables.html":{}}}],["rotate(#{(math.div(360",{"_index":1549,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["row",{"_index":1483,"title":{},"body":{"components/SnapComponent.html":{}}}],["run",{"_index":1995,"title":{},"body":{"index.html":{}}}],["running",{"_index":2016,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":333,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["sadipscing",{"_index":780,"title":{},"body":{"components/HelpComponent.html":{}}}],["same",{"_index":962,"title":{},"body":{"injectables/LoggerService.html":{}}}],["sanctus",{"_index":810,"title":{},"body":{"components/HelpComponent.html":{}}}],["sass:math",{"_index":1478,"title":{},"body":{"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{}}}],["scaffolding",{"_index":2002,"title":{},"body":{"index.html":{}}}],["scalefactor",{"_index":851,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["scope",{"_index":15,"title":{},"body":{"interfaces/AccessToken.html":{}}}],["score",{"_index":1647,"title":{},"body":{"interfaces/TvSearchResultEntry.html":{}}}],["screen",{"_index":1642,"title":{},"body":{"interfaces/TvSearchResult.html":{}}}],["screenquadrangles",{"_index":1640,"title":{},"body":{"interfaces/TvSearchResult.html":{}}}],["sdk",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationConfig.html":{}}}],["sdk'},{'name",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["sdkinitialized",{"_index":641,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["sea",{"_index":808,"title":{},"body":{"components/HelpComponent.html":{}}}],["search",{"_index":406,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/OddsService.html":{},"injectables/SnapOddsFacade.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"coverage.html":{}}}],["search.service",{"_index":1508,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["search.service.ts",{"_index":1652,"title":{},"body":{"injectables/TvSearchService.html":{},"coverage.html":{}}}],["search.service.ts:104",{"_index":1680,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search.service.ts:14",{"_index":1657,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search.service.ts:26",{"_index":1685,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search.service.ts:33",{"_index":1687,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search.service.ts:41",{"_index":1670,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search.service.ts:50",{"_index":1658,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search.service.ts:61",{"_index":1674,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search.service.ts:86",{"_index":1664,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search/point2d.ts",{"_index":1323,"title":{},"body":{"interfaces/Point2d.html":{},"coverage.html":{}}}],["search/quadrangle2d.ts",{"_index":1331,"title":{},"body":{"interfaces/Quadrangle2d.html":{},"coverage.html":{}}}],["search/sport",{"_index":1554,"title":{},"body":{"interfaces/SportEvent.html":{},"coverage.html":{}}}],["search/sport/by",{"_index":1692,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search/sport/near",{"_index":1693,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["search/tv",{"_index":1621,"title":{},"body":{"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"coverage.html":{}}}],["searchsport",{"_index":1491,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["searchsport(imagedata",{"_index":1499,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["second",{"_index":1336,"title":{},"body":{"interfaces/Quadrangle2d.html":{}}}],["sed",{"_index":782,"title":{},"body":{"components/HelpComponent.html":{}}}],["see",{"_index":2029,"title":{},"body":{"index.html":{}}}],["selector",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["self",{"_index":1215,"title":{},"body":{"interfaces/OddsResponse.html":{},"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{}}}],["sent",{"_index":1683,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["separator",{"_index":1177,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["serve",{"_index":1996,"title":{},"body":{"index.html":{}}}],["server",{"_index":1986,"title":{},"body":{"index.html":{}}}],["service",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleAnalyticsService.html":{}}}],["services",{"_index":1370,"title":{},"body":{"components/SnapComponent.html":{}}}],["services/api/api",{"_index":1424,"title":{},"body":{"components/SnapComponent.html":{}}}],["services/api/odds.service",{"_index":1087,"title":{},"body":{"components/OddsComponent.html":{}}}],["services/config/application",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["services/i18n/file",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["services/image",{"_index":1425,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["services/logger/log",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{}}}],["services/logger/logger.service",{"_index":1427,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["services/notification/notification.service",{"_index":1428,"title":{},"body":{"components/SnapComponent.html":{}}}],["services/snap",{"_index":1429,"title":{},"body":{"components/SnapComponent.html":{}}}],["services/tokens/location",{"_index":1432,"title":{},"body":{"components/SnapComponent.html":{}}}],["services/tokens/window",{"_index":1160,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["services/tracking/google",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/SnapComponent.html":{}}}],["set",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/WebcamComponent.html":{}}}],["set('authorization",{"_index":1703,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["set('content",{"_index":1704,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["set('x",{"_index":1706,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["setconfig",{"_index":391,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["setconfig(applicationconfig",{"_index":441,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["sets",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/SnapComponent.html":{}}}],["setting",{"_index":771,"title":{},"body":{"components/HelpComponent.html":{},"components/SnapComponent.html":{}}}],["settings",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["settings.$color",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["settings.$font",{"_index":753,"title":{},"body":{"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["settings.$spacing",{"_index":628,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["settvsearchresult(tvsearchresultentry",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["setupanalytics",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["setupapplicationconfig",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["setuptranslations",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["severity",{"_index":957,"title":{},"body":{"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["shadow",{"_index":1867,"title":{},"body":{"components/WebcamComponent.html":{}}}],["shouldcrop",{"_index":827,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["shouldcrop(scalefactor",{"_index":877,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["shoulddownscale",{"_index":828,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["shoulddownscale(sourcewidth",{"_index":880,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["show_help",{"_index":339,"title":{},"body":{"injectables/AppStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["show_odds",{"_index":340,"title":{},"body":{"injectables/AppStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["showhelp",{"_index":309,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["showhelppage",{"_index":1351,"title":{},"body":{"components/SnapComponent.html":{}}}],["showing",{"_index":2033,"title":{},"body":{"index.html":{}}}],["shown",{"_index":328,"title":{},"body":{"injectables/AppStateStore.html":{},"components/OddsComponent.html":{},"interfaces/TvSearchResultEntry.html":{},"components/WebcamComponent.html":{}}}],["showsnappage",{"_index":766,"title":{},"body":{"components/HelpComponent.html":{}}}],["side",{"_index":932,"title":{},"body":{"interfaces/LineOdds.html":{}}}],["sign",{"_index":1032,"title":{},"body":{"pipes/NumberFormatPipe.html":{}}}],["signalize",{"_index":733,"title":{},"body":{"components/HeaderComponent.html":{}}}],["silent",{"_index":1972,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["simplechange",{"_index":1085,"title":{},"body":{"components/OddsComponent.html":{}}}],["simplechanges",{"_index":1076,"title":{},"body":{"components/OddsComponent.html":{}}}],["single",{"_index":1196,"title":{},"body":{"interfaces/OddsOffer.html":{}}}],["sit",{"_index":777,"title":{},"body":{"components/HelpComponent.html":{}}}],["size",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["sizing",{"_index":1115,"title":{},"body":{"components/OddsComponent.html":{},"components/OddsLineComponent.html":{}}}],["sm",{"_index":750,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["small",{"_index":748,"title":{},"body":{"components/HeaderComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["snap",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{},"injectables/TvSearchService.html":{}}}],["snap'},{'name",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["snap(url",{"_index":1673,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["snap.component.html",{"_index":1342,"title":{},"body":{"components/SnapComponent.html":{}}}],["snap.component.scss",{"_index":1341,"title":{},"body":{"components/SnapComponent.html":{}}}],["snap/snap.component",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["snap_failed",{"_index":343,"title":{},"body":{"injectables/AppStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["snap_in_progress",{"_index":342,"title":{},"body":{"injectables/AppStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["snap_max_dimension",{"_index":379,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["snap_no_results",{"_index":344,"title":{},"body":{"injectables/AppStateStore.html":{},"miscellaneous/enumerations.html":{}}}],["snap_ready",{"_index":341,"title":{},"body":{"injectables/AppStateStore.html":{},"components/SnapComponent.html":{},"miscellaneous/enumerations.html":{}}}],["snapcomponent",{"_index":217,"title":{"components/SnapComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["snapodds",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"index.html":{}}}],["snapodds__font",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["snapodds_action_cancel",{"_index":736,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_action_close_help",{"_index":812,"title":{},"body":{"components/HelpComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_action_help",{"_index":1476,"title":{},"body":{"components/SnapComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_action_reload",{"_index":1477,"title":{},"body":{"components/SnapComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_device_no_permission",{"_index":1599,"title":{},"body":{"interfaces/TranslationEntries.html":{}}}],["snapodds_device_no_permission_headline",{"_index":1600,"title":{},"body":{"interfaces/TranslationEntries.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["snapodds_lines_loading",{"_index":1105,"title":{},"body":{"components/OddsComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_lines_no_results",{"_index":1106,"title":{},"body":{"components/OddsComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_snapping_failed",{"_index":1601,"title":{},"body":{"interfaces/TranslationEntries.html":{}}}],["snapodds_snapping_failed_headline",{"_index":1602,"title":{},"body":{"interfaces/TranslationEntries.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["snapodds_snapping_no_results",{"_index":1603,"title":{},"body":{"interfaces/TranslationEntries.html":{}}}],["snapodds_snapping_no_results_headline",{"_index":1604,"title":{},"body":{"interfaces/TranslationEntries.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["snapodds_title_help",{"_index":772,"title":{},"body":{"components/HelpComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_title_odds",{"_index":1099,"title":{},"body":{"components/OddsComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_title_snap_tv",{"_index":773,"title":{},"body":{"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"interfaces/TranslationEntries.html":{}}}],["snapodds_viewfinder_hint",{"_index":1605,"title":{},"body":{"interfaces/TranslationEntries.html":{}}}],["snapoddsfacade",{"_index":1355,"title":{"injectables/SnapOddsFacade.html":{}},"body":{"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"coverage.html":{}}}],["snapping",{"_index":357,"title":{},"body":{"interfaces/ApplicationConfig.html":{}}}],["snapscreen",{"_index":1707,"title":{},"body":{"injectables/TvSearchService.html":{},"index.html":{}}}],["snapscreensdk",{"_index":684,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapshot",{"_index":1344,"title":{},"body":{"components/SnapComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["snapshots",{"_index":1388,"title":{},"body":{"components/SnapComponent.html":{}}}],["snapstarttime",{"_index":1511,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["snapviewclosed",{"_index":642,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapviewopened",{"_index":643,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapviewsnap",{"_index":644,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapviewsnapfailed",{"_index":645,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapviewsnapfailed(duration",{"_index":665,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapviewsnapnegative",{"_index":646,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapviewsnapnegative(duration",{"_index":668,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapviewsnapresult",{"_index":647,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["snapviewsnapresult(duration",{"_index":670,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["solid",{"_index":741,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/WebcamComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"pipes/BestOfferLinePipe.html":{},"interfaces/BestOfferLineViewModel.html":{},"interfaces/BestOfferViewModel.html":{},"interfaces/Competitor.html":{},"components/ContentComponent.html":{},"classes/FileTranslateLoader.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"pipes/NumberFormatPipe.html":{},"interfaces/OddsBestOffer.html":{},"interfaces/OddsBestOfferOutcome.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{},"components/SwitchSvgComponent.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvChannel.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"index.html":{}}}],["source.clientheight",{"_index":908,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["source.clientwidth",{"_index":907,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["source.videoheight",{"_index":893,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["source.videowidth",{"_index":892,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["sourceheight",{"_index":870,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["sourcewidth",{"_index":874,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["space",{"_index":592,"title":{},"body":{"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{}}}],["specific",{"_index":1572,"title":{},"body":{"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{}}}],["specified",{"_index":464,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"miscellaneous/variables.html":{}}}],["spinner",{"_index":1521,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner'},{'name",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["spinner.component.html",{"_index":1523,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner.component.scss",{"_index":1522,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.component",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["spinnercomponent",{"_index":219,"title":{"components/SpinnerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sport",{"_index":583,"title":{},"body":{"interfaces/Competitor.html":{},"components/OddsComponent.html":{},"interfaces/OddsResponse.html":{},"interfaces/SportEvent.html":{},"classes/TvSearchNoResultError.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["sportbook.name",{"_index":1109,"title":{},"body":{"components/OddsComponent.html":{}}}],["sportbooks",{"_index":937,"title":{},"body":{"interfaces/LineOdds.html":{},"components/OddsComponent.html":{},"interfaces/SportsBookViewModel.html":{}}}],["sportdataprovidercode",{"_index":1561,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["sportdataprovidermatchid",{"_index":1562,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["sportevent",{"_index":1066,"title":{"interfaces/SportEvent.html":{}},"body":{"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"interfaces/SportEvent.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"coverage.html":{}}}],["sporteventid",{"_index":1071,"title":{},"body":{"components/OddsComponent.html":{},"injectables/OddsService.html":{}}}],["sportevents",{"_index":407,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{}}}],["sporteventsresponse",{"_index":1371,"title":{},"body":{"components/SnapComponent.html":{}}}],["sports",{"_index":572,"title":{},"body":{"interfaces/BestOfferLineViewModel.html":{},"interfaces/BestOfferViewModel.html":{},"interfaces/LineOdds.html":{},"interfaces/OddsBestOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookViewModel.html":{}}}],["sportsbook",{"_index":567,"title":{"interfaces/SportsBook.html":{}},"body":{"interfaces/BestOfferLineViewModel.html":{},"interfaces/OddsBestOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/SportsBook.html":{},"coverage.html":{}}}],["sportsbook._links?.redirect?.href",{"_index":1282,"title":{},"body":{"injectables/OddsService.html":{}}}],["sportsbook.name",{"_index":1279,"title":{},"body":{"injectables/OddsService.html":{}}}],["sportsbook.offers",{"_index":1277,"title":{},"body":{"injectables/OddsService.html":{}}}],["sportsbooklineviewmodel",{"_index":547,"title":{"interfaces/SportsBookLineViewModel.html":{}},"body":{"pipes/BestOfferLinePipe.html":{},"interfaces/BestOfferLineViewModel.html":{},"components/OddsLineComponent.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{},"coverage.html":{}}}],["sportsbookname",{"_index":1165,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["sportsbooks",{"_index":931,"title":{},"body":{"interfaces/LineOdds.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{}}}],["sportsbooksname",{"_index":1256,"title":{},"body":{"injectables/OddsService.html":{}}}],["sportsbooksresponse",{"_index":1259,"title":{},"body":{"injectables/OddsService.html":{}}}],["sportsbookviewmodel",{"_index":936,"title":{"interfaces/SportsBookViewModel.html":{}},"body":{"interfaces/LineOdds.html":{},"injectables/OddsService.html":{},"interfaces/SportsBookViewModel.html":{},"coverage.html":{}}}],["sportsbookviewmodels",{"_index":1290,"title":{},"body":{"injectables/OddsService.html":{}}}],["sportsbookviewmodels.push(target",{"_index":1289,"title":{},"body":{"injectables/OddsService.html":{}}}],["spread",{"_index":571,"title":{},"body":{"interfaces/BestOfferLineViewModel.html":{},"interfaces/LineOdds.html":{},"components/OddsComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"injectables/OddsService.html":{},"interfaces/SportsBookLineViewModel.html":{}}}],["spreadodds",{"_index":1587,"title":{},"body":{"interfaces/SportsBookLineViewModel.html":{}}}],["spreadsportsbookname",{"_index":566,"title":{},"body":{"interfaces/BestOfferLineViewModel.html":{}}}],["spreadurl",{"_index":1588,"title":{},"body":{"interfaces/SportsBookLineViewModel.html":{}}}],["stand",{"_index":1853,"title":{},"body":{"components/WebcamComponent.html":{}}}],["start",{"_index":1110,"title":{},"body":{"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"interfaces/OddsResponse.html":{},"interfaces/SportEvent.html":{}}}],["startautosnapwithdelay",{"_index":1352,"title":{},"body":{"components/SnapComponent.html":{}}}],["started",{"_index":1978,"title":{"index.html":{}},"body":{}}],["starts",{"_index":1385,"title":{},"body":{"components/SnapComponent.html":{}}}],["starttime",{"_index":1213,"title":{},"body":{"interfaces/OddsResponse.html":{},"interfaces/SportEvent.html":{}}}],["state",{"_index":310,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["state.store",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["state.store.ts",{"_index":307,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["state.store.ts:16",{"_index":994,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["state.store.ts:17",{"_index":995,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["state.store.ts:20",{"_index":322,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["state.store.ts:21",{"_index":330,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["state.store.ts:22",{"_index":1000,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["state.store.ts:26",{"_index":325,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["state.store.ts:30",{"_index":993,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["state.store.ts:31",{"_index":316,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["state.store.ts:38",{"_index":992,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["state.store.ts:39",{"_index":314,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["statements",{"_index":1880,"title":{},"body":{"coverage.html":{}}}],["states/app",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["states/media",{"_index":1433,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["stet",{"_index":804,"title":{},"body":{"components/HelpComponent.html":{}}}],["stops",{"_index":1401,"title":{},"body":{"components/SnapComponent.html":{}}}],["storage",{"_index":1924,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["stores",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["stream",{"_index":859,"title":{},"body":{"injectables/ImageManipulationService.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["stretch",{"_index":1181,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["string",{"_index":17,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"interfaces/BestOfferLineViewModel.html":{},"interfaces/BestOfferViewModel.html":{},"interfaces/Competitor.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"interfaces/Link.html":{},"pipes/NumberFormatPipe.html":{},"interfaces/OddsBestOfferOutcome.html":{},"components/OddsLineComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsResponse.html":{},"interfaces/Player.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{},"interfaces/TranslationEntries.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"miscellaneous/functions.html":{}}}],["stroke",{"_index":1851,"title":{},"body":{"components/WebcamComponent.html":{}}}],["structure",{"_index":927,"title":{},"body":{"interfaces/LineOdds.html":{},"injectables/OddsService.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{}}}],["style",{"_index":1235,"title":{},"body":{"injectables/OddsService.html":{}}}],["stylelint",{"_index":1721,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["styles",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["styleurls",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["subject",{"_index":1410,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["subscribe((appstate",{"_index":1441,"title":{},"body":{"components/SnapComponent.html":{}}}],["subscribe((mediadevicestate",{"_index":1444,"title":{},"body":{"components/SnapComponent.html":{}}}],["subscribe((response",{"_index":1457,"title":{},"body":{"components/SnapComponent.html":{}}}],["subscribes",{"_index":1404,"title":{},"body":{"components/SnapComponent.html":{}}}],["subscribetostatestores",{"_index":1353,"title":{},"body":{"components/SnapComponent.html":{}}}],["subscriptions",{"_index":1380,"title":{},"body":{"components/SnapComponent.html":{}}}],["successful",{"_index":370,"title":{},"body":{"interfaces/ApplicationConfig.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{}}}],["super('no",{"_index":1634,"title":{},"body":{"classes/TvSearchNoResultError.html":{}}}],["support",{"_index":2037,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":1015,"title":{},"body":{"injectables/NotificationService.html":{}}}],["svg",{"_index":1592,"title":{},"body":{"components/SwitchSvgComponent.html":{},"components/TriggerSvgComponent.html":{},"modules.html":{}}}],["svg'},{'name",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["svgs/switch.svg.component",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["svgs/trigger.svg.component",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["switch",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/LoggerService.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["switch.svg",{"_index":1594,"title":{},"body":{"components/SwitchSvgComponent.html":{}}}],["switch.svg.styles.scss",{"_index":1593,"title":{},"body":{"components/SwitchSvgComponent.html":{}}}],["switched",{"_index":1843,"title":{},"body":{"components/WebcamComponent.html":{}}}],["switchmap",{"_index":1265,"title":{},"body":{"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/TvSearchService.html":{}}}],["switchmap((accesstoken",{"_index":1269,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["switchmap((webcamimage",{"_index":1471,"title":{},"body":{"components/SnapComponent.html":{}}}],["switchsvgcomponent",{"_index":221,"title":{"components/SwitchSvgComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["switchtonextwebcam",{"_index":1745,"title":{},"body":{"components/WebcamComponent.html":{}}}],["sx",{"_index":890,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["sy",{"_index":891,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["system",{"_index":1577,"title":{},"body":{"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResultEntry.html":{}}}],["tab",{"_index":1158,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["table",{"_index":1939,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1938,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1387,"title":{},"body":{"components/SnapComponent.html":{}}}],["take(1",{"_index":1454,"title":{},"body":{"components/SnapComponent.html":{}}}],["taken",{"_index":1399,"title":{},"body":{"components/SnapComponent.html":{}}}],["takes",{"_index":416,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["takesnapshot",{"_index":1354,"title":{},"body":{"components/SnapComponent.html":{}}}],["takeuntil",{"_index":1421,"title":{},"body":{"components/SnapComponent.html":{}}}],["takeuntil(race(this.destroyed",{"_index":1462,"title":{},"body":{"components/SnapComponent.html":{}}}],["takeuntil(this.destroyed",{"_index":1455,"title":{},"body":{"components/SnapComponent.html":{}}}],["takimata",{"_index":809,"title":{},"body":{"components/HelpComponent.html":{}}}],["taking",{"_index":1755,"title":{},"body":{"components/WebcamComponent.html":{}}}],["tap",{"_index":1504,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["tap((response",{"_index":1698,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["target",{"_index":1204,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{},"injectables/OddsService.html":{},"interfaces/SportsBookLineViewModel.html":{}}}],["target.lines.length",{"_index":1288,"title":{},"body":{"injectables/OddsService.html":{}}}],["technical",{"_index":1364,"title":{},"body":{"components/SnapComponent.html":{}}}],["template",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["templated",{"_index":941,"title":{},"body":{"interfaces/Link.html":{}}}],["templates",{"_index":554,"title":{},"body":{"pipes/BestOfferLinePipe.html":{}}}],["templateurl",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["tempor",{"_index":786,"title":{},"body":{"components/HelpComponent.html":{}}}],["test",{"_index":2019,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2018,"title":{},"body":{"index.html":{}}}],["text",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SwitchSvgComponent.html":{},"interfaces/TranslationEntries.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["then((manipulatedimage",{"_index":1825,"title":{},"body":{"components/WebcamComponent.html":{}}}],["third",{"_index":1337,"title":{},"body":{"interfaces/Quadrangle2d.html":{}}}],["this.#tvsearchresult",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["this._state.asobservable",{"_index":329,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["this._state.next(state",{"_index":351,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["this.accesstoken",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.accesstokenprovider",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["this.analyticsservice.sdkinitialized",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["this.analyticsservice.snapviewclosed",{"_index":1446,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.analyticsservice.snapviewopened",{"_index":1438,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.analyticsservice.snapviewsnap",{"_index":1510,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["this.analyticsservice.snapviewsnapfailed(duration",{"_index":1516,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["this.analyticsservice.snapviewsnapnegative(duration",{"_index":1515,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["this.analyticsservice.snapviewsnapresult(date.now",{"_index":1518,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["this.apiurl",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["this.applicationconfigservice.emitcloseevent",{"_index":735,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.applicationconfigservice.emitloggerevent(loglevel",{"_index":986,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.applicationconfigservice.emitresultsevent(sporteventsresponse.resultentries[0",{"_index":1465,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.applicationconfigservice.getapiurl",{"_index":1267,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["this.applicationconfigservice.getloglevel",{"_index":987,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.applicationconfigservice.getsnapdimension",{"_index":1824,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.applicationconfigservice.isautosnapenabled",{"_index":1435,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["this.applicationconfigservice.isvibrateenabled",{"_index":1021,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.applicationconfigservice.setconfig",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["this.appstate",{"_index":1442,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.appstatestore",{"_index":1439,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.appstatestore.dispatch(appstate.device_no_camera",{"_index":1816,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.appstatestore.dispatch(appstate.device_no_permission",{"_index":1838,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.appstatestore.dispatch(appstate.show_help",{"_index":1474,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.appstatestore.dispatch(appstate.show_odds",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["this.appstatestore.dispatch(appstate.snap_failed",{"_index":1468,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.appstatestore.dispatch(appstate.snap_in_progress",{"_index":1469,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.appstatestore.dispatch(appstate.snap_no_results",{"_index":1467,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.appstatestore.dispatch(appstate.snap_ready",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/SnapComponent.html":{}}}],["this.authservice.requestaccesstoken().pipe",{"_index":1268,"title":{},"body":{"injectables/OddsService.html":{},"injectables/TvSearchService.html":{}}}],["this.autosnap",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["this.autosnap_delay",{"_index":476,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.autosnap_delay_initial",{"_index":475,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.autosnap_max_dimension",{"_index":473,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.category",{"_index":698,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.category}/${this.label}/${action",{"_index":713,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.centercontentonzoom",{"_index":1817,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.closecallback",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["this.config",{"_index":465,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.accesstokenprovider",{"_index":470,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.apiurl",{"_index":479,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.autosnap",{"_index":471,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.closecallback",{"_index":481,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.language",{"_index":477,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.logcallback(fromloglevel(loglevel",{"_index":480,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.loglevel",{"_index":478,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.resultscallback(resultentry",{"_index":482,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.config.vibrate",{"_index":483,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.console.debug(...data",{"_index":978,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.console.error(...data",{"_index":985,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.console.info(...data",{"_index":981,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.console.warn(...data",{"_index":983,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.converttoamericanodds(outcome.odds",{"_index":1301,"title":{},"body":{"injectables/OddsService.html":{}}}],["this.createimagefromcanvas(canvas",{"_index":904,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["this.createsnapscreenheaders(accesstoken",{"_index":1696,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["this.crop(source",{"_index":895,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["this.currenttimestamp",{"_index":1709,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["this.debugimagemanipulations",{"_index":1826,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.destroyed$.complete",{"_index":1448,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.destroyed$.next",{"_index":1447,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.document.createelement('canvas",{"_index":898,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["this.downscale(preferredwidth",{"_index":897,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["this.drawdebugimage(manipulatedimage.blob",{"_index":1827,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.findcompetitorindexbyid(competitors",{"_index":1294,"title":{},"body":{"injectables/OddsService.html":{}}}],["this.getstate().pipe",{"_index":996,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["this.getstate().pipe(map((state",{"_index":323,"title":{},"body":{"injectables/AppStateStore.html":{}}}],["this.getviewfinder",{"_index":1822,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.handleerror(error",{"_index":1452,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.handlesuccess(response",{"_index":1451,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.hasmultiplewebcams",{"_index":1813,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.hasvalidaccesstoken",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.hasvibrationapi",{"_index":1022,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.http.get(`${this.baseurl}/sport/events/${sporteventid}/odds/lines",{"_index":1270,"title":{},"body":{"injectables/OddsService.html":{}}}],["this.http.post(`${this.baseurl}${url",{"_index":1695,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["this.imageasdataurl",{"_index":1834,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.imagemanipulationservice",{"_index":1820,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.injector",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["this.isaboveloglevel(loglevel",{"_index":975,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.isautosnapenabled",{"_index":472,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.isgoogleanalytics",{"_index":692,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.isgoogletagmanager",{"_index":694,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.istokenexpired",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.label",{"_index":701,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.language",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["this.lineodds",{"_index":1098,"title":{},"body":{"components/OddsComponent.html":{}}}],["this.loading",{"_index":1090,"title":{},"body":{"components/OddsComponent.html":{}}}],["this.loadlineodds(changes.tvsearchresultentry.currentvalue.sportevent.id",{"_index":1089,"title":{},"body":{"components/OddsComponent.html":{}}}],["this.loadsportevents().subscribe",{"_index":1450,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.loadsportevents(true).pipe",{"_index":1459,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.location.reload",{"_index":1475,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.log(loglevel.debug",{"_index":971,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.log(loglevel.error",{"_index":972,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.log(loglevel.info",{"_index":974,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.log(loglevel.warn",{"_index":973,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.logcallback",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["this.logger.debug(`update",{"_index":1713,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["this.logger.error('failed",{"_index":705,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"components/WebcamComponent.html":{}}}],["this.logger.error('image",{"_index":919,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["this.logger.info('camera",{"_index":1842,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.logger.info('received",{"_index":1828,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.logger.info('tracked",{"_index":696,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.maplineoddsresponse(response",{"_index":1275,"title":{},"body":{"injectables/OddsService.html":{}}}],["this.mapsportsbooksnames(outcome",{"_index":1292,"title":{},"body":{"injectables/OddsService.html":{}}}],["this.maptoofferlines(outcome",{"_index":1287,"title":{},"body":{"injectables/OddsService.html":{}}}],["this.mediadevicestate",{"_index":1445,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.mediadevicestatestore",{"_index":1443,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.mediadevicestatestore.dispatch(mediadevicestate.device_camera_ready",{"_index":1841,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.mediadevicestatestore.dispatch(mediadevicestate.device_no_camera",{"_index":1815,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.mediadevicestatestore.dispatch(mediadevicestate.device_no_permission",{"_index":1837,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.mediadevicestatestore.webcamisready",{"_index":1453,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.name",{"_index":1635,"title":{},"body":{"classes/TvSearchNoResultError.html":{}}}],["this.navigator.vibrate(200",{"_index":1023,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.navigator?.vibrate",{"_index":1024,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.nextwebcam.asobservable",{"_index":1789,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.nextwebcam.next(true",{"_index":1840,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.noresults",{"_index":1091,"title":{},"body":{"components/OddsComponent.html":{}}}],["this.notificationservice.notify",{"_index":1464,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.oddsservice.gamelineoddsbysporteventid(sporteventid).subscribe",{"_index":1092,"title":{},"body":{"components/OddsComponent.html":{}}}],["this.omitundefinedproperties(applicationconfig",{"_index":466,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.onlineoddsloaded(lineodds",{"_index":1097,"title":{},"body":{"components/OddsComponent.html":{}}}],["this.onlineoddsloadfailed",{"_index":1096,"title":{},"body":{"components/OddsComponent.html":{}}}],["this.pinchzoomcomponent.scale",{"_index":1823,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.registerautosnap",{"_index":1436,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.resultscallback",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["this.scale",{"_index":1847,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.setupanalytics",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["this.setupapplicationconfig",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["this.setuptranslations",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["this.shouldcrop(scalefactor",{"_index":894,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["this.shoulddownscale(preferredwidth",{"_index":896,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["this.snap('/tv",{"_index":1691,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["this.snap_max_dimension",{"_index":474,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["this.snapoddsfacade.autosearchsport(webcamimage.blob",{"_index":1472,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.snapoddsfacade.searchsport(webcamimage.blob",{"_index":1473,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.snapshot",{"_index":1463,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.snapshot$.next",{"_index":1449,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.startautosnapwithdelay",{"_index":1456,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.state",{"_index":349,"title":{},"body":{"injectables/AppStateStore.html":{},"injectables/MediaDeviceStateStore.html":{}}}],["this.subscribetostatestores",{"_index":1437,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.timelag",{"_index":1690,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["this.tokenexpirationdate",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.trackevent('snapsdkinit",{"_index":719,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.trackevent('snapviewclose",{"_index":725,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.trackevent('snapviewopen",{"_index":720,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.trackevent('snapviewsnap",{"_index":721,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.trackevent('snapviewsnapfail",{"_index":723,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.trackevent('snapviewsnapnegative",{"_index":724,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.trackevent('snapviewsnapresult",{"_index":722,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.trackgoogleanalyticsevent(action",{"_index":693,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.trackgoogletagmanagerevent(action",{"_index":695,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["this.translateservice.use(this.applicationconfigservice.getlanguage",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["this.tvsearchresult",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["this.tvsearchservice.autosearchsport(imagedata",{"_index":1519,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["this.tvsearchservice.searchsport(imagedata).pipe",{"_index":1513,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["this.updatetimelag(response",{"_index":1699,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["this.updatetoken(accesstoken",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.vibrate",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["this.viewfinder.nativeelement",{"_index":1829,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.webcamcomponent.nativevideoelement",{"_index":1821,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.webcamcomponent.triggersnapshot()).pipe",{"_index":1470,"title":{},"body":{"components/SnapComponent.html":{}}}],["this.webcamcomponentelement.nativeelement",{"_index":1830,"title":{},"body":{"components/WebcamComponent.html":{}}}],["this.window.open(redirecturl",{"_index":1163,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["through",{"_index":1546,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["throw",{"_index":1702,"title":{},"body":{"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["throwerror",{"_index":1505,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["throwerror(error",{"_index":1517,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["throws",{"_index":1818,"title":{},"body":{"components/WebcamComponent.html":{}}}],["time",{"_index":606,"title":{},"body":{"classes/FileTranslateLoader.html":{},"interfaces/OddsResponse.html":{},"interfaces/SportEvent.html":{},"injectables/TvSearchService.html":{}}}],["timelag",{"_index":1653,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["timer",{"_index":1422,"title":{},"body":{"components/SnapComponent.html":{}}}],["timer(this.applicationconfigservice.getautosnapdelay(true)).pipe",{"_index":1458,"title":{},"body":{"components/SnapComponent.html":{}}}],["timestamp",{"_index":1649,"title":{},"body":{"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{}}}],["timestamp/by",{"_index":1694,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["timestampref",{"_index":1648,"title":{},"body":{"interfaces/TvSearchResultEntry.html":{}}}],["tiny",{"_index":632,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["title",{"_index":714,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{}}}],["toggles",{"_index":1779,"title":{},"body":{"components/WebcamComponent.html":{}}}],["token",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ImageManipulationService.html":{},"injectables/LoggerService.html":{},"injectables/NotificationService.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{}}}],["token's",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["token.ts",{"_index":7,"title":{},"body":{"interfaces/AccessToken.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token_type",{"_index":16,"title":{},"body":{"interfaces/AccessToken.html":{}}}],["tokenexpirationdate",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokenrefreshoffset",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokens/console",{"_index":969,"title":{},"body":{"injectables/LoggerService.html":{}}}],["tokens/document",{"_index":886,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["tokens/navigator",{"_index":1019,"title":{},"body":{"injectables/NotificationService.html":{}}}],["tologlevel",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tologlevel(loglevel",{"_index":1976,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tologlevel(this.loglevel",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["took",{"_index":1689,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["tools",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["tools.button",{"_index":761,"title":{},"body":{"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{}}}],["tools.flat",{"_index":1725,"title":{},"body":{"components/UserFeedbackMessageComponent.html":{}}}],["tools.media",{"_index":631,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["top",{"_index":746,"title":{},"body":{"components/HeaderComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["total",{"_index":1108,"title":{},"body":{"components/OddsComponent.html":{}}}],["tournament",{"_index":1563,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["track",{"_index":677,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["trackevent",{"_index":648,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["trackevent(action",{"_index":672,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["trackgoogleanalyticsevent",{"_index":649,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["trackgoogleanalyticsevent(action",{"_index":679,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["trackgoogletagmanagerevent",{"_index":650,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["trackgoogletagmanagerevent(action",{"_index":682,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["tracking/google",{"_index":1509,"title":{},"body":{"injectables/SnapOddsFacade.html":{}}}],["tracks",{"_index":674,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["transform",{"_index":545,"title":{},"body":{"pipes/BestOfferLinePipe.html":{},"pipes/NumberFormatPipe.html":{},"components/SpinnerComponent.html":{},"components/TriggerComponent.html":{},"components/WebcamComponent.html":{}}}],["transform(line",{"_index":546,"title":{},"body":{"pipes/BestOfferLinePipe.html":{}}}],["transform(value",{"_index":1028,"title":{},"body":{"pipes/NumberFormatPipe.html":{}}}],["translate",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"classes/FileTranslateLoader.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/SnapComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["translate/core",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/FileTranslateLoader.html":{},"dependencies.html":{}}}],["translateloader",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"classes/FileTranslateLoader.html":{}}}],["translatemodule",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule.forroot",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["translating",{"_index":1598,"title":{},"body":{"interfaces/TranslationEntries.html":{}}}],["translation",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"classes/FileTranslateLoader.html":{}}}],["translation_entries_de",{"_index":601,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["translation_entries_en",{"_index":599,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["translationentries",{"_index":617,"title":{"interfaces/TranslationEntries.html":{}},"body":{"classes/FileTranslateLoader.html":{},"interfaces/TranslationEntries.html":{},"coverage.html":{}}}],["translations",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"classes/FileTranslateLoader.html":{}}}],["transparent",{"_index":1187,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["transport",{"_index":710,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{}}}],["tree",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["tried",{"_index":1400,"title":{},"body":{"components/SnapComponent.html":{}}}],["tries",{"_index":1389,"title":{},"body":{"components/SnapComponent.html":{}}}],["trigger",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["trigger'},{'name",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["trigger.component.html",{"_index":1608,"title":{},"body":{"components/TriggerComponent.html":{}}}],["trigger.component.scss",{"_index":1607,"title":{},"body":{"components/TriggerComponent.html":{}}}],["trigger.svg",{"_index":1620,"title":{},"body":{"components/TriggerSvgComponent.html":{}}}],["trigger/trigger.component",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["triggercomponent",{"_index":224,"title":{"components/TriggerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["triggered",{"_index":1497,"title":{},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{}}}],["triggers",{"_index":393,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"components/SnapComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["triggersnapshot",{"_index":1746,"title":{},"body":{"components/WebcamComponent.html":{}}}],["triggersvgcomponent",{"_index":226,"title":{"components/TriggerSvgComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["true",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{},"components/OddsComponent.html":{},"injectables/TvSearchService.html":{}}}],["try",{"_index":691,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{}}}],["ts",{"_index":1650,"title":{},"body":{"interfaces/TvSearchResultEntry.html":{}}}],["tslib",{"_index":1961,"title":{},"body":{"dependencies.html":{}}}],["turned",{"_index":1783,"title":{},"body":{"components/WebcamComponent.html":{}}}],["tutorial",{"_index":2036,"title":{},"body":{"index.html":{}}}],["tv",{"_index":1557,"title":{},"body":{"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["tvchannel",{"_index":1579,"title":{"interfaces/TvChannel.html":{}},"body":{"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResultEntry.html":{},"coverage.html":{}}}],["tvchannelid",{"_index":1564,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["tvchannellogo",{"_index":1580,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["tvsearchnoresulterror",{"_index":1423,"title":{"classes/TvSearchNoResultError.html":{}},"body":{"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"classes/TvSearchNoResultError.html":{},"injectables/TvSearchService.html":{},"coverage.html":{}}}],["tvsearchresult",{"_index":43,"title":{"interfaces/TvSearchResult.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"interfaces/TvSearchResult.html":{},"injectables/TvSearchService.html":{},"coverage.html":{}}}],["tvsearchresult(tvsearchresultentry",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["tvsearchresultentry",{"_index":117,"title":{"interfaces/TvSearchResultEntry.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"components/OddsComponent.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"coverage.html":{}}}],["tvsearchresults",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["tvsearchservice",{"_index":1493,"title":{"injectables/TvSearchService.html":{}},"body":{"injectables/SnapOddsFacade.html":{},"injectables/TvSearchService.html":{},"coverage.html":{}}}],["two",{"_index":614,"title":{},"body":{"classes/FileTranslateLoader.html":{}}}],["type",{"_index":18,"title":{},"body":{"interfaces/AccessToken.html":{},"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"pipes/BestOfferLinePipe.html":{},"interfaces/BestOfferLineViewModel.html":{},"interfaces/BestOfferViewModel.html":{},"interfaces/Competitor.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"interfaces/LineOdds.html":{},"interfaces/Link.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"pipes/NumberFormatPipe.html":{},"interfaces/OddsBestOffer.html":{},"interfaces/OddsBestOfferOutcome.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"interfaces/OddsOffer.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/OddsResponse.html":{},"injectables/OddsService.html":{},"interfaces/Player.html":{},"interfaces/Point2d.html":{},"interfaces/Quadrangle2d.html":{},"components/SnapComponent.html":{},"injectables/SnapOddsFacade.html":{},"components/SpinnerComponent.html":{},"interfaces/SportEvent.html":{},"interfaces/SportsBook.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{},"interfaces/TranslationEntries.html":{},"components/TriggerComponent.html":{},"interfaces/TvChannel.html":{},"interfaces/TvSearchResult.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2043,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typecasting",{"_index":551,"title":{},"body":{"pipes/BestOfferLinePipe.html":{}}}],["typeof",{"_index":706,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"injectables/NotificationService.html":{}}}],["typings",{"_index":1992,"title":{},"body":{"index.html":{}}}],["u",{"_index":1170,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["undefined",{"_index":440,"title":{},"body":{"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"components/OddsComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["under",{"_index":1209,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{},"injectables/OddsService.html":{}}}],["understand",{"_index":2025,"title":{},"body":{"index.html":{}}}],["unique",{"_index":1574,"title":{},"body":{"interfaces/SportEvent.html":{},"interfaces/TvChannel.html":{}}}],["unit",{"_index":2017,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/LoggerService.html":{},"components/SnapComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["unless",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["up",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/SnapComponent.html":{}}}],["updates",{"_index":1405,"title":{},"body":{"components/SnapComponent.html":{}}}],["updatetimelag",{"_index":1655,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["updatetimelag(response",{"_index":1678,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["updatetoken",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatetoken(authresponse",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["url",{"_index":1157,"title":{},"body":{"components/OddsLineComponent.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/TvChannel.html":{},"injectables/TvSearchService.html":{}}}],["use",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"index.html":{}}}],["useclass",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"pipes/BestOfferLinePipe.html":{},"interfaces/LineOdds.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{},"interfaces/TvSearchResult.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["user",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ApplicationConfigService.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/SportsBookViewModel.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"interfaces/TvSearchResultEntry.html":{},"injectables/TvSearchService.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{}}}],["userfeedbackmessagecomponent",{"_index":227,"title":{"components/UserFeedbackMessageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":681,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"index.html":{}}}],["ut",{"_index":788,"title":{},"body":{"components/HelpComponent.html":{}}}],["valid",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["validity",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"injectables/ApplicationConfigService.html":{},"injectables/AuthService.html":{},"classes/FileTranslateLoader.html":{},"injectables/GoogleAnalyticsService.html":{},"injectables/ImageManipulationService.html":{},"injectables/MediaDeviceStateStore.html":{},"pipes/NumberFormatPipe.html":{},"components/OddsComponent.html":{},"interfaces/OddsOfferOutcome.html":{},"interfaces/Point2d.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/SportsBookLineViewModel.html":{},"components/TriggerComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":439,"title":{},"body":{"injectables/ApplicationConfigService.html":{}}}],["var",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{}}}],["variable",{"_index":1909,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2047,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":334,"title":{},"body":{"injectables/AppStateStore.html":{},"interfaces/BestOfferViewModel.html":{},"injectables/MediaDeviceStateStore.html":{},"interfaces/SportsBookViewModel.html":{},"miscellaneous/enumerations.html":{}}}],["verification",{"_index":1784,"title":{},"body":{"components/WebcamComponent.html":{}}}],["verifies",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{},"components/WebcamComponent.html":{}}}],["vero",{"_index":796,"title":{},"body":{"components/HelpComponent.html":{}}}],["via",{"_index":2021,"title":{},"body":{"index.html":{}}}],["vibrate",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/NotificationService.html":{},"miscellaneous/variables.html":{}}}],["vibration",{"_index":1016,"title":{},"body":{"injectables/NotificationService.html":{}}}],["video",{"_index":858,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{},"index.html":{}}}],["videooptions",{"_index":1736,"title":{},"body":{"components/WebcamComponent.html":{}}}],["videoscale",{"_index":905,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["view",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"pipes/BestOfferLinePipe.html":{},"interfaces/BestOfferLineViewModel.html":{},"interfaces/BestOfferViewModel.html":{},"interfaces/LineOdds.html":{},"components/OddsLineComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"interfaces/SportsBookLineViewModel.html":{},"interfaces/SportsBookViewModel.html":{},"interfaces/TranslationEntries.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["viewchild",{"_index":1416,"title":{},"body":{"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["viewchild('viewfinder",{"_index":1801,"title":{},"body":{"components/WebcamComponent.html":{}}}],["viewchild(ngxwebcamcomponent",{"_index":1804,"title":{},"body":{"components/WebcamComponent.html":{}}}],["viewchild(pinchzoomcomponent",{"_index":1790,"title":{},"body":{"components/WebcamComponent.html":{}}}],["viewchild(webcamcomponent",{"_index":1414,"title":{},"body":{"components/SnapComponent.html":{}}}],["viewfinder",{"_index":849,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["viewfinders",{"_index":1660,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["viewmodel",{"_index":1253,"title":{},"body":{"injectables/OddsService.html":{}}}],["viewmodel.lines[0].overunder",{"_index":1303,"title":{},"body":{"injectables/OddsService.html":{}}}],["viewmodel.lines[0].overunderodds",{"_index":1305,"title":{},"body":{"injectables/OddsService.html":{}}}],["viewmodel.lines[0].overundersportsbookname",{"_index":1315,"title":{},"body":{"injectables/OddsService.html":{}}}],["viewmodel.lines[0].overunderurl",{"_index":1306,"title":{},"body":{"injectables/OddsService.html":{}}}],["viewmodel.lines[1].overunder",{"_index":1307,"title":{},"body":{"injectables/OddsService.html":{}}}],["viewmodel.lines[1].overunderodds",{"_index":1308,"title":{},"body":{"injectables/OddsService.html":{}}}],["viewmodel.lines[1].overundersportsbookname",{"_index":1316,"title":{},"body":{"injectables/OddsService.html":{}}}],["viewmodel.lines[1].overunderurl",{"_index":1309,"title":{},"body":{"injectables/OddsService.html":{}}}],["viewmodel.lines[competitorindex].moneyline",{"_index":1300,"title":{},"body":{"injectables/OddsService.html":{}}}],["viewmodel.lines[competitorindex].moneylineurl",{"_index":1302,"title":{},"body":{"injectables/OddsService.html":{}}}],["viewmodel.lines[competitorindex].moneysportsbookname",{"_index":1313,"title":{},"body":{"injectables/OddsService.html":{}}}],["viewmodel.lines[competitorindex].spread",{"_index":1310,"title":{},"body":{"injectables/OddsService.html":{}}}],["viewmodel.lines[competitorindex].spreadodds",{"_index":1311,"title":{},"body":{"injectables/OddsService.html":{}}}],["viewmodel.lines[competitorindex].spreadsportsbookname",{"_index":1317,"title":{},"body":{"injectables/OddsService.html":{}}}],["viewmodel.lines[competitorindex].spreadurl",{"_index":1312,"title":{},"body":{"injectables/OddsService.html":{}}}],["viewport",{"_index":1661,"title":{},"body":{"injectables/TvSearchService.html":{}}}],["visibility",{"_index":1186,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["visible",{"_index":855,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["void",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppStateStore.html":{},"interfaces/ApplicationConfig.html":{},"injectables/ApplicationConfigService.html":{},"injectables/GoogleAnalyticsService.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/LoggerService.html":{},"injectables/MediaDeviceStateStore.html":{},"injectables/NotificationService.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"injectables/OddsService.html":{},"components/SnapComponent.html":{},"injectables/TvSearchService.html":{},"components/WebcamComponent.html":{}}}],["voluptua",{"_index":795,"title":{},"body":{"components/HelpComponent.html":{}}}],["warn",{"_index":945,"title":{},"body":{"injectables/LoggerService.html":{},"components/UserFeedbackMessageComponent.html":{},"miscellaneous/enumerations.html":{}}}],["warn(...data",{"_index":967,"title":{},"body":{"injectables/LoggerService.html":{}}}],["web",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["webbrowser",{"_index":1393,"title":{},"body":{"components/SnapComponent.html":{}}}],["webcam",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"injectables/MediaDeviceStateStore.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["webcam.component.html",{"_index":1731,"title":{},"body":{"components/WebcamComponent.html":{}}}],["webcam.component.scss",{"_index":1730,"title":{},"body":{"components/WebcamComponent.html":{}}}],["webcam/webcam.component",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"components/SnapComponent.html":{}}}],["webcamcomponent",{"_index":231,"title":{"components/WebcamComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/SpinnerComponent.html":{},"components/SwitchSvgComponent.html":{},"components/TriggerComponent.html":{},"components/TriggerSvgComponent.html":{},"components/UserFeedbackMessageComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["webcamcomponentelement",{"_index":1737,"title":{},"body":{"components/WebcamComponent.html":{}}}],["webcaminiterror",{"_index":1770,"title":{},"body":{"components/WebcamComponent.html":{}}}],["webcamisready",{"_index":990,"title":{},"body":{"injectables/MediaDeviceStateStore.html":{}}}],["webcammodule",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["webcams",{"_index":857,"title":{},"body":{"injectables/ImageManipulationService.html":{},"components/WebcamComponent.html":{}}}],["webcamutil",{"_index":1808,"title":{},"body":{"components/WebcamComponent.html":{}}}],["webcamutil.getavailablevideoinputs().then((mediadevices",{"_index":1811,"title":{},"body":{"components/WebcamComponent.html":{}}}],["weight",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SnapComponent.html":{},"components/WebcamComponent.html":{}}}],["whenever",{"_index":361,"title":{},"body":{"interfaces/ApplicationConfig.html":{}}}],["white",{"_index":756,"title":{},"body":{"components/HeaderComponent.html":{}}}],["whole",{"_index":1768,"title":{},"body":{"components/WebcamComponent.html":{}}}],["width",{"_index":814,"title":{},"body":{"components/HelpComponent.html":{},"injectables/ImageManipulationService.html":{},"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/SpinnerComponent.html":{},"components/WebcamComponent.html":{}}}],["win",{"_index":1207,"title":{},"body":{"interfaces/OddsOfferOutcome.html":{},"injectables/OddsService.html":{}}}],["window",{"_index":1148,"title":{},"body":{"components/OddsLineComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["workspace",{"_index":2026,"title":{},"body":{"index.html":{}}}],["wrapper",{"_index":1861,"title":{},"body":{"components/WebcamComponent.html":{},"index.html":{}}}],["written",{"_index":364,"title":{},"body":{"interfaces/ApplicationConfig.html":{}}}],["x",{"_index":1327,"title":{},"body":{"interfaces/Point2d.html":{}}}],["xl",{"_index":754,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserFeedbackMessageComponent.html":{}}}],["xs",{"_index":1138,"title":{},"body":{"components/OddsComponent.html":{},"components/OddsLineComponent.html":{},"components/WebcamComponent.html":{}}}],["xxs",{"_index":1195,"title":{},"body":{"components/OddsLineComponent.html":{}}}],["y",{"_index":1328,"title":{},"body":{"interfaces/Point2d.html":{}}}],["yes",{"_index":678,"title":{},"body":{"injectables/GoogleAnalyticsService.html":{},"components/OddsLineComponent.html":{}}}],["yyyy",{"_index":1569,"title":{},"body":{"interfaces/SportEvent.html":{}}}],["z",{"_index":1864,"title":{},"body":{"components/WebcamComponent.html":{}}}],["zone.js",{"_index":1963,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"components/WebcamComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["zoomed",{"_index":862,"title":{},"body":{"injectables/ImageManipulationService.html":{}}}],["zooming",{"_index":1759,"title":{},"body":{"components/WebcamComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AccessToken.html":{"url":"interfaces/AccessToken.html","title":"interface - AccessToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccessToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/auth/access-token.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access_token\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            authorities\n                                        \n                                \n                                \n                                        \n                                            expires_in\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            refresh_token\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scope\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            token_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        authorities\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authorities:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires_in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expires_in:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refresh_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scope:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AccessToken {\n  access_token: string;\n  token_type?: string;\n  refresh_token?: string;\n  expires_in: number;\n  scope?: string;\n  authorities?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-sdk\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                #tvSearchResult\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeOddsView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setupAnalytics\n                            \n                            \n                                    Private\n                                setupApplicationConfig\n                            \n                            \n                                    Private\n                                setupTranslations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                accessTokenProvider\n                            \n                            \n                                apiUrl\n                            \n                            \n                                autoSnap\n                            \n                            \n                                closeCallback\n                            \n                            \n                                language\n                            \n                            \n                                logCallback\n                            \n                            \n                                logLevel\n                            \n                            \n                                resultsCallback\n                            \n                            \n                                tvSearchResult\n                            \n                            \n                                vibrate\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    tvSearchResult\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationConfigService: ApplicationConfigService, translateService: TranslateService, analyticsService: GoogleAnalyticsService, appStateStore: AppStateStore)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/app/app.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        analyticsService\n                                                  \n                                                        \n                                                                        GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appStateStore\n                                                  \n                                                        \n                                                                        AppStateStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        accessTokenProvider\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        apiUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoSnap\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        closeCallback\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        language\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logCallback\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logLevel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        resultsCallback\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tvSearchResult\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        vibrate\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/app.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeOddsView\n                        \n                    \n                \n            \n            \n                \ncloseOddsView()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/app.component.ts:104\n                \n            \n\n\n            \n                \n                    Clears the stored tvSearchResults and renders the view to snap an image.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/app.component.ts:60\n                \n            \n\n\n            \n                \n                    Sets up the applicationConfig, translations and analytics.\nCalled when the SDK is added to the DOM\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setupAnalytics\n                        \n                    \n                \n            \n            \n                \n                    \n                    setupAnalytics()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/app.component.ts:70\n                \n            \n\n\n            \n                \n                    Trigger analytics method that SDK has been initialized\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setupApplicationConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setupApplicationConfig()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/app.component.ts:87\n                \n            \n\n\n            \n                \n                    Configure the application based on the component inputs and assigns the callbacks.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setupTranslations\n                        \n                    \n                \n            \n            \n                \n                    \n                    setupTranslations()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/app.component.ts:78\n                \n            \n\n\n            \n                \n                    Register the translation service for the configured language\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        #tvSearchResult\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TvSearchResultEntry | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/app.component.ts:21\n                        \n                    \n\n            \n                \n                    Holds the value of the TvSearchResultEntry for loading and rendering the lineOdds\nOnly to be accessed by property accessors.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tvSearchResult\n                    \n                \n\n                \n                    \n                        gettvSearchResult()\n                    \n                \n                            \n                                \n                                    Defined in apps/snapodds/src/app/app.component.ts:45\n                                \n                            \n                    \n                        \n                                Returns the TvSearchResult, so that it can be used inside the template\n\n\n                        \n                    \n\n                \n                    \n                        settvSearchResult(tvSearchResultEntry: TvSearchResultEntry | null)\n                    \n                \n                            \n                                \n                                    Defined in apps/snapodds/src/app/app.component.ts:34\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            tvSearchResultEntry\n                                                    \n                                                            \n                                                                        TvSearchResultEntry | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AccessToken, TvSearchResultEntry } from '@response/typings';\nimport { ApplicationConfigService } from '../services/config/application-config.service';\nimport { toLogLevel } from '../services/logger/log-level';\nimport { GoogleAnalyticsService } from '../services/tracking/google-analytics.service';\nimport { AppState, AppStateStore } from '../states/app-state.store';\n\n@Component({\n  selector: 'snapodds-sdk',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  /**\n   * Holds the value of the TvSearchResultEntry for loading and rendering the lineOdds\n   * Only to be accessed by property accessors.\n   *\n   * @private\n   */\n  #tvSearchResult: TvSearchResultEntry | null = null;\n\n  @Input() apiUrl?: string;\n  @Input() autoSnap?: boolean;\n  @Input() language?: string;\n  @Input() logLevel?: string;\n  @Input() vibrate?: boolean;\n  @Input() accessTokenProvider?: () => Promise;\n  @Input() logCallback?: (logLevel: string, data: unknown[]) => void;\n  @Input() resultsCallback?: (tvSearchResult: TvSearchResultEntry) => void;\n  @Input() closeCallback?: () => void;\n\n  @Input()\n  set tvSearchResult(tvSearchResultEntry: TvSearchResultEntry | null) {\n    this.#tvSearchResult = tvSearchResultEntry;\n\n    if (tvSearchResultEntry) {\n      this.appStateStore.dispatch(AppState.SHOW_ODDS);\n    }\n  }\n\n  /**\n   * Returns the TvSearchResult, so that it can be used inside the template\n   */\n  get tvSearchResult() {\n    return this.#tvSearchResult;\n  }\n\n  constructor(\n    private readonly applicationConfigService: ApplicationConfigService,\n    private readonly translateService: TranslateService,\n    private readonly analyticsService: GoogleAnalyticsService,\n    readonly appStateStore: AppStateStore\n  ) {}\n\n  /**\n   * Sets up the applicationConfig, translations and analytics.\n   * Called when the SDK is added to the DOM\n   */\n  ngOnInit(): void {\n    this.setupApplicationConfig();\n    this.setupTranslations();\n    this.setupAnalytics();\n  }\n\n  /**\n   * Trigger analytics method that SDK has been initialized\n   * @private\n   */\n  private setupAnalytics(): void {\n    this.analyticsService.sdkInitialized();\n  }\n\n  /**\n   * Register the translation service for the configured language\n   * @private\n   */\n  private setupTranslations(): void {\n    this.translateService.use(this.applicationConfigService.getLanguage());\n  }\n\n  /**\n   * Configure the application based on the component inputs and assigns the callbacks.\n   *\n   * @private\n   */\n  private setupApplicationConfig(): void {\n    this.applicationConfigService.setConfig({\n      apiUrl: this.apiUrl,\n      autoSnap: this.autoSnap,\n      language: this.language,\n      logLevel: toLogLevel(this.logLevel),\n      vibrate: this.vibrate,\n      accessTokenProvider: this.accessTokenProvider,\n      closeCallback: this.closeCallback,\n      logCallback: this.logCallback,\n      resultsCallback: this.resultsCallback,\n    });\n  }\n\n  /**\n   * Clears the stored tvSearchResults and renders the view to snap an image.\n   */\n  closeOddsView(): void {\n    this.tvSearchResult = null;\n    this.appStateStore.dispatch(AppState.SNAP_READY);\n  }\n}\n\n    \n\n    \n        \n\n\n  \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @use 'tools';\n@use 'settings';\n\n:host {\n  background-color: settings.$color-background;\n\n  color: settings.$color-text;\n  display: flex;\n  flex: 1;\n  font-family: var(--snapodds__font-family);\n  font-size: 1em;\n  font-weight: 500;\n  line-height: 1.3;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'OddsLineComponent', 'selector': 'snapodds-odds-line'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBestOfferLinePipe\n\nBestOfferLinePipe\n\nAppModule -->\n\nBestOfferLinePipe->AppModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nAppModule -->\n\nContentComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHelpComponent\n\nHelpComponent\n\nAppModule -->\n\nHelpComponent->AppModule\n\n\n\n\n\nNumberFormatPipe\n\nNumberFormatPipe\n\nAppModule -->\n\nNumberFormatPipe->AppModule\n\n\n\n\n\nOddsComponent\n\nOddsComponent\n\nAppModule -->\n\nOddsComponent->AppModule\n\n\n\n\n\nOddsLineComponent\n\nOddsLineComponent\n\nAppModule -->\n\nOddsLineComponent->AppModule\n\n\n\n\n\nSnapComponent\n\nSnapComponent\n\nAppModule -->\n\nSnapComponent->AppModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nAppModule -->\n\nSpinnerComponent->AppModule\n\n\n\n\n\nSwitchSvgComponent\n\nSwitchSvgComponent\n\nAppModule -->\n\nSwitchSvgComponent->AppModule\n\n\n\n\n\nTriggerComponent\n\nTriggerComponent\n\nAppModule -->\n\nTriggerComponent->AppModule\n\n\n\n\n\nTriggerSvgComponent\n\nTriggerSvgComponent\n\nAppModule -->\n\nTriggerSvgComponent->AppModule\n\n\n\n\n\nUserFeedbackMessageComponent\n\nUserFeedbackMessageComponent\n\nAppModule -->\n\nUserFeedbackMessageComponent->AppModule\n\n\n\n\n\nWebcamComponent\n\nWebcamComponent\n\nAppModule -->\n\nWebcamComponent->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/snapodds/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            BestOfferLinePipe\n                        \n                        \n                            ContentComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HelpComponent\n                        \n                        \n                            NumberFormatPipe\n                        \n                        \n                            OddsComponent\n                        \n                        \n                            OddsLineComponent\n                        \n                        \n                            SnapComponent\n                        \n                        \n                            SpinnerComponent\n                        \n                        \n                            SwitchSvgComponent\n                        \n                        \n                            TriggerComponent\n                        \n                        \n                            TriggerSvgComponent\n                        \n                        \n                            UserFeedbackMessageComponent\n                        \n                        \n                            WebcamComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoBootstrap\n                        \n                    \n                \n            \n            \n                \nngDoBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/app.module.ts:67\n                \n            \n\n\n            \n                \n                    Register the angular component as web-component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { DoBootstrap, Injector, NgModule } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { PinchZoomModule } from 'ngx-pinch-zoom';\nimport { WebcamModule } from 'ngx-webcam';\nimport { FileTranslateLoader } from '../services/i18n/file-translate-loader';\n\nimport { AppComponent } from './app.component';\nimport { ContentComponent } from './content/content.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HeaderComponent } from './header/header.component';\nimport { HelpComponent } from './help/help.component';\nimport { OddsLineComponent } from './odds-line/odds-line.component';\nimport { OddsComponent } from './odds/odds.component';\nimport { BestOfferLinePipe } from './pipes/best-offer.pipe';\nimport { SnapComponent } from './snap/snap.component';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { SwitchSvgComponent } from './svgs/switch.svg.component';\nimport { TriggerSvgComponent } from './svgs/trigger.svg.component';\nimport { TriggerComponent } from './trigger/trigger.component';\nimport { UserFeedbackMessageComponent } from './user-feedback-message/user-feedback-message.component';\nimport { WebcamComponent } from './webcam/webcam.component';\nimport { NumberFormatPipe } from './pipes/number-format.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SnapComponent,\n    OddsComponent,\n    WebcamComponent,\n    SpinnerComponent,\n    HeaderComponent,\n    ContentComponent,\n    FooterComponent,\n    HelpComponent,\n    TriggerComponent,\n    TriggerSvgComponent,\n    SwitchSvgComponent,\n    UserFeedbackMessageComponent,\n    OddsLineComponent,\n    BestOfferLinePipe,\n    NumberFormatPipe,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    WebcamModule,\n    PinchZoomModule,\n    TranslateModule.forRoot({\n      defaultLanguage: 'en',\n      loader: {\n        provide: TranslateLoader,\n        useClass: FileTranslateLoader,\n      },\n    }),\n  ],\n  entryComponents: [AppComponent],\n})\nexport class AppModule implements DoBootstrap {\n  constructor(private injector: Injector) {}\n\n  /**\n   * Register the angular component as web-component.\n   */\n  ngDoBootstrap() {\n    const el = createCustomElement(AppComponent, { injector: this.injector });\n    customElements.define('snapodds-sdk', el);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppStateStore.html":{"url":"injectables/AppStateStore.html","title":"injectable - AppStateStore","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppStateStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/states/app-state.store.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _state\n                            \n                            \n                                    Readonly\n                                showHelp$\n                            \n                            \n                                    Private\n                                    Readonly\n                                state$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dispatch\n                            \n                            \n                                getState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dispatch\n                        \n                    \n                \n            \n            \n                \ndispatch(state: AppState)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/states/app-state.store.ts:39\n                \n            \n\n\n            \n                \n                    Trigger an AppState change\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                AppState\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getState\n                        \n                    \n                \n            \n            \n                \ngetState()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/states/app-state.store.ts:31\n                \n            \n\n\n            \n                \n                    Listen to changes on the AppState\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/states/app-state.store.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        showHelp$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.getState().pipe(map((state) => state === AppState.SHOW_HELP))\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/states/app-state.store.ts:26\n                        \n                    \n\n            \n                \n                    Emits when the HelpPage should be shown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._state.asObservable()\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/states/app-state.store.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { map, Observable, ReplaySubject } from 'rxjs';\n\n/**\n * The various AppStates which are used for determining which view to render\n */\nexport enum AppState {\n  SHOW_HELP = 'SHOW_HELP',\n  SHOW_ODDS = 'SHOW_ODDS',\n  SNAP_READY = 'SNAP_READY',\n  SNAP_IN_PROGRESS = 'SNAP_IN_PROGRESS',\n  SNAP_FAILED = 'SNAP_FAILED',\n  SNAP_NO_RESULTS = 'SNAP_NO_RESULTS',\n  DEVICE_NO_CAMERA = 'DEVICE_NO_CAMERA',\n  DEVICE_NO_PERMISSION = 'DEVICE_NO_PERMISSION',\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AppStateStore {\n  private readonly _state = new ReplaySubject(1);\n  private readonly state$: Observable = this._state.asObservable();\n\n  /**\n   * Emits when the HelpPage should be shown\n   */\n  readonly showHelp$ = this.getState().pipe(map((state) => state === AppState.SHOW_HELP));\n\n  /**\n   * Listen to changes on the AppState\n   */\n  getState(): Observable {\n    return this.state$;\n  }\n\n  /**\n   * Trigger an AppState change\n   * @param state\n   */\n  dispatch(state: AppState): void {\n    this._state.next(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationConfig.html":{"url":"interfaces/ApplicationConfig.html","title":"interface - ApplicationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApplicationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/config/application-config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessTokenProvider\n                                        \n                                \n                                \n                                        \n                                            apiUrl\n                                        \n                                \n                                \n                                        \n                                            autoSnap\n                                        \n                                \n                                \n                                        \n                                            closeCallback\n                                        \n                                \n                                \n                                        \n                                            language\n                                        \n                                \n                                \n                                        \n                                            logCallback\n                                        \n                                \n                                \n                                        \n                                            logLevel\n                                        \n                                \n                                \n                                        \n                                            resultsCallback\n                                        \n                                \n                                \n                                        \n                                            vibrate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessTokenProvider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessTokenProvider:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Callback executed when the view is closed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        apiUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The apiUrl to be used for snapping\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        autoSnap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autoSnap:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Enable or disable autoSnapping\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        closeCallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closeCallback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Callback executed whenever a log event inside the SDK has been written.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The view language used for i18n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logCallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logCallback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Provider used to retrieve an AccessToken from outside the SDK\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logLevel:         LogLevel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LogLevel\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Enable if the device should vibrate if a snap has been successful\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultsCallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resultsCallback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Callback executed when snapping has returned a TvSearchResultEntry.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vibrate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vibrate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The logLevel to be reported by the SDK\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AccessToken, TvSearchResultEntry } from '@response/typings';\nimport { LogLevel } from '../services/logger/log-level';\n\nexport interface ApplicationConfig {\n  /**\n   * The apiUrl to be used for snapping\n   */\n  apiUrl: string;\n  /**\n   * Enable or disable autoSnapping\n   */\n  autoSnap: boolean;\n  /**\n   * The view language used for i18n\n   */\n  language: string;\n  /**\n   * The logLevel to be reported by the SDK\n   */\n  vibrate: boolean;\n  /**\n   * Enable if the device should vibrate if a snap has been successful\n   */\n  logLevel: LogLevel;\n  /**\n   * Provider used to retrieve an AccessToken from outside the SDK\n   */\n  logCallback: (logLevel: string, data: unknown[]) => void;\n  /**\n   * Callback executed whenever a log event inside the SDK has been written.\n   */\n  closeCallback: () => void;\n  /**\n   * Callback executed when snapping has returned a TvSearchResultEntry.\n   */\n  resultsCallback: (tvSearchResult: TvSearchResultEntry) => void;\n  /**\n   * Callback executed when the view is closed\n   */\n  accessTokenProvider: () => Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationConfigService.html":{"url":"injectables/ApplicationConfigService.html","title":"injectable - ApplicationConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/config/application-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                AUTOSNAP_DELAY\n                            \n                            \n                                    Private\n                                    Readonly\n                                AUTOSNAP_DELAY_INITIAL\n                            \n                            \n                                    Private\n                                    Readonly\n                                AUTOSNAP_MAX_DIMENSION\n                            \n                            \n                                    Private\n                                config\n                            \n                            \n                                    Private\n                                    Readonly\n                                SNAP_MAX_DIMENSION\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitCloseEvent\n                            \n                            \n                                emitLoggerEvent\n                            \n                            \n                                emitResultsEvent\n                            \n                            \n                                getApiUrl\n                            \n                            \n                                getAutoSnapDelay\n                            \n                            \n                                getLanguage\n                            \n                            \n                                getLogLevel\n                            \n                            \n                                getSnapDimension\n                            \n                            \n                                isAutoSnapEnabled\n                            \n                            \n                                isVibrateEnabled\n                            \n                            \n                                    Private\n                                omitUndefinedProperties\n                            \n                            \n                                setConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    accessTokenProvider\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        emitCloseEvent\n                        \n                    \n                \n            \n            \n                \nemitCloseEvent()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:113\n                \n            \n\n\n            \n                \n                    Triggers the closeEvent callback\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emitLoggerEvent\n                        \n                    \n                \n            \n            \n                \nemitLoggerEvent(logLevel: LogLevel, data: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:106\n                \n            \n\n\n            \n                \n                    Triggers the logger event on the corresponding callback\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logLevel\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emitResultsEvent\n                        \n                    \n                \n            \n            \n                \nemitResultsEvent(resultEntry: TvSearchResultEntry)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:121\n                \n            \n\n\n            \n                \n                    Triggers the resultCallback with the given TvSearchResultEntry\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resultEntry\n                                    \n                                                TvSearchResultEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiUrl\n                        \n                    \n                \n            \n            \n                \ngetApiUrl()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:97\n                \n            \n\n\n            \n                \n                    Returns the apiUrl to perform the search of SportEvents and loading of LineOdds against\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAutoSnapDelay\n                        \n                    \n                \n            \n            \n                \ngetAutoSnapDelay(initial: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:76\n                \n            \n\n\n            \n                \n                    Returns the delay used to programmatically trigger a snap\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    initial\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        : the initial delay takes longer in order for the user to correctly align the camera\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLanguage\n                        \n                    \n                \n            \n            \n                \ngetLanguage()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:83\n                \n            \n\n\n            \n                \n                    Returns the configured language\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLogLevel\n                        \n                    \n                \n            \n            \n                \ngetLogLevel()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:90\n                \n            \n\n\n            \n                \n                    Returns the configured logLevel\n\n\n                    \n                        Returns :         LogLevel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSnapDimension\n                        \n                    \n                \n            \n            \n                \ngetSnapDimension()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:68\n                \n            \n\n\n            \n                \n                    Returns the dimension for resizing an image based on the autoSnap mode\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAutoSnapEnabled\n                        \n                    \n                \n            \n            \n                \nisAutoSnapEnabled()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:61\n                \n            \n\n\n            \n                \n                    Determines if autoSnap is enabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isVibrateEnabled\n                        \n                    \n                \n            \n            \n                \nisVibrateEnabled()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:128\n                \n            \n\n\n            \n                \n                    Determines if the device should vibrate if a match has been found or not\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        omitUndefinedProperties\n                        \n                    \n                \n            \n            \n                \n                    \n                    omitUndefinedProperties(config: Partial)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:44\n                \n            \n\n\n            \n                \n                    Filter out entries which values are undefined\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Partial\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConfig\n                        \n                    \n                \n            \n            \n                \nsetConfig(applicationConfig: Partial)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/config/application-config.service.ts:35\n                \n            \n\n\n            \n                \n                    Merges the given applicationConfig with the default values.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    applicationConfig\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        AUTOSNAP_DELAY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1000\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/config/application-config.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        AUTOSNAP_DELAY_INITIAL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2500\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/config/application-config.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        AUTOSNAP_MAX_DIMENSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 512\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/config/application-config.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_APPLICATION_CONFIG\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/config/application-config.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        SNAP_MAX_DIMENSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1024\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/config/application-config.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        accessTokenProvider\n                    \n                \n\n                \n                    \n                        getaccessTokenProvider()\n                    \n                \n                            \n                                \n                                    Defined in apps/snapodds/src/services/config/application-config.service.ts:54\n                                \n                            \n                    \n                        \n                                Returns the accessTokenProvider callback\n\n\n                                \n                                    Returns :         Promise\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AccessToken, TvSearchResultEntry } from '@response/typings';\nimport { noop } from 'rxjs';\nimport { ApplicationConfig } from '../../config/application-config';\nimport { fromLogLevel, LogLevel } from '../logger/log-level';\n\n/**\n * Default application configuration\n */\nconst DEFAULT_APPLICATION_CONFIG: ApplicationConfig = {\n  apiUrl: 'https://api.us.snapscreen.com',\n  language: 'en',\n  autoSnap: false,\n  logLevel: LogLevel.SILENT,\n  vibrate: false,\n  logCallback: noop,\n  closeCallback: noop,\n  resultsCallback: noop,\n  accessTokenProvider: () => Promise.reject('No accessTokenProvider specified'),\n};\n\n@Injectable({ providedIn: 'root' })\nexport class ApplicationConfigService {\n  private config: ApplicationConfig = DEFAULT_APPLICATION_CONFIG;\n\n  private readonly SNAP_MAX_DIMENSION = 1024;\n  private readonly AUTOSNAP_MAX_DIMENSION = 512;\n  private readonly AUTOSNAP_DELAY_INITIAL = 2500;\n  private readonly AUTOSNAP_DELAY = 1000;\n\n  /**\n   * Merges the given applicationConfig with the default values.\n   * @param applicationConfig\n   */\n  setConfig(applicationConfig: Partial): void {\n    this.config = { ...DEFAULT_APPLICATION_CONFIG, ...this.omitUndefinedProperties(applicationConfig) };\n  }\n\n  /**\n   * Filter out entries which values are undefined\n   * @param config\n   * @private\n   */\n  private omitUndefinedProperties(config: Partial): Partial {\n    return Object.entries(config).reduce(\n      (acc, [key, value]) => (value === undefined ? acc : { ...acc, [key]: value }),\n      {}\n    );\n  }\n\n  /**\n   * Returns the accessTokenProvider callback\n   */\n  get accessTokenProvider(): () => Promise {\n    return this.config.accessTokenProvider;\n  }\n\n  /**\n   * Determines if autoSnap is enabled\n   */\n  isAutoSnapEnabled(): boolean {\n    return this.config.autoSnap;\n  }\n\n  /**\n   * Returns the dimension for resizing an image based on the autoSnap mode\n   */\n  getSnapDimension(): number {\n    return this.isAutoSnapEnabled() ? this.AUTOSNAP_MAX_DIMENSION : this.SNAP_MAX_DIMENSION;\n  }\n\n  /**\n   * Returns the delay used to programmatically trigger a snap\n   * @param initial: the initial delay takes longer in order for the user to correctly align the camera\n   */\n  getAutoSnapDelay(initial: boolean = false): number {\n    return initial ? this.AUTOSNAP_DELAY_INITIAL : this.AUTOSNAP_DELAY;\n  }\n\n  /**\n   * Returns the configured language\n   */\n  getLanguage(): string {\n    return this.config.language;\n  }\n\n  /**\n   * Returns the configured logLevel\n   */\n  getLogLevel(): LogLevel {\n    return this.config.logLevel;\n  }\n\n  /**\n   * Returns the apiUrl to perform the search of SportEvents and loading of LineOdds against\n   */\n  getApiUrl(): string {\n    return this.config.apiUrl;\n  }\n\n  /**\n   * Triggers the logger event on the corresponding callback\n   * @param logLevel\n   * @param data\n   */\n  emitLoggerEvent(logLevel: LogLevel, data: unknown[]): void {\n    this.config.logCallback(fromLogLevel(logLevel), data);\n  }\n\n  /**\n   * Triggers the closeEvent callback\n   */\n  emitCloseEvent(): void {\n    this.config.closeCallback();\n  }\n\n  /**\n   * Triggers the resultCallback with the given TvSearchResultEntry\n   * @param resultEntry\n   */\n  emitResultsEvent(resultEntry: TvSearchResultEntry): void {\n    this.config.resultsCallback(resultEntry);\n  }\n\n  /**\n   * Determines if the device should vibrate if a match has been found or not\n   */\n  isVibrateEnabled(): boolean {\n    return this.config.vibrate;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                accessToken\n                            \n                            \n                                    Private\n                                    Optional\n                                tokenExpirationDate\n                            \n                            \n                                    Private\n                                    Readonly\n                                tokenRefreshOffset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAccessToken\n                            \n                            \n                                hasValidAccessToken\n                            \n                            \n                                    Private\n                                isTokenExpired\n                            \n                            \n                                requestAccessToken\n                            \n                            \n                                updateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationConfigService: ApplicationConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAccessToken\n                        \n                    \n                \n            \n            \n                \ngetAccessToken()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/auth/auth.service.ts:45\n                \n            \n\n\n            \n                \n                    Returns the currently stored accessToken.\n\n\n                    \n                        Returns :     string | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasValidAccessToken\n                        \n                    \n                \n            \n            \n                \nhasValidAccessToken()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/auth/auth.service.ts:52\n                \n            \n\n\n            \n                \n                    Verifies the token validity based on the expiration date.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isTokenExpired\n                        \n                    \n                \n            \n            \n                \n                    \n                    isTokenExpired()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/auth/auth.service.ts:60\n                \n            \n\n\n            \n                \n                    True unless the token's lifetime has been reached.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestAccessToken\n                        \n                    \n                \n            \n            \n                \nrequestAccessToken()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/auth/auth.service.ts:22\n                \n            \n\n\n            \n                \n                    When no accessToken is present the callback to request an accessToken is invoked.\nIf a valid accessToken is present it will be returned instead.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateToken\n                        \n                    \n                \n            \n            \n                \nupdateToken(authResponse: AccessToken)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/auth/auth.service.ts:36\n                \n            \n\n\n            \n                \n                    Stores the current accessToken and sets the token's expiration date.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    authResponse\n                                    \n                                                AccessToken\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : response from with the token is extracted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/auth/auth.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        tokenExpirationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/auth/auth.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        tokenRefreshOffset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 60\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/auth/auth.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AccessToken } from '@response/typings';\nimport { addSeconds, differenceInSeconds } from 'date-fns';\nimport { from, map, Observable, of } from 'rxjs';\nimport { ApplicationConfigService } from '../config/application-config.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private accessToken?: string;\n  private tokenExpirationDate?: Date;\n\n  private readonly tokenRefreshOffset = 60;\n\n  constructor(private readonly applicationConfigService: ApplicationConfigService) {}\n\n  /**\n   * When no accessToken is present the callback to request an accessToken is invoked.\n   * If a valid accessToken is present it will be returned instead.\n   */\n  requestAccessToken(): Observable {\n    if (this.hasValidAccessToken()) {\n      return of(this.accessToken as string);\n    }\n\n    return from(this.applicationConfigService.accessTokenProvider()).pipe(\n      map((accessToken) => this.updateToken(accessToken))\n    );\n  }\n\n  /**\n   * Stores the current accessToken and sets the token's expiration date.\n   * @param authResponse: response from with the token is extracted\n   */\n  updateToken(authResponse: AccessToken): string {\n    this.tokenExpirationDate = addSeconds(new Date(), authResponse.expires_in);\n    this.accessToken = authResponse.access_token;\n    return this.accessToken;\n  }\n\n  /**\n   * Returns the currently stored accessToken.\n   */\n  getAccessToken(): string | undefined {\n    return this.accessToken;\n  }\n\n  /**\n   * Verifies the token validity based on the expiration date.\n   */\n  hasValidAccessToken(): boolean {\n    return Boolean(this.accessToken) && !this.isTokenExpired();\n  }\n\n  /**\n   * True unless the token's lifetime has been reached.\n   * @private\n   */\n  private isTokenExpired(): boolean {\n    return differenceInSeconds(this.tokenExpirationDate ?? new Date(), new Date()) \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BestOfferLinePipe.html":{"url":"pipes/BestOfferLinePipe.html","title":"pipe - BestOfferLinePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BestOfferLinePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/snapodds/src/app/pipes/best-offer.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        bestOfferLine\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(line: SportsBookLineViewModel | BestOfferLineViewModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/pipes/best-offer.pipe.ts:13\n                \n            \n\n\n            \n                \n                    Pipe used to avoid typecasting to $any as interfaces can't be distinguished in templates.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            SportsBookLineViewModel | BestOfferLineViewModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BestOfferLineViewModel\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { BestOfferLineViewModel } from '../../models/best-offer-line-view-model';\nimport { SportsBookLineViewModel } from '../../models/sports-book-line-view-model';\n\n@Pipe({\n  name: 'bestOfferLine',\n})\nexport class BestOfferLinePipe implements PipeTransform {\n  /**\n   * Pipe used to avoid typecasting to $any as interfaces can't be distinguished in templates.\n   * @param line\n   */\n  transform(line: SportsBookLineViewModel | BestOfferLineViewModel): BestOfferLineViewModel {\n    return line as BestOfferLineViewModel;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BestOfferLineViewModel.html":{"url":"interfaces/BestOfferLineViewModel.html","title":"interface - BestOfferLineViewModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BestOfferLineViewModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/models/best-offer-line-view-model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SportsBookLineViewModel\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            moneySportsBookName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            overUnderSportsBookName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            spreadSportsBookName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        moneySportsBookName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moneySportsBookName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the sportsBook for the best money offer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overUnderSportsBookName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overUnderSportsBookName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the sportsBook for the best overUnder offer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spreadSportsBookName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spreadSportsBookName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the sportsBook for the best spread offer\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { SportsBookLineViewModel } from './sports-book-line-view-model';\n\nexport interface BestOfferLineViewModel extends SportsBookLineViewModel {\n  /**\n   * The name of the sportsBook for the best spread offer\n   */\n  spreadSportsBookName?: string;\n\n  /**\n   * The name of the sportsBook for the best money offer\n   */\n  moneySportsBookName?: string;\n\n  /**\n   * The name of the sportsBook for the best overUnder offer\n   */\n  overUnderSportsBookName?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BestOfferViewModel.html":{"url":"interfaces/BestOfferViewModel.html","title":"interface - BestOfferViewModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BestOfferViewModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/models/best-offer-view-model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            lines\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lines\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lines:         BestOfferLineViewModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BestOfferLineViewModel[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    One line contains the various OddsBestOffers combined.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the sports book.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { BestOfferLineViewModel } from './best-offer-line-view-model';\n\nexport interface BestOfferViewModel {\n  /**\n   * The name of the sports book.\n   */\n  name: string;\n  /**\n   * One line contains the various OddsBestOffers combined.\n   */\n  lines: BestOfferLineViewModel[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Competitor.html":{"url":"interfaces/Competitor.html","title":"interface - Competitor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Competitor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/odds/competitor.ts\n        \n\n\n            \n                Description\n            \n            \n                An entity represents a competitor of a sport event.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the sport event competitor.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the competitor.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Competitor {\n  /**\n   * The id of the sport event competitor.\n   */\n  id: number;\n\n  /**\n   * The name of the competitor.\n   */\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent.html":{"url":"components/ContentComponent.html","title":"component - ContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/content/content.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-content\n            \n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'snapodds-content',\n  template: '',\n  styleUrls: ['./content.component.scss'],\n})\nexport class ContentComponent {}\n\n    \n\n\n    \n                \n                    ./content.component.scss\n                \n                :host {\n  display: flex;\n  flex: auto;\n  flex-direction: column;\n  justify-content: space-between;\n  overflow: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'OddsLineComponent', 'selector': 'snapodds-odds-line'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileTranslateLoader.html":{"url":"classes/FileTranslateLoader.html","title":"class - FileTranslateLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileTranslateLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/i18n/file-translate-loader.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        TranslateLoader\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                translations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        translations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n    ['en', TRANSLATION_ENTRIES_EN],\n    ['de', TRANSLATION_ENTRIES_DE],\n  ])\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/i18n/file-translate-loader.ts:12\n                        \n                    \n\n            \n                \n                    Map of translation entries which are inlined during build time, so they don't have to be externally loaded\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTranslation\n                        \n                    \n                \n            \n            \n                \ngetTranslation(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/i18n/file-translate-loader.ts:21\n                \n            \n\n\n            \n                \n                    Retrieves the translation entries for the given language\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : two letter language code\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TranslateLoader } from '@ngx-translate/core';\nimport { Observable, of } from 'rxjs';\nimport { TranslationEntries } from './translation-entries';\nimport { TRANSLATION_ENTRIES_DE } from './translation-entries.de';\nimport { TRANSLATION_ENTRIES_EN } from './translation-entries.en';\n\nexport class FileTranslateLoader implements TranslateLoader {\n  /**\n   * Map of translation entries which are inlined during build time, so they don't have to be externally loaded\n   * @private\n   */\n  private readonly translations: Map = new Map([\n    ['en', TRANSLATION_ENTRIES_EN],\n    ['de', TRANSLATION_ENTRIES_DE],\n  ]);\n\n  /**\n   * Retrieves the translation entries for the given language\n   * @param lang: two letter language code\n   */\n  getTranslation(lang: string): Observable {\n    return of(this.translations.get(lang));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'snapodds-footer',\n  template: '',\n  styleUrls: ['./footer.component.scss'],\n})\nexport class FooterComponent {}\n\n    \n\n\n    \n                \n                    ./footer.component.scss\n                \n                @use 'settings';\n@use 'tools';\n\n:host {\n  display: flex;\n  flex-direction: column;\n  flex-grow: 0;\n  margin-bottom: settings.$spacing-lg;\n\n  @include tools.media-tiny--portrait {\n    margin-bottom: settings.$spacing-base;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'OddsLineComponent', 'selector': 'snapodds-odds-line'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleAnalyticsService.html":{"url":"injectables/GoogleAnalyticsService.html","title":"injectable - GoogleAnalyticsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleAnalyticsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/tracking/google-analytics.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                category\n                            \n                            \n                                    Readonly\n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isGoogleAnalytics\n                            \n                            \n                                    Private\n                                isGoogleTagManager\n                            \n                            \n                                sdkInitialized\n                            \n                            \n                                snapViewClosed\n                            \n                            \n                                snapViewOpened\n                            \n                            \n                                snapViewSnap\n                            \n                            \n                                snapViewSnapFailed\n                            \n                            \n                                snapViewSnapNegative\n                            \n                            \n                                snapViewSnapResult\n                            \n                            \n                                    Private\n                                trackEvent\n                            \n                            \n                                    Private\n                                trackGoogleAnalyticsEvent\n                            \n                            \n                                    Private\n                                trackGoogleTagManagerEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isGoogleAnalytics\n                        \n                    \n                \n            \n            \n                \n                    \n                    isGoogleAnalytics()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:45\n                \n            \n\n\n            \n                \n                    Checks if GoogleAnalytics is globally available\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isGoogleTagManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    isGoogleTagManager()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:67\n                \n            \n\n\n            \n                \n                    Checks if GoogleTagManager is globally available\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sdkInitialized\n                        \n                    \n                \n            \n            \n                \nsdkInitialized()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snapViewClosed\n                        \n                    \n                \n            \n            \n                \nsnapViewClosed()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snapViewOpened\n                        \n                    \n                \n            \n            \n                \nsnapViewOpened()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snapViewSnap\n                        \n                    \n                \n            \n            \n                \nsnapViewSnap()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snapViewSnapFailed\n                        \n                    \n                \n            \n            \n                \nsnapViewSnapFailed(duration: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snapViewSnapNegative\n                        \n                    \n                \n            \n            \n                \nsnapViewSnapNegative(duration: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snapViewSnapResult\n                        \n                    \n                \n            \n            \n                \nsnapViewSnapResult(duration: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        trackEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    trackEvent(action: string, value?: number | string)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:22\n                \n            \n\n\n            \n                \n                    Tracks analytics based on which analytics service is available.\nFallback to the LoggerService if neither GoogleAnalytics nor GoogleTagManager is available-\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the action of the event to track\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        : the value of the event to track\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        trackGoogleAnalyticsEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    trackGoogleAnalyticsEvent(action: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:54\n                \n            \n\n\n            \n                \n                    Track Event using GoogleAnalytics\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        trackGoogleTagManagerEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    trackGoogleTagManagerEvent(action: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:76\n                \n            \n\n\n            \n                \n                    Track Event using GoogleTagManager\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SnapscreenSDK'\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'JS/1.0.0'\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/tracking/google-analytics.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LoggerService } from '../logger/logger.service';\n\ndeclare const gtag: Function;\ndeclare const ga: Function;\n\n@Injectable({ providedIn: 'root' })\nexport class GoogleAnalyticsService {\n  readonly category = 'SnapscreenSDK';\n  readonly label = 'JS/1.0.0';\n\n  constructor(private readonly logger: LoggerService) {}\n\n  /**\n   * Tracks analytics based on which analytics service is available.\n   * Fallback to the LoggerService if neither GoogleAnalytics nor GoogleTagManager is available-\n   * @param action: the action of the event to track\n   * @param value: the value of the event to track\n   * @private\n   */\n  private trackEvent(action: string, value?: number | string) {\n    try {\n      if (this.isGoogleAnalytics()) {\n        this.trackGoogleAnalyticsEvent(action);\n      } else if (this.isGoogleTagManager()) {\n        this.trackGoogleTagManagerEvent(action);\n      } else {\n        this.logger.info('Tracked event', {\n          eventCategory: this.category,\n          eventAction: action,\n          eventLabel: this.label,\n          eventValue: value,\n        });\n      }\n    } catch (error) {\n      this.logger.error('Failed to track event', error);\n    }\n  }\n\n  /**\n   * Checks if GoogleAnalytics is globally available\n   * @private\n   */\n  private isGoogleAnalytics(): boolean {\n    return typeof ga === 'function';\n  }\n\n  /**\n   * Track Event using GoogleAnalytics\n   * @param action\n   * @private\n   */\n  private trackGoogleAnalyticsEvent(action: string): void {\n    ga('send', {\n      hitType: 'pageview',\n      transport: 'beacon',\n      page: `/${this.category}/${this.label}/${action}`,\n      title: `${this.category}: ${action}`,\n    });\n  }\n\n  /**\n   * Checks if GoogleTagManager is globally available\n   * @private\n   */\n  private isGoogleTagManager(): boolean {\n    return typeof gtag === 'function';\n  }\n\n  /**\n   * Track Event using GoogleTagManager\n   * @param action\n   * @private\n   */\n  private trackGoogleTagManagerEvent(action: string): void {\n    gtag('event', 'page_view', {\n      page_path: `/${this.category}/${this.label}/${action}`,\n      page_title: `${this.category}: ${action}`,\n    });\n  }\n\n  sdkInitialized() {\n    this.trackEvent('SnapSdkInit');\n  }\n\n  snapViewOpened() {\n    this.trackEvent('SnapViewOpen');\n  }\n\n  snapViewSnap() {\n    this.trackEvent('SnapViewSnap');\n  }\n\n  snapViewSnapResult(duration: number) {\n    this.trackEvent('SnapViewSnapResult', duration);\n  }\n\n  snapViewSnapFailed(duration: number) {\n    this.trackEvent('SnapViewSnapFail', duration);\n  }\n\n  snapViewSnapNegative(duration: number) {\n    this.trackEvent('SnapViewSnapNegative', duration);\n  }\n\n  snapViewClosed() {\n    this.trackEvent('SnapViewClose');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelSnap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationConfigService: ApplicationConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/app/header/header.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelSnap\n                        \n                    \n                \n            \n            \n                \ncancelSnap()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/header/header.component.ts:15\n                \n            \n\n\n            \n                \n                    Emits the closeEvent on the ApplicationConfigService to signalize that the app should be closed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ApplicationConfigService } from '../../services/config/application-config.service';\n\n@Component({\n  selector: 'snapodds-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent {\n  constructor(private readonly applicationConfigService: ApplicationConfigService) {}\n\n  /**\n   * Emits the closeEvent on the ApplicationConfigService to signalize that the app should be closed.\n   */\n  cancelSnap(): void {\n    this.applicationConfigService.emitCloseEvent();\n  }\n}\n\n    \n\n    \n        \n  {{ 'Snapodds_Action_Cancel' | translate }}\n\n\n  \n\n\n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @use 'settings';\n@use 'tools';\n\n:host {\n  align-items: baseline;\n  border-bottom: 1px solid settings.$color-accent;\n  display: flex;\n  padding: settings.$spacing-base;\n\n  @media (orientation: portrait) {\n    padding-top: settings.$spacing-base * 3;\n  }\n\n  @include tools.media-small--portrait {\n    padding-top: settings.$spacing-base * 2;\n  }\n\n  @include tools.media-tiny--portrait {\n    padding: settings.$spacing-base settings.$spacing-sm settings.$spacing-sm;\n  }\n\n  .c-header {\n    &--left {\n      flex: 1;\n      text-align: left;\n    }\n\n    &--title {\n      flex: 1;\n      font-size: settings.$font-xl;\n      text-align: center;\n      white-space: nowrap;\n    }\n\n    &--right {\n      flex: 1;\n      text-align: right;\n    }\n\n    &--cancel-button {\n      @include tools.button-reset;\n      font-size: settings.$font-base;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'Snapodds_Action_Cancel\\' | translate }}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'OddsLineComponent', 'selector': 'snapodds-odds-line'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HelpComponent.html":{"url":"components/HelpComponent.html","title":"component - HelpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HelpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/help/help.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-help\n            \n\n            \n                styleUrls\n                ./help.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./help.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showSnapPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(appStateStore: AppStateStore)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/app/help/help.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appStateStore\n                                                  \n                                                        \n                                                                        AppStateStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        showSnapPage\n                        \n                    \n                \n            \n            \n                \nshowSnapPage()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/help/help.component.ts:15\n                \n            \n\n\n            \n                \n                    Navigate to the Snap Page by setting the corresponding AppState\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AppState, AppStateStore } from '../../states/app-state.store';\n\n@Component({\n  selector: 'snapodds-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.scss'],\n})\nexport class HelpComponent {\n  constructor(private readonly appStateStore: AppStateStore) {}\n\n  /**\n   * Navigate to the Snap Page by setting the corresponding AppState\n   */\n  showSnapPage(): void {\n    this.appStateStore.dispatch(AppState.SNAP_READY);\n  }\n}\n\n    \n\n    \n        \n  {{ 'Snapodds_Title_Help' | translate }}\n  \n    \n      {{ 'Snapodds_Title_Snap_TV' | translate }}\n    \n  \n\n\n\n  \n    Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore\n    magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd\n    gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing\n    elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero\n    eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum\n    dolor sit amet.\n  \n\n\n  \n    {{ 'Snapodds_Action_Close_Help' | translate }}\n  \n\n\n    \n\n    \n                \n                    ./help.component.scss\n                \n                @use 'tools';\n@use 'settings';\n\n$box--width: 4rem;\n\n:host {\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  snapodds-content {\n    padding: settings.$spacing-base;\n  }\n\n  snapodds-footer {\n    padding: settings.$spacing-base settings.$spacing-base 0;\n  }\n\n  button {\n    @include tools.button-reset();\n    font-size: settings.$font-base;\n  }\n\n  .c-help {\n    &__close-button {\n      background-color: settings.$color-primary;\n      color: settings.$color-text-focus;\n      font-size: settings.$font-lg;\n      font-weight: 500;\n      padding: settings.$spacing-base settings.$spacing-lg;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'Snapodds_Title_Help\\' | translate }}            {{ \\'Snapodds_Title_Snap_TV\\' | translate }}            Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore    magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd    gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing    elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero    eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum    dolor sit amet.        {{ \\'Snapodds_Action_Close_Help\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'OddsLineComponent', 'selector': 'snapodds-odds-line'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HelpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImageManipulationService.html":{"url":"injectables/ImageManipulationService.html","title":"injectable - ImageManipulationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ImageManipulationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createImageFromCanvas\n                            \n                            \n                                    Private\n                                crop\n                            \n                            \n                                cropAndResizeImage\n                            \n                            \n                                    Private\n                                downscale\n                            \n                            \n                                    Private\n                                shouldCrop\n                            \n                            \n                                    Private\n                                shouldDownscale\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, document: Document)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createImageFromCanvas\n                        \n                    \n                \n            \n            \n                \n                    \n                    createImageFromCanvas(canvas: HTMLCanvasElement, mimeType: string, quality: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts:105\n                \n            \n\n\n            \n                \n                    Converts an canvas element into an image blob with additional image metadata\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        : the canvas element where the image is rendered\n\n                                    \n                                \n                                \n                                    mimeType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'image/jpeg'\n                                    \n\n                                    \n                                        : the mime type of the resulting image\n\n                                    \n                                \n                                \n                                    quality\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0.9\n                                    \n\n                                    \n                                        : the jpeg compression quality\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        crop\n                        \n                    \n                \n            \n            \n                \n                    \n                    crop(source: HTMLVideoElement, viewFinder: HTMLElement, scaleFactor: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts:70\n                \n            \n\n\n            \n                \n                    Crops the part of the image which is visible beneath the viewfinder\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            HTMLVideoElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the webcams video stream\n\n                                    \n                                \n                                \n                                    viewFinder\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the viewfinder from which the image should be cropped\n\n                                    \n                                \n                                \n                                    scaleFactor\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the factor the user has zoomed into the image\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cropAndResizeImage\n                        \n                    \n                \n            \n            \n                \ncropAndResizeImage(source: HTMLVideoElement, viewFinder: HTMLElement, scaleFactor: number, maxDimension: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts:19\n                \n            \n\n\n            \n                \n                    Creates an image from the source based on which part is visible in the viewfinder.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            HTMLVideoElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the webcams video stream\n\n                                    \n                                \n                                \n                                    viewFinder\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the viewfinder from which the image should be cropped\n\n                                    \n                                \n                                \n                                    scaleFactor\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the factor the user has zoomed into the image\n\n                                    \n                                \n                                \n                                    maxDimension\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the max dimension of the resulting image\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        downscale\n                        \n                    \n                \n            \n            \n                \n                    \n                    downscale(sourceWidth: number, sourceHeight: number, maxDimension: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts:155\n                \n            \n\n\n            \n                \n                    Calculates the resized width and height of an image\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceWidth\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sourceHeight\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    maxDimension\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { preferredWidth: number; preferredHeight: number; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        shouldCrop\n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldCrop(scaleFactor: number, source: HTMLVideoElement, viewFinder: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts:59\n                \n            \n\n\n            \n                \n                    Determines if parts of the image should be cropped.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    scaleFactor\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the factor the user has zoomed into the image\n\n                                    \n                                \n                                \n                                    source\n                                    \n                                            HTMLVideoElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the webcams video stream\n\n                                    \n                                \n                                \n                                    viewFinder\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the viewfinder from which the image should be cropped\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        shouldDownscale\n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldDownscale(sourceWidth: number, sourceHeight: number, maxDimension: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts:144\n                \n            \n\n\n            \n                \n                    Determines if an image needs to be resized as it is larger than the max allowed dimension\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceWidth\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sourceHeight\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    maxDimension\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { LoggerService } from '../logger/logger.service';\nimport { DOCUMENT } from '../tokens/document-token';\nimport { ManipulatedImage } from './manipulated-image';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ImageManipulationService {\n  constructor(private readonly logger: LoggerService, @Inject(DOCUMENT) private readonly document: Document) {}\n\n  /**\n   * Creates an image from the `source` based on which part is visible in the viewfinder.\n   * @param source: the webcams video stream\n   * @param viewFinder: the viewfinder from which the image should be cropped\n   * @param scaleFactor: the factor the user has zoomed into the image\n   * @param maxDimension: the max dimension of the resulting image\n   */\n  cropAndResizeImage(\n    source: HTMLVideoElement,\n    viewFinder: HTMLElement,\n    scaleFactor: number,\n    maxDimension: number\n  ): Promise {\n    let sx = 0;\n    let sy = 0;\n    let sourceWidth = source.videoWidth;\n    let sourceHeight = source.videoHeight;\n\n    if (this.shouldCrop(scaleFactor, source, viewFinder)) {\n      ({ sx, sy, sourceWidth, sourceHeight } = this.crop(source, viewFinder, scaleFactor));\n    }\n\n    let preferredWidth = sourceWidth;\n    let preferredHeight = sourceHeight;\n\n    if (this.shouldDownscale(preferredWidth, preferredHeight, maxDimension)) {\n      ({ preferredWidth, preferredHeight } = this.downscale(preferredWidth, preferredHeight, maxDimension));\n    }\n\n    const canvas = this.document.createElement('canvas');\n    canvas.width = preferredWidth;\n    canvas.height = preferredHeight;\n\n    const renderingContext = canvas.getContext('2d');\n    renderingContext?.drawImage(source, sx, sy, sourceWidth, sourceHeight, 0, 0, preferredWidth, preferredHeight);\n\n    return this.createImageFromCanvas(canvas);\n  }\n\n  /**\n   * Determines if parts of the image should be cropped.\n   *\n   * @param scaleFactor: the factor the user has zoomed into the image\n   * @param source: the webcams video stream\n   * @param viewFinder: the viewfinder from which the image should be cropped\n   * @private\n   */\n  private shouldCrop(scaleFactor: number, source: HTMLVideoElement, viewFinder: HTMLElement) {\n    return scaleFactor > 1 || source !== viewFinder;\n  }\n\n  /**\n   * Crops the part of the image which is visible beneath the viewfinder\n   * @param source: the webcams video stream\n   * @param viewFinder: the viewfinder from which the image should be cropped\n   * @param scaleFactor: the factor the user has zoomed into the image\n   * @private\n   */\n  private crop(\n    source: HTMLVideoElement,\n    viewFinder: HTMLElement,\n    scaleFactor: number\n  ): { sx: number; sy: number; sourceWidth: number; sourceHeight: number } {\n    const videoScale = Math.max(source.videoWidth / source.clientWidth, source.videoHeight / source.clientHeight);\n\n    let sourceWidth = Math.floor((viewFinder.clientWidth * videoScale) / scaleFactor);\n    let sourceHeight = Math.floor((viewFinder.clientHeight * videoScale) / scaleFactor);\n\n    let sx = Math.floor((source.videoWidth - sourceWidth) / 2);\n    let sy = Math.floor((source.videoHeight - sourceHeight) / 2);\n\n    if (sx  {\n    return new Promise((resolve, reject) => {\n      try {\n        canvas.toBlob(\n          (blob) => {\n            if (blob) {\n              resolve({\n                blob,\n                mimeType,\n                width: canvas.width,\n                height: canvas.height,\n              });\n            } else {\n              const errorMessage = 'Canvas returned empty blob';\n              this.logger.error('Image manipulation failed', errorMessage);\n              reject(errorMessage);\n            }\n          },\n          mimeType,\n          quality\n        );\n      } catch (error) {\n        this.logger.error('Image manipulation failed', error);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Determines if an image needs to be resized as it is larger than the max allowed dimension\n   * @param sourceWidth\n   * @param sourceHeight\n   * @param maxDimension\n   * @private\n   */\n  private shouldDownscale(sourceWidth: number, sourceHeight: number, maxDimension: number) {\n    return (sourceWidth > sourceHeight && sourceWidth > maxDimension) || sourceHeight > maxDimension;\n  }\n\n  /**\n   * Calculates the resized width and height of an image\n   * @param sourceWidth\n   * @param sourceHeight\n   * @param maxDimension\n   * @private\n   */\n  private downscale(sourceWidth: number, sourceHeight: number, maxDimension: number) {\n    let preferredWidth = sourceWidth;\n    let preferredHeight = sourceHeight;\n\n    if (preferredWidth > preferredHeight && preferredWidth > maxDimension) {\n      preferredHeight = Math.floor((maxDimension * preferredHeight) / preferredWidth);\n      preferredWidth = maxDimension;\n    } else if (preferredHeight > maxDimension) {\n      preferredWidth = Math.floor((maxDimension * preferredWidth) / preferredHeight);\n      preferredHeight = maxDimension;\n    }\n\n    return { preferredWidth, preferredHeight };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LineOdds.html":{"url":"interfaces/LineOdds.html","title":"interface - LineOdds","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LineOdds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/models/line-odds.ts\n        \n\n\n            \n                Description\n            \n            \n                Data structure used for rendering the lineOdds\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bestOffer\n                                        \n                                \n                                \n                                        \n                                            competitors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            players\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sportsBooks\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bestOffer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bestOffer:         BestOfferViewModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BestOfferViewModel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Best available odds for either side of the live spread\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        competitors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        competitors:         Competitor[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Competitor[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of competitors\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        players\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        players:         Player[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Player[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of players\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sportsBooks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sportsBooks:     SportsBookViewModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SportsBookViewModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of sportBooks\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Competitor, Player } from '@response/typings';\nimport { BestOfferViewModel } from './best-offer-view-model';\nimport { SportsBookViewModel } from './sports-book-view-model';\n\n/**\n * Data structure used for rendering the lineOdds\n */\nexport interface LineOdds {\n  /**\n   * List of competitors\n   */\n  competitors: Competitor[];\n  /**\n   * List of players\n   */\n  players?: Player[];\n\n  /**\n   * List of sportBooks\n   */\n  sportsBooks?: SportsBookViewModel[];\n\n  /**\n   * Best available odds for either side of the live spread\n   */\n  bestOffer?: BestOfferViewModel;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Link.html":{"url":"interfaces/Link.html","title":"interface - Link","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Link\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/link.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            href\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            templated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        href\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        href:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        templated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        templated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Link {\n  href: string;\n  templated?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/logger/logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                    Private\n                                isAboveLogLevel\n                            \n                            \n                                    Private\n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationConfigService: ApplicationConfigService, console: Console)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/logger/logger.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        console\n                                                  \n                                                        \n                                                                    Console\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(...data: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/logger/logger.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(...data: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/logger/logger.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(...data: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/logger/logger.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isAboveLogLevel\n                        \n                    \n                \n            \n            \n                \n                    \n                    isAboveLogLevel(logLevel: LogLevel)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/logger/logger.service.ts:66\n                \n            \n\n\n            \n                \n                    Determines if one logLevel's severity is higher than the one configured in the ApplicationConfig\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logLevel\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        log\n                        \n                    \n                \n            \n            \n                \n                    \n                    log(logLevel: LogLevel, ...data: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/logger/logger.service.ts:41\n                \n            \n\n\n            \n                \n                    Based on the configured logLevel only log levels with the same or higher severity will be logged.\nAll logs will be forwarded to the loggerEventCallback\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logLevel\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(...data: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/logger/logger.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { ApplicationConfigService } from '../config/application-config.service';\nimport { CONSOLE } from '../tokens/console-token';\nimport { LogLevel } from './log-level';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoggerService {\n  constructor(\n    private readonly applicationConfigService: ApplicationConfigService,\n    @Inject(CONSOLE) private readonly console: Console\n  ) {}\n\n  debug(...data: unknown[]): void {\n    this.log(LogLevel.DEBUG, ...data);\n  }\n\n  error(...data: unknown[]): void {\n    this.log(LogLevel.ERROR, ...data);\n  }\n\n  warn(...data: unknown[]): void {\n    this.log(LogLevel.WARN, ...data);\n  }\n\n  info(...data: unknown[]): void {\n    this.log(LogLevel.INFO, ...data);\n  }\n\n  /**\n   * Based on the configured logLevel only log levels with the same or higher severity will be logged.\n   * All logs will be forwarded to the loggerEventCallback\n   *\n   * @param logLevel\n   * @param data\n   * @private\n   */\n  private log(logLevel: LogLevel, ...data: unknown[]): void {\n    if (this.isAboveLogLevel(logLevel)) {\n      switch (logLevel) {\n        case LogLevel.DEBUG:\n          this.console.debug(...data);\n          break;\n        case LogLevel.INFO:\n          this.console.info(...data);\n          break;\n        case LogLevel.WARN:\n          this.console.warn(...data);\n          break;\n        case LogLevel.ERROR:\n          this.console.error(...data);\n          break;\n      }\n    }\n    this.applicationConfigService.emitLoggerEvent(logLevel, data);\n  }\n\n  /**\n   * Determines if one logLevel's severity is higher than the one configured in the ApplicationConfig\n   * @param logLevel\n   * @private\n   */\n  private isAboveLogLevel(logLevel: LogLevel): boolean {\n    return logLevel >= this.applicationConfigService.getLogLevel();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaDeviceStateStore.html":{"url":"injectables/MediaDeviceStateStore.html","title":"injectable - MediaDeviceStateStore","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaDeviceStateStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/states/media-device-state.store.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _state\n                            \n                            \n                                    Private\n                                    Readonly\n                                state$\n                            \n                            \n                                    Readonly\n                                webcamIsReady$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dispatch\n                            \n                            \n                                getState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dispatch\n                        \n                    \n                \n            \n            \n                \ndispatch(state: MediaDeviceState)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/states/media-device-state.store.ts:38\n                \n            \n\n\n            \n                \n                    Trigger an MediaDeviceState change\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                MediaDeviceState\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getState\n                        \n                    \n                \n            \n            \n                \ngetState()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/states/media-device-state.store.ts:30\n                \n            \n\n\n            \n                \n                    Listen to changes on the MediaDeviceState\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/states/media-device-state.store.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._state.asObservable()\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/states/media-device-state.store.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        webcamIsReady$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.getState().pipe(\n    filter((state) => state === MediaDeviceState.DEVICE_CAMERA_READY),\n    mapTo(true)\n  )\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/states/media-device-state.store.ts:22\n                        \n                    \n\n            \n                \n                    Emits when a webcam is ready for interaction\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { filter, mapTo, Observable, ReplaySubject } from 'rxjs';\n\n/**\n * The various MediaDeviceState which are used rendering user feedback\n */\nexport enum MediaDeviceState {\n  DEVICE_INIT = 'DEVICE_INIT',\n  DEVICE_CAMERA_READY = 'DEVICE_CAMERA_READY',\n  DEVICE_NO_PERMISSION = 'DEVICE_NO_PERMISSION',\n  DEVICE_NO_CAMERA = 'DEVICE_NO_CAMERA',\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MediaDeviceStateStore {\n  private readonly _state = new ReplaySubject(1);\n  private readonly state$: Observable = this._state.asObservable();\n\n  /**\n   * Emits when a webcam is ready for interaction\n   */\n  readonly webcamIsReady$: Observable = this.getState().pipe(\n    filter((state) => state === MediaDeviceState.DEVICE_CAMERA_READY),\n    mapTo(true)\n  );\n\n  /**\n   * Listen to changes on the MediaDeviceState\n   */\n  getState(): Observable {\n    return this.state$;\n  }\n\n  /**\n   * Trigger an MediaDeviceState change\n   * @param state\n   */\n  dispatch(state: MediaDeviceState): void {\n    this._state.next(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/notification/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hasVibrationApi\n                            \n                            \n                                notify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(navigator: Navigator, applicationConfigService: ApplicationConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/notification/notification.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigator\n                                                  \n                                                        \n                                                                        Navigator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hasVibrationApi\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasVibrationApi()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/notification/notification.service.ts:27\n                \n            \n\n\n            \n                \n                    Determines if the browserApi supports vibration\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notify\n                        \n                    \n                \n            \n            \n                \nnotify()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/notification/notification.service.ts:17\n                \n            \n\n\n            \n                \n                    Lets the device vibrate.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { ApplicationConfigService } from '../config/application-config.service';\nimport { NAVIGATOR } from '../tokens/navigator-token';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotificationService {\n  constructor(\n    @Inject(NAVIGATOR) private readonly navigator: Navigator,\n    private readonly applicationConfigService: ApplicationConfigService\n  ) {}\n\n  /**\n   * Lets the device vibrate.\n   */\n  notify(): void {\n    if (this.applicationConfigService.isVibrateEnabled() && this.hasVibrationApi()) {\n      this.navigator.vibrate(200);\n    }\n  }\n\n  /**\n   * Determines if the browserApi supports vibration\n   * @private\n   */\n  private hasVibrationApi(): boolean {\n    return typeof this.navigator?.vibrate === 'function';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/NumberFormatPipe.html":{"url":"pipes/NumberFormatPipe.html","title":"pipe - NumberFormatPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  NumberFormatPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/snapodds/src/app/pipes/number-format.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        numberFormat\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number | null)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/pipes/number-format.pipe.ts:11\n                \n            \n\n\n            \n                \n                    Prepend a plus sign for positive numbers to improve readability\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            number | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'numberFormat',\n})\nexport class NumberFormatPipe implements PipeTransform {\n  /**\n   * Prepend a plus sign for positive numbers to improve readability\n   * @param value\n   */\n  transform(value: number | null): string {\n    if (!value) return '';\n    return value >= 0 ? `+${value}` : `${value}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OddsBestOffer.html":{"url":"interfaces/OddsBestOffer.html","title":"interface - OddsBestOffer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OddsBestOffer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/odds/odds-best-offer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        OddsOffer\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            outcomes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        outcomes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outcomes:     OddsBestOfferOutcome[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OddsBestOfferOutcome[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The possible outcomes of the offer to bet on.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { OddsOffer } from './odds-offer';\nimport { OddsBestOfferOutcome } from './outcome';\n\nexport interface OddsBestOffer extends OddsOffer {\n  /**\n   * The possible outcomes of the offer to bet on.\n   */\n  outcomes: OddsBestOfferOutcome[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OddsBestOfferOutcome.html":{"url":"interfaces/OddsBestOfferOutcome.html","title":"interface - OddsBestOfferOutcome","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OddsBestOfferOutcome\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/odds/outcome.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an odds for the best outcome of the bet.\n\n            \n\n            \n                Extends\n            \n            \n                        OddsOfferOutcome\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sportsBook\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sportsBook\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sportsBook:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the sports book.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { OddsOfferOutcome } from './odds-offer-outcome';\n\n/**\n * Represents an odds for the best outcome of the bet.\n */\nexport interface OddsBestOfferOutcome extends OddsOfferOutcome {\n  /**\n   * The name of the sports book.\n   */\n  sportsBook: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OddsComponent.html":{"url":"components/OddsComponent.html","title":"component - OddsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OddsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/odds/odds.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-odds\n            \n\n            \n                styleUrls\n                ./odds.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./odds.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lineOdds\n                            \n                            \n                                loading\n                            \n                            \n                                noResults\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadLineOdds\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Private\n                                onLineOddsLoaded\n                            \n                            \n                                    Private\n                                onLineOddsLoadFailed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tvSearchResultEntry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeOddsView\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(oddsService: OddsService)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/app/odds/odds.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        oddsService\n                                                  \n                                                        \n                                                                        OddsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        tvSearchResultEntry\n                    \n                \n                \n                    \n                        Type :     TvSearchResultEntry | null\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/odds/odds.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeOddsView\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/odds/odds.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadLineOdds\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLineOdds(sportEventId: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/odds/odds.component.ts:40\n                \n            \n\n\n            \n                \n                    Loads the lineOdds for a given sportEvent.\nIf sportBooks are found, then lineOdds will be assigned.\nif no sportBooks are found or if the call fails, an error message will be shown.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sportEventId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : The identifier of the sportEvent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/odds/odds.component.ts:26\n                \n            \n\n\n            \n                \n                    Loads the lineOdds when the tvSearchResultEntry has been changed.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : SimpleChanges\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onLineOddsLoaded\n                        \n                    \n                \n            \n            \n                \n                    \n                    onLineOddsLoaded(lineOdds: LineOdds)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/odds/odds.component.ts:62\n                \n            \n\n\n            \n                \n                    Callback when loading of lineOdds was successful\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lineOdds\n                                    \n                                                LineOdds\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : The lineOdds to assign to the template\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onLineOddsLoadFailed\n                        \n                    \n                \n            \n            \n                \n                    \n                    onLineOddsLoadFailed()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/odds/odds.component.ts:72\n                \n            \n\n\n            \n                \n                    Callback when loading of lineOdds failed.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lineOdds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LineOdds | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/odds/odds.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/odds/odds.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noResults\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/odds/odds.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, Output, SimpleChange } from '@angular/core';\nimport { TvSearchResultEntry } from '@response/typings';\nimport { LineOdds } from '../../models/line-odds';\nimport { OddsService } from '../../services/api/odds.service';\n\n@Component({\n  selector: 'snapodds-odds',\n  templateUrl: './odds.component.html',\n  styleUrls: ['./odds.component.scss'],\n})\nexport class OddsComponent implements OnChanges {\n  lineOdds: LineOdds | null = null;\n  loading = false;\n  noResults = false;\n\n  @Input() tvSearchResultEntry?: TvSearchResultEntry | null;\n  @Output() closeOddsView: EventEmitter = new EventEmitter();\n\n  constructor(private readonly oddsService: OddsService) {}\n\n  /**\n   * Loads the lineOdds when the tvSearchResultEntry has been changed.\n   *\n   * @param changes: SimpleChanges\n   */\n  ngOnChanges(changes: { tvSearchResultEntry: SimpleChange }): void {\n    if (changes.tvSearchResultEntry.currentValue) {\n      this.loadLineOdds(changes.tvSearchResultEntry.currentValue.sportEvent.id);\n    }\n  }\n\n  /**\n   * Loads the lineOdds for a given sportEvent.\n   * If sportBooks are found, then lineOdds will be assigned.\n   * if no sportBooks are found or if the call fails, an error message will be shown.\n   *\n   * @param sportEventId: The identifier of the sportEvent\n   * @private\n   */\n  private loadLineOdds(sportEventId: number): void {\n    this.loading = true;\n    this.noResults = false;\n\n    this.oddsService.gameLineOddsBySportEventId(sportEventId).subscribe({\n      next: (lineOdds) => {\n        if (lineOdds.sportsBooks == undefined || lineOdds.sportsBooks.length === 0) {\n          this.onLineOddsLoadFailed();\n        } else {\n          this.onLineOddsLoaded(lineOdds);\n        }\n      },\n      error: () => this.onLineOddsLoadFailed(),\n    });\n  }\n\n  /**\n   * Callback when loading of lineOdds was successful\n   *\n   * @param lineOdds: The lineOdds to assign to the template\n   * @private\n   */\n  private onLineOddsLoaded(lineOdds: LineOdds): void {\n    this.lineOdds = lineOdds;\n    this.loading = false;\n  }\n\n  /**\n   * Callback when loading of lineOdds failed.\n   *\n   * @private\n   */\n  private onLineOddsLoadFailed(): void {\n    this.lineOdds = null;\n    this.noResults = true;\n    this.loading = false;\n  }\n}\n\n    \n\n    \n        \n  {{ 'Snapodds_Title_Odds' | translate }}\n  \n    \n      {{ 'Snapodds_Title_Snap_TV' | translate }}\n    \n  \n\n\n\n  \n    {{ result.sportEvent.tournament }}\n    {{ result.tvChannel.name }} since {{ result.sportEvent.startTime | date: 'hh:mm a' }}\n  \n\n  \n    \n      {{ competitor.name }}\n      \n    \n  \n\n  \n    \n    {{ 'Snapodds_Lines_Loading' | translate }}\n  \n\n  \n    {{ 'Snapodds_Lines_No_Results' | translate }}\n  \n\n  \n    \n      \n        {{ bestOffer.name }}\n\n        \n          Best Spread\n          Best Money\n          Best Total\n        \n      \n\n      \n    \n\n    \n      \n        {{ sportBook.name }}\n\n        \n          Spread\n          Money\n          Total\n        \n      \n\n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./odds.component.scss\n                \n                @use 'tools';\n@use 'settings';\n\n$box--width: 4rem;\n\n:host {\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  button {\n    @include tools.button-reset();\n    font-size: settings.$font-base;\n  }\n\n  snapodds-content {\n    background-color: settings.$color-accent;\n    justify-content: flex-start;\n  }\n\n  .c-feedback {\n    align-items: center;\n    background-color: settings.$color-background;\n    display: flex;\n    font-size: settings.$font-sm;\n    justify-content: center;\n    padding: settings.$spacing-base;\n\n    &__spinner {\n      line-height: 1;\n      margin-right: settings.$spacing-sm;\n    }\n  }\n\n  .c-sport-event {\n    background-color: settings.$color-background;\n    display: flex;\n    font-size: settings.$font-sm;\n    font-weight: 400;\n    justify-content: space-between;\n    margin: 0;\n    padding: settings.$spacing-base;\n\n    @include tools.media-tiny--portrait {\n      padding: settings.$spacing-sm;\n    }\n\n    &__tournament {\n      font-weight: 700;\n    }\n  }\n\n  .c-competitors {\n    background-color: settings.$color-primary;\n    box-sizing: border-box;\n    color: settings.$color-text-focus;\n    display: flex;\n    flex-direction: column;\n    font-size: settings.$font-base;\n    padding: settings.$spacing-base;\n    text-align: center;\n\n    &__separator {\n      border-bottom: 1px solid rgba(255, 255, 255, 0.4);\n      display: inline-block;\n      margin: 0.5rem 0;\n    }\n  }\n\n  .c-game {\n    border-bottom: 2px solid settings.$color-accent;\n    display: flex;\n    flex-direction: column;\n    padding: settings.$spacing-sm settings.$spacing-base;\n\n    @include tools.media-tiny--portrait {\n      padding: settings.$spacing-sm;\n    }\n\n    &__link {\n      color: settings.$color-text;\n      text-decoration: none;\n    }\n\n    &--best-offer {\n      background-color: #0085cd;\n      color: #fff;\n    }\n  }\n\n  .c-game-container {\n    background-color: settings.$color-background;\n    margin-top: 0.1rem;\n  }\n\n  .c-game-header {\n    display: flex;\n    justify-content: space-between;\n\n    &__sportbook {\n      font-size: settings.$font-base;\n      font-weight: 700;\n\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    &__lines {\n      align-items: flex-end;\n      display: flex;\n    }\n\n    &__line {\n      box-sizing: border-box;\n      display: flex;\n\n      font-size: settings.$font-xs;\n      font-weight: 400;\n      justify-content: flex-end;\n\n      margin: 0.2rem;\n      width: $box--width;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'Snapodds_Title_Odds\\' | translate }}            {{ \\'Snapodds_Title_Snap_TV\\' | translate }}            {{ result.sportEvent.tournament }}    {{ result.tvChannel.name }} since {{ result.sportEvent.startTime | date: \\'hh:mm a\\' }}              {{ competitor.name }}                      {{ \\'Snapodds_Lines_Loading\\' | translate }}        {{ \\'Snapodds_Lines_No_Results\\' | translate }}                      {{ bestOffer.name }}                  Best Spread          Best Money          Best Total                                          {{ sportBook.name }}                  Spread          Money          Total                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'OddsLineComponent', 'selector': 'snapodds-odds-line'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OddsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OddsLineComponent.html":{"url":"components/OddsLineComponent.html","title":"component - OddsLineComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OddsLineComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/odds-line/odds-line.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-odds-line\n            \n\n            \n                styleUrls\n                ./odds-line.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./odds-line.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openOutcomeRedirectUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                competitorName\n                            \n                            \n                                line\n                            \n                            \n                                lineIndex\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(window: Window)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/app/odds-line/odds-line.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        window\n                                                  \n                                                        \n                                                                    Window\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        competitorName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/odds-line/odds-line.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        line\n                    \n                \n                \n                    \n                        Type :     SportsBookLineViewModel | BestOfferLineViewModel\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/odds-line/odds-line.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lineIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/odds-line/odds-line.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openOutcomeRedirectUrl\n                        \n                    \n                \n            \n            \n                \nopenOutcomeRedirectUrl($event: MouseEvent, redirectUrl?: string | null)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/odds-line/odds-line.component.ts:24\n                \n            \n\n\n            \n                \n                    Opens the given URL in a new browser tab.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : MouseEvent\n\n                                    \n                                \n                                \n                                    redirectUrl\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        : The url that should be opened in a new tab\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, Input } from '@angular/core';\nimport { BestOfferLineViewModel } from '../../models/best-offer-line-view-model';\nimport { SportsBookLineViewModel } from '../../models/sports-book-line-view-model';\nimport { WINDOW } from '../../services/tokens/window-token';\n\n@Component({\n  selector: 'snapodds-odds-line',\n  templateUrl: './odds-line.component.html',\n  styleUrls: ['./odds-line.component.scss'],\n})\nexport class OddsLineComponent {\n  @Input() line!: SportsBookLineViewModel | BestOfferLineViewModel;\n  @Input() lineIndex!: number;\n  @Input() competitorName!: string;\n\n  constructor(@Inject(WINDOW) private readonly window: Window) {}\n\n  /**\n   * Opens the given URL in a new browser tab.\n   *\n   * @param $event: MouseEvent\n   * @param redirectUrl: The url that should be opened in a new tab\n   */\n  openOutcomeRedirectUrl($event: MouseEvent, redirectUrl?: string | null): void {\n    if (redirectUrl) {\n      $event.preventDefault();\n      this.window.open(redirectUrl, '_blank');\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{ competitorName }}\n  \n\n  \n    \n      \n        {{ sportsBookName }}\n      \n      {{ line.spread | numberFormat }}\n      {{ line.spreadOdds | numberFormat }}\n    \n    \n      \n        {{ sportsBookName }}\n      \n      \n      {{ line.moneyline | numberFormat }}\n    \n    \n      \n        {{ sportsBookName }}\n      \n      \n        O\n        U\n        {{ line.overUnder }}\n      \n      {{ line.overUnderOdds | numberFormat }}\n    \n  \n\n\n  \n\n  \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./odds-line.component.scss\n                \n                @use 'tools';\n@use 'settings';\n\n$box--width: 4rem;\n\n:host {\n  .c-game-line {\n    display: flex;\n    justify-content: space-between;\n\n    &__competitor {\n      align-items: center;\n      display: flex;\n\n      font-size: settings.$font-sm;\n      font-weight: 700;\n      margin-right: 0.6rem;\n\n      &--above {\n        align-items: flex-end;\n      }\n\n      &--below {\n        align-items: flex-start;\n      }\n\n      &--separator {\n        border-bottom: 1px solid settings.$color-accent;\n        flex: 1;\n        margin-bottom: 0.4rem;\n        margin-top: 0.4rem;\n      }\n    }\n\n    &__boxes {\n      display: flex;\n    }\n\n    &__box {\n      align-items: stretch;\n\n      background-color: settings.$color-accent;\n      box-sizing: border-box;\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n      margin: 0.2rem;\n      padding: 0.3rem;\n      text-align: right;\n      width: $box--width;\n\n      &--clickable {\n        cursor: pointer;\n      }\n\n      &--hidden {\n        visibility: hidden;\n      }\n\n      &--separator {\n        background-color: transparent;\n        border-bottom: 1px solid settings.$color-accent;\n        margin: 0.4rem 0.2rem;\n        padding: 0 0.3rem;\n      }\n    }\n\n    &__target {\n      color: settings.$color-text;\n      font-size: settings.$font-xs;\n      font-weight: 400;\n      min-height: 0.9rem;\n    }\n\n    &__odds {\n      color: settings.$color-text;\n      font-size: settings.$font-base;\n      font-weight: 700;\n    }\n\n    &__sport-books-name {\n      background-color: #002133;\n      color: #fff;\n      font-size: settings.$font-xxs;\n      font-weight: 400;\n      margin: -0.3rem;\n      margin-bottom: 0.3rem;\n      padding: 0.1rem;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ competitorName }}                      {{ sportsBookName }}            {{ line.spread | numberFormat }}      {{ line.spreadOdds | numberFormat }}                      {{ sportsBookName }}                  {{ line.moneyline | numberFormat }}                      {{ sportsBookName }}                    O        U        {{ line.overUnder }}            {{ line.overUnderOdds | numberFormat }}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'OddsLineComponent', 'selector': 'snapodds-odds-line'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OddsLineComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OddsOffer.html":{"url":"interfaces/OddsOffer.html","title":"interface - OddsOffer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OddsOffer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/odds/odds-offer.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a single odds offer.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _links\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            outcomes\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _links:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label of the offer.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outcomes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outcomes:     OddsOfferOutcome[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OddsOfferOutcome[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The possible outcomes of the offer to bet on.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"SPREAD\" | \"MONEYLINE\" | \"OVER_UNDER\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"SPREAD\" | \"MONEYLINE\" | \"OVER_UNDER\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of the offer.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Link } from '../link';\nimport { OddsOfferOutcome } from './odds-offer-outcome';\n\n/**\n * Represents a single odds offer.\n */\nexport interface OddsOffer {\n  /**\n   * The type of the offer.\n   */\n  type: 'SPREAD' | 'MONEYLINE' | 'OVER_UNDER';\n\n  /**\n   * The label of the offer.\n   */\n  label?: string;\n\n  /**\n   * The possible outcomes of the offer to bet on.\n   */\n  outcomes: OddsOfferOutcome[];\n\n  _links?: {\n    redirect?: Link;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OddsOfferOutcome.html":{"url":"interfaces/OddsOfferOutcome.html","title":"interface - OddsOfferOutcome","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OddsOfferOutcome\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/odds/odds-offer-outcome.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an odds for the outcome of the bet.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _links\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            competitorId\n                                        \n                                \n                                \n                                        \n                                            odds\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            playerId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _links:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        competitorId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        competitorId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The id of the competitor to bet on.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        odds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        odds:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The odds for the given type of the outcome.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playerId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The id of the player to bet on.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The target value for spread or over/under bets.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"WIN\" | \"OVER\" | \"UNDER\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"WIN\" | \"OVER\" | \"UNDER\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of the outcome.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Link } from '../link';\n\n/**\n * Represents an odds for the outcome of the bet.\n */\nexport interface OddsOfferOutcome {\n  /**\n   * The type of the outcome.\n   */\n  type: 'WIN' | 'OVER' | 'UNDER';\n\n  /**\n   * The target value for spread or over/under bets.\n   */\n  target?: number | null;\n\n  /**\n   * The odds for the given type of the outcome.\n   */\n  odds: number;\n\n  /**\n   * The id of the competitor to bet on.\n   */\n  competitorId?: number;\n\n  /**\n   * The id of the player to bet on.\n   */\n  playerId?: number;\n\n  _links?: {\n    redirect?: Link;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OddsResponse.html":{"url":"interfaces/OddsResponse.html","title":"interface - OddsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OddsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/odds/odds-response.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an odds available for the corresponding sport event.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _links\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bestOffers\n                                        \n                                \n                                \n                                        \n                                            competitors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            players\n                                        \n                                \n                                \n                                        \n                                            sportsBooks\n                                        \n                                \n                                \n                                        \n                                            startTime\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _links:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bestOffers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bestOffers:         OddsBestOffer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OddsBestOffer[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The best offers for the sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        competitors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        competitors:         Competitor[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Competitor[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The competitors of the sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        players\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        players:         Player[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Player[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The players of the sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sportsBooks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sportsBooks:         SportsBook[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SportsBook[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The odds available for the sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The start time of the sport event.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Link } from '../link';\nimport { Competitor } from './competitor';\nimport { OddsBestOffer } from './odds-best-offer';\nimport { Player } from './player';\nimport { SportsBook } from './sports-book';\n\n/**\n * Represents an odds available for the corresponding sport event.\n */\nexport interface OddsResponse {\n  /**\n   * The start time of the sport event.\n   */\n  startTime: string;\n\n  /**\n   * The competitors of the sport event.\n   */\n  competitors: Competitor[];\n\n  /**\n   * The players of the sport event.\n   */\n  players?: Player[];\n\n  /**\n   * The odds available for the sport event.\n   */\n  sportsBooks: SportsBook[];\n\n  /**\n   * The best offers for the sport event.\n   */\n  bestOffers?: OddsBestOffer[];\n\n  _links?: {\n    self?: Link;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OddsService.html":{"url":"injectables/OddsService.html","title":"injectable - OddsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OddsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/api/odds.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                convertToAmericanOdds\n                            \n                            \n                                    Private\n                                findCompetitorIndexById\n                            \n                            \n                                gameLineOddsBySportEventId\n                            \n                            \n                                    Private\n                                mapBestOfferToViewModel\n                            \n                            \n                                    Private\n                                mapLineOddsResponse\n                            \n                            \n                                    Private\n                                mapSportsBooksNames\n                            \n                            \n                                    Private\n                                mapSportsBooksToViewModel\n                            \n                            \n                                    Private\n                                mapToOfferLines\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    baseUrl\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService, applicationConfigService: ApplicationConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/api/odds.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        convertToAmericanOdds\n                        \n                    \n                \n            \n            \n                \n                    \n                    convertToAmericanOdds(odds: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/odds.service.ts:219\n                \n            \n\n\n            \n                \n                    Convert the odds to be displayed in american style\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    odds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     null | number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        findCompetitorIndexById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findCompetitorIndexById(competitors: Competitor[], competitorId: number | undefined)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/odds.service.ts:210\n                \n            \n\n\n            \n                \n                    Return the index of the competitor used to find the position in the array response\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    competitors\n                                    \n                                                Competitor[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    competitorId\n                                    \n                                            number | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameLineOddsBySportEventId\n                        \n                    \n                \n            \n            \n                \ngameLineOddsBySportEventId(sportEventId: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/odds.service.ts:40\n                \n            \n\n\n            \n                \n                    Search for the LineOdds by a sportEventId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sportEventId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : The identifier of the sportEvent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        mapBestOfferToViewModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapBestOfferToViewModel(offers: OddsBestOffer[] | undefined, competitors: Competitor[])\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/odds.service.ts:107\n                \n            \n\n\n            \n                \n                    Map the BestOfferResponse from the API into a flatter data structure optimized for rendering\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offers\n                                    \n                                                OddsBestOffer[] | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    competitors\n                                    \n                                                Competitor[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         undefined | BestOfferViewModel\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        mapLineOddsResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapLineOddsResponse(lineOdds: OddsResponse)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/odds.service.ts:56\n                \n            \n\n\n            \n                \n                    Converts the LineOdds into a better data structure for rendering it\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lineOdds\n                                    \n                                                OddsResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LineOdds\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        mapSportsBooksNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapSportsBooksNames(outcome: OddsBestOfferOutcome, competitors: Competitor[], offer: OddsBestOffer, viewModel: BestOfferViewModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/odds.service.ts:184\n                \n            \n\n\n            \n                \n                    Extract the sportsBooksName from the given outcomes\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outcome\n                                    \n                                                OddsBestOfferOutcome\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    competitors\n                                    \n                                                Competitor[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    offer\n                                    \n                                                OddsBestOffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    viewModel\n                                    \n                                                BestOfferViewModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        mapSportsBooksToViewModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapSportsBooksToViewModel(sportsBooks: SportsBook[], competitors: Competitor[])\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/odds.service.ts:75\n                \n            \n\n\n            \n                \n                    Map the SportsBooksResponse from the API into a flatter data structure optimized for rendering\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sportsBooks\n                                    \n                                                SportsBook[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    competitors\n                                    \n                                                Competitor[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SportsBookViewModel[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        mapToOfferLines\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToOfferLines(outcome: OddsOfferOutcome, competitors: Competitor[], offer: OddsOffer, viewModel: SportsBookViewModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/odds.service.ts:136\n                \n            \n\n\n            \n                \n                    Extract the lines from the given outcomes\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outcome\n                                    \n                                                OddsOfferOutcome\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    competitors\n                                    \n                                                Competitor[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    offer\n                                    \n                                                OddsOffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    viewModel\n                                    \n                                                SportsBookViewModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        baseUrl\n                    \n                \n\n                \n                    \n                        getbaseUrl()\n                    \n                \n                            \n                                \n                                    Defined in apps/snapodds/src/services/api/odds.service.ts:32\n                                \n                            \n                    \n                        \n                                Retrieve the apiUrl from the applicationConfig\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  Competitor,\n  OddsBestOffer,\n  OddsBestOfferOutcome,\n  OddsOffer,\n  OddsOfferOutcome,\n  OddsResponse,\n  SportsBook,\n} from '@response/typings';\nimport { map, Observable, switchMap } from 'rxjs';\nimport { BestOfferViewModel } from '../../models/best-offer-view-model';\nimport { LineOdds } from '../../models/line-odds';\nimport { SportsBookViewModel } from '../../models/sports-book-view-model';\nimport { AuthService } from '../auth/auth.service';\nimport { ApplicationConfigService } from '../config/application-config.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OddsService {\n  constructor(\n    private readonly http: HttpClient,\n    private readonly authService: AuthService,\n    private readonly applicationConfigService: ApplicationConfigService\n  ) {}\n\n  /**\n   * Retrieve the apiUrl from the applicationConfig\n   */\n  get baseUrl() {\n    return this.applicationConfigService.getApiUrl();\n  }\n\n  /**\n   * Search for the LineOdds by a sportEventId\n   * @param sportEventId: The identifier of the sportEvent\n   */\n  gameLineOddsBySportEventId(sportEventId: number): Observable {\n    return this.authService.requestAccessToken().pipe(\n      switchMap((accessToken) =>\n        this.http.get(`${this.baseUrl}/sport/events/${sportEventId}/odds/lines`, {\n          headers: new HttpHeaders({ Authorization: `Bearer ${accessToken}` }),\n        })\n      ),\n      map((response) => this.mapLineOddsResponse(response))\n    );\n  }\n\n  /**\n   * Converts the LineOdds into a better data structure for rendering it\n   * @param lineOdds\n   * @private\n   */\n  private mapLineOddsResponse(lineOdds: OddsResponse): LineOdds {\n    const { competitors, players = [], sportsBooks, bestOffers } = lineOdds;\n\n    if (competitors?.length  sportsBook.offers)\n      .map((sportsBook) => {\n        const target: SportsBookViewModel = {\n          name: sportsBook.name,\n          lines: competitors.map(() => ({} as never)),\n          redirectUrl: sportsBook._links?.redirect?.href,\n        };\n\n        sportsBook.offers\n          .filter((offer) => offer.outcomes)\n          .forEach((offer) =>\n            offer.outcomes.forEach((outcome) => this.mapToOfferLines(outcome, competitors, offer, target))\n          );\n\n        if (target.lines.length > 0) {\n          sportsBookViewModels.push(target);\n        }\n      });\n\n    return sportsBookViewModels;\n  }\n\n  /**\n   * Map the BestOfferResponse from the API into a flatter data structure optimized for rendering\n   * @param offers\n   * @param competitors\n   * @private\n   */\n  private mapBestOfferToViewModel(\n    offers: OddsBestOffer[] | undefined,\n    competitors: Competitor[]\n  ): undefined | BestOfferViewModel {\n    if (offers === undefined) return undefined;\n\n    const bestOfferViewModel: BestOfferViewModel = {\n      name: 'Best of Odds',\n      lines: competitors.map(() => ({} as never)),\n    };\n\n    offers.forEach((offer) => {\n      offer.outcomes.forEach((outcome) => {\n        this.mapToOfferLines(outcome, competitors, offer, bestOfferViewModel);\n        this.mapSportsBooksNames(outcome, competitors, offer, bestOfferViewModel);\n      });\n    });\n\n    return bestOfferViewModel;\n  }\n\n  /**\n   * Extract the lines from the given outcomes\n   * @param outcome\n   * @param competitors\n   * @param offer\n   * @param viewModel\n   * @private\n   */\n  private mapToOfferLines(\n    outcome: OddsOfferOutcome,\n    competitors: Competitor[],\n    offer: OddsOffer,\n    viewModel: SportsBookViewModel\n  ) {\n    const competitorIndex = this.findCompetitorIndexById(competitors, outcome.competitorId);\n    const hasCompetitor = competitorIndex > -1;\n    const redirectUrl = outcome._links?.redirect?.href;\n\n    if (offer.type === 'MONEYLINE' && outcome.type === 'WIN' && hasCompetitor) {\n      viewModel.lines[competitorIndex].moneyline = this.convertToAmericanOdds(outcome.odds);\n\n      if (redirectUrl) {\n        viewModel.lines[competitorIndex].moneylineUrl = redirectUrl;\n      }\n    } else if (offer.type === 'OVER_UNDER' && outcome.type === 'OVER') {\n      viewModel.lines[0].overUnder = outcome.target ?? null;\n      viewModel.lines[0].overUnderOdds = this.convertToAmericanOdds(outcome.odds);\n\n      if (redirectUrl) {\n        viewModel.lines[0].overUnderUrl = redirectUrl;\n      }\n    } else if (offer.type === 'OVER_UNDER' && outcome.type === 'UNDER') {\n      viewModel.lines[1].overUnder = outcome.target ?? null;\n      viewModel.lines[1].overUnderOdds = this.convertToAmericanOdds(outcome.odds);\n\n      if (redirectUrl) {\n        viewModel.lines[1].overUnderUrl = redirectUrl;\n      }\n    } else if (offer.type === 'SPREAD' && outcome.type === 'WIN' && hasCompetitor) {\n      viewModel.lines[competitorIndex].spread = outcome.target ?? null;\n      viewModel.lines[competitorIndex].spreadOdds = this.convertToAmericanOdds(outcome.odds);\n\n      if (redirectUrl) {\n        viewModel.lines[competitorIndex].spreadUrl = redirectUrl;\n      }\n    }\n  }\n\n  /**\n   * Extract the sportsBooksName from the given outcomes\n   * @param outcome\n   * @param competitors\n   * @param offer\n   * @param viewModel\n   * @private\n   */\n  private mapSportsBooksNames(\n    outcome: OddsBestOfferOutcome,\n    competitors: Competitor[],\n    offer: OddsBestOffer,\n    viewModel: BestOfferViewModel\n  ) {\n    const competitorIndex = this.findCompetitorIndexById(competitors, outcome.competitorId);\n    const hasCompetitor = competitorIndex > -1;\n\n    if (offer.type === 'MONEYLINE' && outcome.type === 'WIN' && hasCompetitor) {\n      viewModel.lines[competitorIndex].moneySportsBookName = outcome.sportsBook;\n    } else if (offer.type === 'OVER_UNDER' && outcome.type === 'OVER') {\n      viewModel.lines[0].overUnderSportsBookName = outcome.sportsBook;\n    } else if (offer.type === 'OVER_UNDER' && outcome.type === 'UNDER') {\n      viewModel.lines[1].overUnderSportsBookName = outcome.sportsBook;\n    } else if (offer.type === 'SPREAD' && outcome.type === 'WIN' && hasCompetitor) {\n      viewModel.lines[competitorIndex].spreadSportsBookName = outcome.sportsBook;\n    }\n  }\n\n  /**\n   * Return the index of the competitor used to find the position in the array response\n   * @param competitors\n   * @param competitorId\n   * @private\n   */\n  private findCompetitorIndexById(competitors: Competitor[], competitorId: number | undefined): number {\n    return competitors.findIndex((competitor) => competitor.id === competitorId);\n  }\n\n  /**\n   * Convert the odds to be displayed in american style\n   * @param odds\n   * @private\n   */\n  private convertToAmericanOdds(odds: number): null | number {\n    if (!odds || odds \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Player.html":{"url":"interfaces/Player.html","title":"interface - Player","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Player\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/odds/player.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a player of the game.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the player.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the player.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Player {\n  /**\n   * The id of the player.\n   */\n  id: number;\n\n  /**\n   * The name of the player.\n   */\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Point2d.html":{"url":"interfaces/Point2d.html","title":"interface - Point2d","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Point2d\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/tv-search/point2d.ts\n        \n\n\n            \n                Description\n            \n            \n                A point on 2D plane.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The X coordinate value.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The Y coordinate value.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Point2d {\n  /**\n   * The X coordinate value.\n   */\n  x: number;\n\n  /**\n   * The Y coordinate value.\n   */\n  y: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Quadrangle2d.html":{"url":"interfaces/Quadrangle2d.html","title":"interface - Quadrangle2d","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Quadrangle2d\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/tv-search/quadrangle2d.ts\n        \n\n\n            \n                Description\n            \n            \n                A quadrangle on 2D plane.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            a\n                                        \n                                \n                                \n                                        \n                                            b\n                                        \n                                \n                                \n                                        \n                                            c\n                                        \n                                \n                                \n                                        \n                                            d\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        a\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        a:         Point2d\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Point2d\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The first point of this quadrangle.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        b\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        b:         Point2d\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Point2d\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The second point of this quadrangle.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        c\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        c:         Point2d\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Point2d\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The third point of this quadrangle.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        d\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        d:         Point2d\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Point2d\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The fourth point of this quadrangle.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Point2d } from './point2d';\n\n/**\n * A quadrangle on 2D plane.\n */\nexport interface Quadrangle2d {\n  /**\n   * The first point of this quadrangle.\n   */\n  a: Point2d;\n\n  /**\n   * The second point of this quadrangle.\n   */\n  b: Point2d;\n\n  /**\n   * The third point of this quadrangle.\n   */\n  c: Point2d;\n\n  /**\n   * The fourth point of this quadrangle.\n   */\n  d: Point2d;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnapComponent.html":{"url":"components/SnapComponent.html","title":"component - SnapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SnapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/snap/snap.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-snap\n            \n\n            \n                styleUrls\n                ./snap.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./snap.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appState\n                            \n                            \n                                    Private\n                                    Readonly\n                                destroyed$\n                            \n                            \n                                mediaDeviceState\n                            \n                            \n                                    Private\n                                    Readonly\n                                snapshot$\n                            \n                            \n                                webcamComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Private\n                                handleSuccess\n                            \n                            \n                                    Private\n                                loadSportEvents\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                registerAutoSnap\n                            \n                            \n                                reloadPage\n                            \n                            \n                                showHelpPage\n                            \n                            \n                                    Private\n                                startAutoSnapWithDelay\n                            \n                            \n                                    Private\n                                subscribeToStateStores\n                            \n                            \n                                takeSnapshot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, applicationConfigService: ApplicationConfigService, analyticsService: GoogleAnalyticsService, snapOddsFacade: SnapOddsFacade, appStateStore: AppStateStore, mediaDeviceStateStore: MediaDeviceStateStore, notificationService: NotificationService, location: Location)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/app/snap/snap.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        analyticsService\n                                                  \n                                                        \n                                                                        GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snapOddsFacade\n                                                  \n                                                        \n                                                                        SnapOddsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appStateStore\n                                                  \n                                                        \n                                                                        AppStateStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaDeviceStateStore\n                                                  \n                                                        \n                                                                        MediaDeviceStateStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:146\n                \n            \n\n\n            \n                \n                    Depending on the error, either indicates that not SportEvents have been found by the given snapshot\nor that the request could not be processed due to technical errors.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleSuccess\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleSuccess(sportEventsResponse: TvSearchResult)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:135\n                \n            \n\n\n            \n                \n                    Emit the best match (first entry in the response) on the ApplicationConfigService,\nin order to notify other services about a successful snap.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sportEventsResponse\n                                    \n                                                TvSearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadSportEvents\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadSportEvents(autoSnap)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:159\n                \n            \n\n\n            \n                \n                    Retrieves a snapshot from the webcam and then call the respective method to lookup the SportEvent.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    autoSnap\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        : Depending on the mode used to perform the snapshot different methods are executed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:79\n                \n            \n\n\n            \n                \n                    Clean up existing subscriptions.\nTriggers the snap view has been closed analytics event.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:48\n                \n            \n\n\n            \n                \n                    Initializes the component.\nWill register autoSnap if configured.\nSets the applicationState to SNAP_READY.\nTriggers the snap view opened analytics event.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        registerAutoSnap\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerAutoSnap()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:102\n                \n            \n\n\n            \n                \n                    When the camera is ready it starts to periodically take snapshots and tries to load SportEvents\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reloadPage\n                        \n                    \n                \n            \n            \n                \nreloadPage()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:184\n                \n            \n\n\n            \n                \n                    Reload the webbrowser\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHelpPage\n                        \n                    \n                \n            \n            \n                \nshowHelpPage()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:177\n                \n            \n\n\n            \n                \n                    Navigate to the Help Page by setting the corresponding AppState\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        startAutoSnapWithDelay\n                        \n                    \n                \n            \n            \n                \n                    \n                    startAutoSnapWithDelay()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:118\n                \n            \n\n\n            \n                \n                    The first delay is a bit longer in order for the user to manage to align the camera correctly.\nAfterwards snapshots from the webcam will be taken periodically and SportEvents will be tried to be loaded.\nStops only if the view is closed or the user has taken a snapshot by pressing the snapshot button.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        subscribeToStateStores\n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribeToStateStores()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:63\n                \n            \n\n\n            \n                \n                    Subscribes to updates from the AppStateStore and MediaDeviceStateStore\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        takeSnapshot\n                        \n                    \n                \n            \n            \n                \ntakeSnapshot()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/snap/snap.component.ts:89\n                \n            \n\n\n            \n                \n                    Notifies other subscriptions that a new snapshot is performed.\nLoad the SportEvents based on the snapshot\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppState | undefined\n\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/snap/snap.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        destroyed$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/snap/snap.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaDeviceState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaDeviceState | undefined\n\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/snap/snap.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        snapshot$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/snap/snap.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        webcamComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WebcamComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(WebcamComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/snap/snap.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { TvSearchResult } from '@response/typings';\nimport { defer, delay, mergeMap, Observable, race, retryWhen, Subject, switchMap, take, takeUntil, timer } from 'rxjs';\nimport { TvSearchNoResultError } from '../../services/api/api-errors';\nimport { ApplicationConfigService } from '../../services/config/application-config.service';\nimport { ManipulatedImage } from '../../services/image-manipulation/manipulated-image';\nimport { LoggerService } from '../../services/logger/logger.service';\nimport { NotificationService } from '../../services/notification/notification.service';\nimport { SnapOddsFacade } from '../../services/snap-odds/snap-odds-facade.service';\nimport { LOCATION } from '../../services/tokens/location-token';\nimport { GoogleAnalyticsService } from '../../services/tracking/google-analytics.service';\nimport { AppState, AppStateStore } from '../../states/app-state.store';\nimport { MediaDeviceState, MediaDeviceStateStore } from '../../states/media-device-state.store';\nimport { WebcamComponent } from '../webcam/webcam.component';\n\n@Component({\n  selector: 'snapodds-snap',\n  templateUrl: './snap.component.html',\n  styleUrls: ['./snap.component.scss'],\n})\nexport class SnapComponent implements OnInit, OnDestroy {\n  @ViewChild(WebcamComponent) webcamComponent!: WebcamComponent;\n\n  appState: AppState | undefined;\n  mediaDeviceState: MediaDeviceState | undefined;\n\n  private readonly destroyed$ = new Subject();\n  private readonly snapshot$ = new Subject();\n\n  constructor(\n    private readonly logger: LoggerService,\n    private readonly applicationConfigService: ApplicationConfigService,\n    private readonly analyticsService: GoogleAnalyticsService,\n    private readonly snapOddsFacade: SnapOddsFacade,\n    private readonly appStateStore: AppStateStore,\n    private readonly mediaDeviceStateStore: MediaDeviceStateStore,\n    private readonly notificationService: NotificationService,\n    @Inject(LOCATION) private readonly location: Location\n  ) {}\n\n  /**\n   * Initializes the component.\n   *\n   * Will register autoSnap if configured.\n   * Sets the applicationState to SNAP_READY.\n   * Triggers the snap view opened analytics event.\n   */\n  ngOnInit(): void {\n    if (this.applicationConfigService.isAutoSnapEnabled()) {\n      this.registerAutoSnap();\n    }\n\n    this.subscribeToStateStores();\n\n    this.appStateStore.dispatch(AppState.SNAP_READY);\n    this.analyticsService.snapViewOpened();\n  }\n\n  /**\n   * Subscribes to updates from the AppStateStore and MediaDeviceStateStore\n   * @private\n   */\n  private subscribeToStateStores() {\n    this.appStateStore\n      .getState()\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((appState) => (this.appState = appState));\n\n    this.mediaDeviceStateStore\n      .getState()\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((mediaDeviceState) => (this.mediaDeviceState = mediaDeviceState));\n  }\n\n  /**\n   * Clean up existing subscriptions.\n   * Triggers the snap view has been closed analytics event.\n   */\n  ngOnDestroy(): void {\n    this.analyticsService.snapViewClosed();\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  /**\n   * Notifies other subscriptions that a new snapshot is performed.\n   * Load the SportEvents based on the snapshot\n   */\n  takeSnapshot(): void {\n    this.snapshot$.next();\n\n    this.loadSportEvents().subscribe({\n      next: (response) => this.handleSuccess(response),\n      error: (error) => this.handleError(error),\n    });\n  }\n\n  /**\n   * When the camera is ready it starts to periodically take snapshots and tries to load SportEvents\n   * @private\n   */\n  private registerAutoSnap(): void {\n    this.mediaDeviceStateStore.webcamIsReady$\n      .pipe(\n        take(1),\n        takeUntil(this.destroyed$),\n        switchMap(() => this.startAutoSnapWithDelay())\n      )\n      .subscribe((response) => this.handleSuccess(response));\n  }\n\n  /**\n   * The first delay is a bit longer in order for the user to manage to align the camera correctly.\n   * Afterwards snapshots from the webcam will be taken periodically and SportEvents will be tried to be loaded.\n   * Stops only if the view is closed or the user has taken a snapshot by pressing the snapshot button.\n   * @private\n   */\n  private startAutoSnapWithDelay(): Observable {\n    return timer(this.applicationConfigService.getAutoSnapDelay(true)).pipe(\n      mergeMap(() =>\n        this.loadSportEvents(true).pipe(\n          retryWhen((errors) => errors.pipe(delay(this.applicationConfigService.getAutoSnapDelay())))\n        )\n      ),\n      takeUntil(race(this.destroyed$, this.snapshot$))\n    );\n  }\n\n  /**\n   * Emit the best match (first entry in the response) on the ApplicationConfigService,\n   * in order to notify other services about a successful snap.\n   * @param sportEventsResponse\n   * @private\n   */\n  private handleSuccess(sportEventsResponse: TvSearchResult) {\n    this.notificationService.notify();\n    this.applicationConfigService.emitResultsEvent(sportEventsResponse.resultEntries[0]);\n  }\n\n  /**\n   * Depending on the error, either indicates that not SportEvents have been found by the given snapshot\n   * or that the request could not be processed due to technical errors.\n   * @param error\n   * @private\n   */\n  private handleError(error: unknown): void {\n    if (error instanceof TvSearchNoResultError) {\n      this.appStateStore.dispatch(AppState.SNAP_NO_RESULTS);\n    } else {\n      this.appStateStore.dispatch(AppState.SNAP_FAILED);\n    }\n  }\n\n  /**\n   * Retrieves a snapshot from the webcam and then call the respective method to lookup the SportEvent.\n   * @param autoSnap: Depending on the mode used to perform the snapshot different methods are executed\n   * @private\n   */\n  private loadSportEvents(autoSnap = false): Observable {\n    if (!autoSnap) {\n      this.appStateStore.dispatch(AppState.SNAP_IN_PROGRESS);\n    }\n    return defer(() => this.webcamComponent.triggerSnapshot()).pipe(\n      switchMap((webcamImage: ManipulatedImage) => {\n        if (autoSnap) {\n          return this.snapOddsFacade.autoSearchSport(webcamImage.blob);\n        } else {\n          return this.snapOddsFacade.searchSport(webcamImage.blob);\n        }\n      })\n    );\n  }\n\n  /**\n   * Navigate to the Help Page by setting the corresponding AppState\n   */\n  showHelpPage(): void {\n    this.appStateStore.dispatch(AppState.SHOW_HELP);\n  }\n\n  /**\n   * Reload the webbrowser\n   */\n  reloadPage(): void {\n    this.location.reload();\n  }\n}\n\n    \n\n    \n        \n  {{ 'Snapodds_Title_Snap_TV' | translate }}\n  \n    \n      {{ 'Snapodds_Action_Help' | translate }}\n    \n  \n\n\n\n  \n\n  \n    \n      \n    \n\n    \n      \n        \n          \n            {{ 'Snapodds_Action_Reload' | translate }}\n          \n        \n\n        \n          \n\n          \n\n          \n            \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./snap.component.scss\n                \n                @use 'tools';\n@use 'settings';\n@use 'sass:math';\n\n:host {\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  .l-flex {\n    display: flex;\n    flex: 1;\n  }\n\n  @media (orientation: landscape) {\n    .l-flex {\n      &__column--landscape {\n        flex-direction: column;\n      }\n\n      &__row--landscape {\n        flex-direction: row;\n      }\n    }\n  }\n\n  @media (orientation: portrait) {\n    .l-flex {\n      &__column--portrait {\n        flex-direction: column;\n      }\n\n      &__row--portrait {\n        flex-direction: row;\n      }\n    }\n  }\n\n  snapodds-webcam {\n    display: flex;\n    flex: 1;\n  }\n\n  snapodds-content {\n    margin: settings.$spacing-lg;\n\n    @include tools.media-small--portrait {\n      margin: settings.$spacing-base settings.$spacing-lg;\n    }\n\n    @include tools.media-tiny--portrait {\n      margin: settings.$spacing-sm;\n    }\n\n    @include tools.media-tiny--landscape {\n      margin: settings.$spacing-base settings.$spacing-lg;\n    }\n  }\n\n  snapodds-footer {\n    margin-left: settings.$spacing-lg;\n    margin-right: settings.$spacing-lg;\n  }\n\n  snapodds-trigger {\n    display: flex;\n    flex: 1;\n    justify-content: center;\n  }\n\n  button {\n    @include tools.button-reset();\n    font-size: settings.$font-base;\n  }\n\n  .c-footer {\n    align-items: center;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n\n    &__switch-camera {\n      @include tools.button-reset;\n\n      color: settings.$color-primary;\n      display: flex;\n      flex: 1;\n      justify-content: center;\n    }\n\n    &__reload-button {\n      @include tools.button-reset;\n      background-color: settings.$color-primary;\n      color: settings.$color-text-focus;\n\n      font-size: settings.$font-lg;\n      font-weight: 500;\n      padding: settings.$spacing-base settings.$spacing-lg;\n    }\n\n    &__powered-by {\n      font-size: settings.$font-sm;\n    }\n\n    &__spacer {\n      display: flex;\n      flex: 1;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'Snapodds_Title_Snap_TV\\' | translate }}            {{ \\'Snapodds_Action_Help\\' | translate }}                                                                {{ \\'Snapodds_Action_Reload\\' | translate }}                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'OddsLineComponent', 'selector': 'snapodds-odds-line'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SnapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SnapOddsFacade.html":{"url":"injectables/SnapOddsFacade.html","title":"injectable - SnapOddsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SnapOddsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/snap-odds/snap-odds-facade.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                autoSearchSport\n                            \n                            \n                                searchSport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tvSearchService: TvSearchService, logger: LoggerService, analyticsService: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/snap-odds/snap-odds-facade.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tvSearchService\n                                                  \n                                                        \n                                                                        TvSearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        analyticsService\n                                                  \n                                                        \n                                                                        GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        autoSearchSport\n                        \n                    \n                \n            \n            \n                \nautoSearchSport(imageData: Blob)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/snap-odds/snap-odds-facade.service.ts:44\n                \n            \n\n\n            \n                \n                    Find SportEvent when the search is triggered programmatically.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imageData\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchSport\n                        \n                    \n                \n            \n            \n                \nsearchSport(imageData: Blob)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/snap-odds/snap-odds-facade.service.ts:22\n                \n            \n\n\n            \n                \n                    Performs the search of an SportEvent by an image.\nTrigger the analytics to register positive / negative and failed results.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imageData\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TvSearchResult } from '@response/typings';\nimport { catchError, Observable, tap, throwError } from 'rxjs';\nimport { TvSearchNoResultError } from '../api/api-errors';\nimport { TvSearchService } from '../api/tv-search.service';\nimport { LoggerService } from '../logger/logger.service';\nimport { GoogleAnalyticsService } from '../tracking/google-analytics.service';\n\n@Injectable({ providedIn: 'root' })\nexport class SnapOddsFacade {\n  constructor(\n    private readonly tvSearchService: TvSearchService,\n    private readonly logger: LoggerService,\n    private readonly analyticsService: GoogleAnalyticsService\n  ) {}\n\n  /**\n   * Performs the search of an SportEvent by an image.\n   * Trigger the analytics to register positive / negative and failed results.\n   * @param imageData\n   */\n  searchSport(imageData: Blob): Observable {\n    this.analyticsService.snapViewSnap();\n\n    const snapStartTime = Date.now();\n    return this.tvSearchService.searchSport(imageData).pipe(\n      catchError((error) => {\n        const duration = Date.now() - snapStartTime;\n        if (error instanceof TvSearchNoResultError) {\n          this.analyticsService.snapViewSnapNegative(duration);\n        } else {\n          this.analyticsService.snapViewSnapFailed(duration);\n        }\n        return throwError(error);\n      }),\n      tap(() => this.analyticsService.snapViewSnapResult(Date.now() - snapStartTime))\n    );\n  }\n\n  /**\n   * Find SportEvent when the search is triggered programmatically.\n   * @param imageData\n   */\n  autoSearchSport(imageData: Blob): Observable {\n    return this.tvSearchService.autoSearchSport(imageData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerComponent.html":{"url":"components/SpinnerComponent.html","title":"component - SpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/spinner/spinner.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-spinner\n            \n\n            \n                styleUrls\n                ./spinner.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spinner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     \"base\" | \"small\"\n\n                    \n                \n                \n                    \n                        Default value : 'base'\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/spinner/spinner.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'snapodds-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss'],\n})\nexport class SpinnerComponent {\n  @Input()\n  size: 'base' | 'small' = 'base';\n}\n\n    \n\n    \n        \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./spinner.component.scss\n                \n                @use 'sass:math';\n\n$spinner-width: 3rem;\n$spinner-width--small: 1.5rem;\n$bar--width: math.div($spinner-width, 4);\n$bar--width--small: math.div($spinner-width--small, 4);\n$bar--count: 8;\n\n:host {\n  .spinner {\n    color: currentColor;\n    display: inline-block;\n    height: $spinner-width;\n    position: relative;\n    width: $spinner-width;\n\n    div {\n      animation: spinner $bar--count * 0.1s linear infinite;\n      transform-origin: math.div($spinner-width, 2) math.div($spinner-width, 2);\n    }\n\n    div::after {\n      background: currentColor;\n      border-radius: 20%;\n      content: ' ';\n      display: block;\n      height: $bar--width;\n      left: math.div($spinner-width, 2) - math.div($bar--width, 6);\n      position: absolute;\n      top: math.div($bar--width, 6);\n      width: math.div($bar--width, 3);\n    }\n\n    &--small {\n      height: $spinner-width--small;\n      width: $spinner-width--small;\n\n      div {\n        transform-origin: math.div($spinner-width--small, 2) math.div($spinner-width--small, 2);\n      }\n\n      div::after {\n        height: $bar--width--small;\n        left: math.div($spinner-width--small, 2) - math.div($bar--width--small, 6);\n        top: math.div($bar--width--small, 6);\n        width: math.div($bar--width--small, 3);\n      }\n    }\n\n    @for $i from 1 through $bar--count {\n      div:nth-child(#{$i}) {\n        animation-delay: $bar--count * -0.1s + $i * 0.1s;\n        transform: rotate(#{(math.div(360, $bar--count) * $i)}deg);\n      }\n    }\n  }\n\n  @keyframes spinner {\n    0% {\n      opacity: 1;\n    }\n\n    100% {\n      opacity: 0;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'OddsLineComponent', 'selector': 'snapodds-odds-line'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SportEvent.html":{"url":"interfaces/SportEvent.html","title":"interface - SportEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SportEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/tv-search/sport-event.ts\n        \n\n\n            \n                Description\n            \n            \n                An entity represents a sport event broadcasted on TV channel.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _links\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            competitors\n                                        \n                                \n                                \n                                        \n                                            endTime\n                                        \n                                \n                                \n                                        \n                                            externalId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            sport\n                                        \n                                \n                                \n                                        \n                                            sportDataProviderCode\n                                        \n                                \n                                \n                                        \n                                            sportDataProviderMatchId\n                                        \n                                \n                                \n                                        \n                                            startTime\n                                        \n                                \n                                \n                                        \n                                            tournament\n                                        \n                                \n                                \n                                        \n                                            tvChannelId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _links:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The category of this sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        competitors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        competitors:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The competitors participating in this sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The end time of this sport event.\nISO DateTime Format: yyyy-MM-dd'T'HH:mm:ss.SSSZZ\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of a match specific for the sport data provider and corresponding to this sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sport:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The sport discipline of this sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sportDataProviderCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sportDataProviderCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique code of an external sport data provider which is a source of the sport data for this sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sportDataProviderMatchId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sportDataProviderMatchId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of a match specific for the sport data provider and corresponding to this sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The start time of this sport event.\nISO DateTime Format: yyyy-MM-dd'T'HH:mm:ss.SSSZZ\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournament\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tournament:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The tournament of this sport event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tvChannelId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tvChannelId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of a TV channel registered in the system and on which this sport event aired.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Link } from '../link';\n\n/**\n * An entity represents a sport event broadcasted on TV channel.\n */\nexport interface SportEvent {\n  /**\n   * The id of the sport event.\n   */\n  id: number;\n\n  /**\n   * The unique code of an external sport data provider which is a source of the sport data for this sport event.\n   */\n  sportDataProviderCode: string;\n\n  /**\n   * The id of a match specific for the sport data provider and corresponding to this sport event.\n   */\n  sportDataProviderMatchId: string;\n\n  /**\n   * The id of a TV channel registered in the system and on which this sport event aired.\n   */\n  tvChannelId: number;\n\n  /**\n   * The start time of this sport event.\n   *\n   * ISO DateTime Format: yyyy-MM-dd'T'HH:mm:ss.SSSZZ\n   */\n  startTime: string;\n\n  /**\n   * The end time of this sport event.\n   *\n   * ISO DateTime Format: yyyy-MM-dd'T'HH:mm:ss.SSSZZ\n   */\n  endTime: string;\n\n  /**\n   * The sport discipline of this sport event.\n   */\n  sport: string;\n\n  /**\n   * The category of this sport event.\n   */\n  category: string;\n\n  /**\n   * The tournament of this sport event.\n   */\n  tournament: string;\n\n  /**\n   * The competitors participating in this sport event.\n   */\n  competitors: { name: string }[];\n\n  /**\n   * The id of a match specific for the sport data provider and corresponding to this sport event.\n   */\n  externalId: string;\n\n  _links: {\n    self?: Link;\n    tvChannel?: Link;\n    tvChannelLogo?: Link;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SportsBook.html":{"url":"interfaces/SportsBook.html","title":"interface - SportsBook","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SportsBook\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/odds/sports-book.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an odds for the specific game in the given sports book.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _links\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            offers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _links:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the sports book.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offers:         OddsOffer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OddsOffer[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The odds offers available in the given sports book.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { OddsOffer } from './odds-offer';\nimport { Link } from '../link';\n\n/**\n * Represents an odds for the specific game in the given sports book.\n */\nexport interface SportsBook {\n  /**\n   * The name of the sports book.\n   */\n  name: string;\n\n  /**\n   * The odds offers available in the given sports book.\n   */\n  offers: OddsOffer[];\n\n  _links?: {\n    redirect?: Link;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SportsBookLineViewModel.html":{"url":"interfaces/SportsBookLineViewModel.html","title":"interface - SportsBookLineViewModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SportsBookLineViewModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/models/sports-book-line-view-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Data structure used to render the combined info of offers.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            moneyline\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            moneylineUrl\n                                        \n                                \n                                \n                                        \n                                            overUnder\n                                        \n                                \n                                \n                                        \n                                            overUnderOdds\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            overUnderUrl\n                                        \n                                \n                                \n                                        \n                                            spread\n                                        \n                                \n                                \n                                        \n                                            spreadOdds\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            spreadUrl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        moneyline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moneyline:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The target value for the money line.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moneylineUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moneylineUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The url pointing to the money line.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overUnder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overUnder:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The target value for over/under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overUnderOdds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overUnderOdds:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The odds for the over/under outcome.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overUnderUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overUnderUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The url pointing to the over/under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spread\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spread:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The target value for spread.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spreadOdds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spreadOdds:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The odds for the spread outcome.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spreadUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spreadUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The url pointing to the spread.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SportsBookLineViewModel {\n  /**\n   * The target value for spread.\n   */\n  spread: number | null;\n\n  /**\n   * The odds for the spread outcome.\n   */\n  spreadOdds: number | null;\n\n  /**\n   * The url pointing to the spread.\n   */\n  spreadUrl?: string | null;\n\n  /**\n   * The target value for the money line.\n   */\n  moneyline: number | null;\n\n  /**\n   * The url pointing to the money line.\n   */\n  moneylineUrl?: string | null;\n\n  /**\n   * The target value for over/under.\n   */\n  overUnder: number | null;\n\n  /**\n   * The odds for the over/under outcome.\n   */\n  overUnderOdds: number | null;\n\n  /**\n   * The url pointing to the over/under.\n   */\n  overUnderUrl?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SportsBookViewModel.html":{"url":"interfaces/SportsBookViewModel.html","title":"interface - SportsBookViewModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SportsBookViewModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/models/sports-book-view-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Data structure used to render the sportBooks for LineOdds\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            lines\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            redirectUrl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lines\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lines:     SportsBookLineViewModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SportsBookLineViewModel[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    One line contains the various OddsOffers combined.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the sports book.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redirectUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        redirectUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The link which will be used to redirect the user to.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { SportsBookLineViewModel } from './sports-book-line-view-model';\n\n/**\n * Data structure used to render the sportBooks for LineOdds\n */\nexport interface SportsBookViewModel {\n  /**\n   * The name of the sports book.\n   */\n  name: string;\n  /**\n   * One line contains the various OddsOffers combined.\n   */\n  lines: SportsBookLineViewModel[];\n\n  /**\n   * The link which will be used to redirect the user to.\n   */\n  redirectUrl?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SwitchSvgComponent.html":{"url":"components/SwitchSvgComponent.html","title":"component - SwitchSvgComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SwitchSvgComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/svgs/switch.svg.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-switch-svg\n            \n\n            \n                styleUrls\n                ./switch.svg.styles.scss\n            \n\n\n\n            \n                templateUrl\n                ./switch.svg\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'snapodds-switch-svg',\n  templateUrl: './switch.svg',\n  styleUrls: ['./switch.svg.styles.scss'],\n})\nexport class SwitchSvgComponent {}\n\n    \n\n    \n        \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./switch.svg.styles.scss\n                \n                @use 'settings';\n\n:host {\n  color: settings.$color-text;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'OddsLineComponent', 'selector': 'snapodds-odds-line'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SwitchSvgComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TranslationEntries.html":{"url":"interfaces/TranslationEntries.html","title":"interface - TranslationEntries","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TranslationEntries\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/i18n/translation-entries.ts\n        \n\n\n            \n                Description\n            \n            \n                Keys available for translating text in the view\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Snapodds_Action_Cancel\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Action_Close_Help\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Action_Help\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Action_Reload\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Device_No_Permission\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Device_No_Permission_Headline\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Lines_Loading\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Lines_No_Results\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Snapping_Failed\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Snapping_Failed_Headline\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Snapping_No_results\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Snapping_No_results_Headline\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Title_Help\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Title_Odds\n                                        \n                                \n                                \n                                        \n                                            Snapodds_Title_Snap_TV\n                                        \n                                \n                                \n                                        \n                                            Snapodds_ViewFinder_Hint\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Action_Cancel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Action_Cancel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Action_Close_Help\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Action_Close_Help:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Action_Help\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Action_Help:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Action_Reload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Action_Reload:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Device_No_Permission\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Device_No_Permission:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Device_No_Permission_Headline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Device_No_Permission_Headline:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Lines_Loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Lines_Loading:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Lines_No_Results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Lines_No_Results:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Snapping_Failed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Snapping_Failed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Snapping_Failed_Headline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Snapping_Failed_Headline:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Snapping_No_results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Snapping_No_results:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Snapping_No_results_Headline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Snapping_No_results_Headline:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Title_Help\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Title_Help:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Title_Odds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Title_Odds:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_Title_Snap_TV\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_Title_Snap_TV:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Snapodds_ViewFinder_Hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Snapodds_ViewFinder_Hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TranslationEntries {\n  Snapodds_Title_Snap_TV: string;\n  Snapodds_Title_Odds: string;\n  Snapodds_Title_Help: string;\n  Snapodds_Action_Cancel: string;\n  Snapodds_Action_Reload: string;\n  Snapodds_Action_Help: string;\n  Snapodds_Action_Close_Help: string;\n  Snapodds_ViewFinder_Hint: string;\n  Snapodds_Device_No_Permission_Headline: string;\n  Snapodds_Device_No_Permission: string;\n  Snapodds_Snapping_Failed_Headline: string;\n  Snapodds_Snapping_Failed: string;\n  Snapodds_Snapping_No_results_Headline: string;\n  Snapodds_Snapping_No_results: string;\n  Snapodds_Lines_Loading: string;\n  Snapodds_Lines_No_Results: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TriggerComponent.html":{"url":"components/TriggerComponent.html","title":"component - TriggerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TriggerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/trigger/trigger.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-trigger\n            \n\n            \n                styleUrls\n                ./trigger.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./trigger.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                processing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/trigger/trigger.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        processing\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/trigger/trigger.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/trigger/trigger.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'snapodds-trigger',\n  templateUrl: './trigger.component.html',\n  styleUrls: ['./trigger.component.scss'],\n})\nexport class TriggerComponent {\n  @Input() disabled = false;\n  @Input() processing = false;\n  @Output() clicked = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./trigger.component.scss\n                \n                @use 'tools';\n@use 'settings';\n\n:host {\n  .c-trigger {\n    &__button {\n      @include tools.button-reset;\n\n      color: settings.$color-primary;\n      position: relative;\n\n      &:disabled {\n        opacity: 0.5;\n        pointer-events: none;\n      }\n    }\n\n    &__spinner {\n      color: settings.$color-background;\n      left: 50%;\n      position: absolute;\n      top: 50%;\n      transform: translate(-50%, -50%);\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'OddsLineComponent', 'selector': 'snapodds-odds-line'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TriggerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TriggerSvgComponent.html":{"url":"components/TriggerSvgComponent.html","title":"component - TriggerSvgComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TriggerSvgComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/svgs/trigger.svg.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-trigger-svg\n            \n\n\n\n\n            \n                templateUrl\n                ./trigger.svg\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'snapodds-trigger-svg',\n  templateUrl: './trigger.svg',\n})\nexport class TriggerSvgComponent {}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'OddsLineComponent', 'selector': 'snapodds-odds-line'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TriggerSvgComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TvChannel.html":{"url":"interfaces/TvChannel.html","title":"interface - TvChannel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TvChannel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/tv-search/tv-channel.ts\n        \n\n\n            \n                Description\n            \n            \n                An entity which represents a TV channel registered in the system.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _links\n                                        \n                                \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            grabbed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            homepage\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _links:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique code of this TV channel.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grabbed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grabbed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The flag which indicates that the system grabs this TV channel or doesn't.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homepage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        homepage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The homepage URL of this TV channel.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of this TV channel.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of this TV channel.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Link } from '../link';\n\n/**\n * An entity which represents a TV channel registered in the system.\n */\nexport interface TvChannel {\n  /**\n   * The id of this TV channel.\n   */\n  id: number;\n\n  /**\n   * The unique code of this TV channel.\n   */\n  code: string;\n\n  /**\n   * The name of this TV channel.\n   */\n  name: string;\n\n  /**\n   * The homepage URL of this TV channel.\n   */\n  homepage?: string;\n\n  /**\n   * The flag which indicates that the system grabs this TV channel or doesn't.\n   */\n  grabbed: boolean;\n\n  _links: {\n    self?: Link;\n    logo?: Link;\n    poster?: Link;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TvSearchNoResultError.html":{"url":"classes/TvSearchNoResultError.html","title":"class - TvSearchNoResultError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TvSearchNoResultError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/api/api-errors.ts\n        \n\n\n            \n                Description\n            \n            \n                Error to indicate that a search has returned no results\n\n            \n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/api/api-errors.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TvSearchNoResultError extends Error {\n  constructor() {\n    super('No sport events found');\n    this.name = 'TvSearchNoResultError';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TvSearchResult.html":{"url":"interfaces/TvSearchResult.html","title":"interface - TvSearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TvSearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/tv-search/tv-search-result.ts\n        \n\n\n            \n                Description\n            \n            \n                A result of TV search.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            requestUuid\n                                        \n                                \n                                \n                                        \n                                            resultEntries\n                                        \n                                \n                                \n                                        \n                                            screenQuadrangles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        requestUuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        requestUuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A result of TV search.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultEntries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resultEntries:     TvSearchResultEntry[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TvSearchResultEntry[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The list of result entries.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        screenQuadrangles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        screenQuadrangles:         Quadrangle2d[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Quadrangle2d[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The quadrangles of TV screen found on the images used for the TV search.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Quadrangle2d } from './quadrangle2d';\nimport { TvSearchResultEntry } from './tv-search-result-entry';\n\n/**\n * A result of TV search.\n */\nexport interface TvSearchResult {\n  /**\n   * A result of TV search.\n   */\n  requestUuid: string;\n\n  /**\n   * The list of result entries.\n   */\n  resultEntries: TvSearchResultEntry[];\n\n  /**\n   * The quadrangles of TV screen found on the images used for the TV search.\n   */\n  screenQuadrangles: Quadrangle2d[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TvSearchResultEntry.html":{"url":"interfaces/TvSearchResultEntry.html","title":"interface - TvSearchResultEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TvSearchResultEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/response/src/lib/typings/tv-search/tv-search-result-entry.ts\n        \n\n\n            \n                Description\n            \n            \n                A result entry found on a request made by the end-user for search in the index of TV channels grabbed by the system.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            score\n                                        \n                                \n                                \n                                        \n                                            sportEvent\n                                        \n                                \n                                \n                                        \n                                            timestampRef\n                                        \n                                \n                                \n                                        \n                                            tvChannel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The result score of the entry.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sportEvent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sportEvent:         SportEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SportEvent\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The sport event shown on the TV channel at the timestamp of the entry.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestampRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestampRef:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The timestamp when the corresponding TS image was aired.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tvChannel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tvChannel:         TvChannel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TvChannel\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The TV channel on which the TS image corresponding to the entry was aired.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { SportEvent } from './sport-event';\nimport { TvChannel } from './tv-channel';\n\n/**\n * A result entry found on a request made by the end-user for search in the index of TV channels grabbed by the system.\n */\nexport interface TvSearchResultEntry {\n  /**\n   * The TV channel on which the TS image corresponding to the entry was aired.\n   */\n  tvChannel: TvChannel;\n\n  /**\n   * The sport event shown on the TV channel at the timestamp of the entry.\n   */\n  sportEvent: SportEvent;\n\n  /**\n   * The timestamp when the corresponding TS image was aired.\n   */\n  timestampRef: number;\n\n  /**\n   * The result score of the entry.\n   */\n  score: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TvSearchService.html":{"url":"injectables/TvSearchService.html","title":"injectable - TvSearchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TvSearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/snapodds/src/services/api/tv-search.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                timeLag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                autoSearchSport\n                            \n                            \n                                    Private\n                                createSnapscreenHeaders\n                            \n                            \n                                searchSport\n                            \n                            \n                                    Private\n                                snap\n                            \n                            \n                                    Private\n                                updateTimeLag\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    baseUrl\n                                \n                                \n                                    currentTimestamp\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logger: LoggerService, authService: AuthService, applicationConfigService: ApplicationConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/services/api/tv-search.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        autoSearchSport\n                        \n                    \n                \n            \n            \n                \nautoSearchSport(imageData: Blob)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/tv-search.service.ts:50\n                \n            \n\n\n            \n                \n                    Find SportEvent when the search is triggered programmatically.\nTakes the current timeStamp into consideration.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    imageData\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : snapshot of the tv-viewfinders viewport\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createSnapscreenHeaders\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSnapscreenHeaders(accessToken: string, nearTimestamp: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/tv-search.service.ts:86\n                \n            \n\n\n            \n                \n                    Create the headers necessary to perform a search on the API\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    accessToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : to authenticate the client\n\n                                    \n                                \n                                \n                                    nearTimestamp\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : add the currentTimestamp as header\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HttpHeaders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchSport\n                        \n                    \n                \n            \n            \n                \nsearchSport(imageData: Blob)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/tv-search.service.ts:41\n                \n            \n\n\n            \n                \n                    Find SportEvent when the user manually triggers the snap.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    imageData\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : snapshot of the cameras viewport\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        snap\n                        \n                    \n                \n            \n            \n                \n                    \n                    snap(url: string, imageData: Blob, nearTimestamp)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/tv-search.service.ts:61\n                \n            \n\n\n            \n                \n                    Performs a search by image\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        : API endpoint to perform the search request agianst\n\n                                    \n                                \n                                \n                                    imageData\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        : image to be analyzed\n\n                                    \n                                \n                                \n                                    nearTimestamp\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        : add the currentTimestamp as header\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateTimeLag\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTimeLag(response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/services/api/tv-search.service.ts:104\n                \n            \n\n\n            \n                \n                    Calculates the difference between now and when the response has been sent.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the response from which the difference is calculated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        timeLag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/services/api/tv-search.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        baseUrl\n                    \n                \n\n                \n                    \n                        getbaseUrl()\n                    \n                \n                            \n                                \n                                    Defined in apps/snapodds/src/services/api/tv-search.service.ts:26\n                                \n                            \n                    \n                        \n                                Retrieve the apiUrl from the applicationConfig\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        currentTimestamp\n                    \n                \n\n                \n                    \n                        getcurrentTimestamp()\n                    \n                \n                            \n                                \n                                    Defined in apps/snapodds/src/services/api/tv-search.service.ts:33\n                                \n                            \n                    \n                        \n                                Calculate the difference between the current timestamp and the delay the response took to be processed by the API\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { TvSearchResult } from '@response/typings';\nimport { map, Observable, switchMap, tap } from 'rxjs';\nimport { AuthService } from '../auth/auth.service';\nimport { ApplicationConfigService } from '../config/application-config.service';\nimport { LoggerService } from '../logger/logger.service';\nimport { TvSearchNoResultError } from './api-errors';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TvSearchService {\n  private timeLag = 0;\n\n  constructor(\n    private readonly http: HttpClient,\n    private readonly logger: LoggerService,\n    private readonly authService: AuthService,\n    private readonly applicationConfigService: ApplicationConfigService\n  ) {}\n\n  /**\n   * Retrieve the apiUrl from the applicationConfig\n   */\n  get baseUrl(): string {\n    return this.applicationConfigService.getApiUrl();\n  }\n\n  /**\n   * Calculate the difference between the current timestamp and the delay the response took to be processed by the API\n   */\n  get currentTimestamp(): number {\n    return Date.now() - this.timeLag;\n  }\n\n  /**\n   * Find SportEvent when the user manually triggers the snap.\n   * @param imageData: snapshot of the cameras viewport\n   */\n  searchSport(imageData: Blob): Observable {\n    return this.snap('/tv-search/sport/by-image', imageData);\n  }\n\n  /**\n   * Find SportEvent when the search is triggered programmatically.\n   * Takes the current timeStamp into consideration.\n   * @param imageData: snapshot of the tv-viewfinders viewport\n   */\n  autoSearchSport(imageData: Blob): Observable {\n    return this.snap('/tv-search/sport/near-timestamp/by-image', imageData, true);\n  }\n\n  /**\n   * Performs a search by image\n   * @param url: API endpoint to perform the search request agianst\n   * @param imageData: image to be analyzed\n   * @param nearTimestamp: add the currentTimestamp as header\n   * @private\n   */\n  private snap(url: string, imageData: Blob, nearTimestamp = false): Observable {\n    return this.authService.requestAccessToken().pipe(\n      switchMap((accessToken) =>\n        this.http.post(`${this.baseUrl}${url}`, imageData, {\n          headers: this.createSnapscreenHeaders(accessToken, nearTimestamp),\n          observe: 'response',\n        })\n      ),\n      tap((response) => this.updateTimeLag(response)),\n      map((response) => {\n        if (response.body?.resultEntries.length) {\n          return response.body;\n        } else {\n          throw new TvSearchNoResultError();\n        }\n      })\n    );\n  }\n\n  /**\n   * Create the headers necessary to perform a search on the API\n   * @param accessToken: to authenticate the client\n   * @param nearTimestamp: add the currentTimestamp as header\n   * @private\n   */\n  private createSnapscreenHeaders(accessToken: string, nearTimestamp: boolean): HttpHeaders {\n    let headers = new HttpHeaders()\n      .set('Authorization', `Bearer ${accessToken}`)\n      .set('Content-type', 'application/octet-stream')\n      .set('X-Snapscreen-MimeType', 'image/jpeg');\n\n    if (nearTimestamp) {\n      headers = headers.set('X-Snapscreen-Timestamp', `${this.currentTimestamp}`);\n    }\n\n    return headers;\n  }\n\n  /**\n   * Calculates the difference between now and when the response has been sent.\n   * @param response: the response from which the difference is calculated\n   * @private\n   */\n  private updateTimeLag(response: HttpResponse): void {\n    const responseDate = response.headers.get('Date');\n\n    if (responseDate) {\n      this.timeLag = Date.now() - Date.parse(responseDate);\n      this.logger.debug(`Update time lag interval to ${this.timeLag}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserFeedbackMessageComponent.html":{"url":"components/UserFeedbackMessageComponent.html","title":"component - UserFeedbackMessageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserFeedbackMessageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/user-feedback-message/user-feedback-message.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-user-feedback-message\n            \n\n            \n                styleUrls\n                ./user-feedback-message.component.scss\n            \n\n\n\n            \n                templateUrl\n                user-feedback-message.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appState\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        appState\n                    \n                \n                \n                    \n                        Type :         AppState\n\n                    \n                \n                        \n                            \n                                    Defined in apps/snapodds/src/app/user-feedback-message/user-feedback-message.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { AppState } from '../../states/app-state.store';\n\n@Component({\n  selector: 'snapodds-user-feedback-message',\n  templateUrl: 'user-feedback-message.component.html',\n  styleUrls: ['./user-feedback-message.component.scss'],\n})\nexport class UserFeedbackMessageComponent {\n  @Input() appState?: AppState;\n}\n\n    \n\n    \n        \n\n\n  {{ 'Snapodds_Device_No_Permission_Headline' | translate }}\n  \n\n\n\n  {{ 'Snapodds_Snapping_No_results_Headline' | translate }}\n  \n\n\n\n  {{ 'Snapodds_Snapping_Failed_Headline' | translate }}\n  \n\n\n    \n\n    \n                \n                    ./user-feedback-message.component.scss\n                \n                @use 'settings';\n@use 'tools';\n\n:host {\n  .c-user-feedback {\n    text-align: center;\n\n    @include tools.media-tiny--portrait {\n      /* stylelint-disable-next-line selector-pseudo-element-no-unknown */\n      ::ng-deep {\n        @include tools.flat-breaks;\n      }\n    }\n\n    &--error {\n      color: settings.$color-warn;\n    }\n\n    &__headline {\n      font-size: settings.$font-xl;\n      margin-bottom: settings.$spacing-sm;\n\n      @include tools.media-tiny--portrait {\n        display: none;\n      }\n\n      @include tools.media-tiny--landscape {\n        display: none;\n      }\n\n      @include tools.media-small--portrait {\n        font-size: settings.$font-lg;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'Snapodds_Device_No_Permission_Headline\\' | translate }}    {{ \\'Snapodds_Snapping_No_results_Headline\\' | translate }}    {{ \\'Snapodds_Snapping_Failed_Headline\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'OddsLineComponent', 'selector': 'snapodds-odds-line'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserFeedbackMessageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WebcamComponent.html":{"url":"components/WebcamComponent.html","title":"component - WebcamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WebcamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/snapodds/src/app/webcam/webcam.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snapodds-webcam\n            \n\n            \n                styleUrls\n                ./webcam.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./webcam.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasMultipleWebcams\n                            \n                            \n                                imageAsDataUrl\n                            \n                            \n                                    Private\n                                nextWebcam\n                            \n                            \n                                nextWebcam$\n                            \n                            \n                                pinchZoomComponent\n                            \n                            \n                                videoOptions\n                            \n                            \n                                viewFinder\n                            \n                            \n                                webcamComponent\n                            \n                            \n                                webcamComponentElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cameraSwitched\n                            \n                            \n                                    Private\n                                centerContentOnZoom\n                            \n                            \n                                debugImageManipulations\n                            \n                            \n                                    Private\n                                drawDebugImage\n                            \n                            \n                                    Private\n                                getViewFinder\n                            \n                            \n                                handleInitError\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                switchToNextWebcam\n                            \n                            \n                                triggerSnapshot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(imageManipulationService: ImageManipulationService, applicationConfigService: ApplicationConfigService, appStateStore: AppStateStore, logger: LoggerService, mediaDeviceStateStore: MediaDeviceStateStore)\n                    \n                \n                        \n                            \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        imageManipulationService\n                                                  \n                                                        \n                                                                        ImageManipulationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applicationConfigService\n                                                  \n                                                        \n                                                                        ApplicationConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appStateStore\n                                                  \n                                                        \n                                                                        AppStateStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaDeviceStateStore\n                                                  \n                                                        \n                                                                        MediaDeviceStateStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cameraSwitched\n                        \n                    \n                \n            \n            \n                \ncameraSwitched(deviceId: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:132\n                \n            \n\n\n            \n                \n                    Callback which is executed when the video stream of a webcam is ready for further processing.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    deviceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the webcams device id inside the browser\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        centerContentOnZoom\n                        \n                    \n                \n            \n            \n                \n                    \n                    centerContentOnZoom()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:148\n                \n            \n\n\n            \n                \n                    Patches the ngx-pinch-zoom component by not taking the cursors offset into account when zooming into the video stream.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debugImageManipulations\n                        \n                    \n                \n            \n            \n                \ndebugImageManipulations()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:140\n                \n            \n\n\n            \n                \n                    Used to determine if the debug output of the manipulated image should be shown or not\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        drawDebugImage\n                        \n                    \n                \n            \n            \n                \n                    \n                    drawDebugImage(blob: Blob)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:105\n                \n            \n\n\n            \n                \n                    Converts a blob image into a dataUrl which can be rendered in the template\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    blob\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getViewFinder\n                        \n                    \n                \n            \n            \n                \n                    \n                    getViewFinder()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:94\n                \n            \n\n\n            \n                \n                    If autoSnap is enabled then only the tv-frame is used as viewFinder, otherwise the whole visible are is used.\n\n\n                    \n                    \n                    \n                        Returns :     HTMLElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleInitError\n                        \n                    \n                \n            \n            \n                \nhandleInitError(error: WebcamInitError)\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:115\n                \n            \n\n\n            \n                \n                    If the device can't be accessed, triggers the rendering of the according error page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            WebcamInitError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:60\n                \n            \n\n\n            \n                \n                    After the view and its components are initialized, the zoom library will be patched to only allow zoom on center\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:46\n                \n            \n\n\n            \n                \n                    Verifies the available video inputs and if none are found triggers the rendering of the error view\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switchToNextWebcam\n                        \n                    \n                \n            \n            \n                \nswitchToNextWebcam()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:124\n                \n            \n\n\n            \n                \n                    Toggles between available webcams\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerSnapshot\n                        \n                    \n                \n            \n            \n                \ntriggerSnapshot()\n                \n            \n\n\n            \n                \n                    Defined in apps/snapodds/src/app/webcam/webcam.component.ts:72\n                \n            \n\n\n            \n                \n                    Takes a snapshot from the webcams video stream and crops it to the area that is visible to the user.\nIf the environment.debugImageManipulations is turned on will render the cropped image in the browser for verification\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hasMultipleWebcams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageAsDataUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | ArrayBuffer | null | undefined\n\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        nextWebcam\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextWebcam$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.nextWebcam.asObservable()\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pinchZoomComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PinchZoomComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(PinchZoomComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        videoOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaTrackConstraints\n\n                    \n                \n                \n                    \n                        Default value : {\n    facingMode: { ideal: 'environment' },\n    width: { min: 320, ideal: 1920, max: 2560 },\n  }\n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewFinder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('viewFinder')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        webcamComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgxWebcamComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(NgxWebcamComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        webcamComponentElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(NgxWebcamComponent, {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/snapodds/src/app/webcam/webcam.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { PinchZoomComponent } from 'ngx-pinch-zoom';\nimport { WebcamComponent as NgxWebcamComponent, WebcamInitError, WebcamUtil } from 'ngx-webcam';\nimport { Observable, Subject } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { ApplicationConfigService } from '../../services/config/application-config.service';\nimport { ImageManipulationService } from '../../services/image-manipulation/image-manipulation.service';\nimport { ManipulatedImage } from '../../services/image-manipulation/manipulated-image';\nimport { LoggerService } from '../../services/logger/logger.service';\nimport { AppState, AppStateStore } from '../../states/app-state.store';\nimport { MediaDeviceState, MediaDeviceStateStore } from '../../states/media-device-state.store';\n\n@Component({\n  selector: 'snapodds-webcam',\n  templateUrl: './webcam.component.html',\n  styleUrls: ['./webcam.component.scss'],\n})\nexport class WebcamComponent implements OnInit, AfterViewInit {\n  imageAsDataUrl: string | ArrayBuffer | null | undefined;\n  videoOptions: MediaTrackConstraints = {\n    facingMode: { ideal: 'environment' },\n    width: { min: 320, ideal: 1920, max: 2560 },\n  };\n\n  @ViewChild(NgxWebcamComponent) webcamComponent!: NgxWebcamComponent;\n  @ViewChild(NgxWebcamComponent, { read: ElementRef }) webcamComponentElement!: ElementRef;\n  @ViewChild(PinchZoomComponent) pinchZoomComponent!: PinchZoomComponent;\n  @ViewChild('viewFinder') viewFinder!: ElementRef;\n\n  hasMultipleWebcams = false;\n\n  private nextWebcam: Subject = new Subject();\n  nextWebcam$: Observable = this.nextWebcam.asObservable();\n\n  constructor(\n    private readonly imageManipulationService: ImageManipulationService,\n    private readonly applicationConfigService: ApplicationConfigService,\n    private readonly appStateStore: AppStateStore,\n    private readonly logger: LoggerService,\n    readonly mediaDeviceStateStore: MediaDeviceStateStore\n  ) {}\n\n  /**\n   * Verifies the available video inputs and if none are found triggers the rendering of the error view\n   */\n  ngOnInit(): void {\n    WebcamUtil.getAvailableVideoInputs().then((mediaDevices: MediaDeviceInfo[]) => {\n      this.hasMultipleWebcams = mediaDevices.length > 1;\n\n      if (mediaDevices.length === 0) {\n        this.mediaDeviceStateStore.dispatch(MediaDeviceState.DEVICE_NO_CAMERA);\n        this.appStateStore.dispatch(AppState.DEVICE_NO_CAMERA);\n      }\n    });\n  }\n\n  /**\n   * After the view and its components are initialized, the zoom library will be patched to only allow zoom on center\n   */\n  ngAfterViewInit(): void {\n    this.centerContentOnZoom();\n  }\n\n  /**\n   * Takes a snapshot from the webcams video stream and crops it to the area that is visible to the user.\n   *\n   * If the `environment.debugImageManipulations` is turned on will render the cropped image in the browser for verification\n   *\n   * @throws 'Debug webcam image' to interrupt further processing when debugImageManipulations is turned on.\n   *\n   */\n  triggerSnapshot(): Promise {\n    return this.imageManipulationService\n      .cropAndResizeImage(\n        this.webcamComponent.nativeVideoElement,\n        this.getViewFinder(),\n        this.pinchZoomComponent.scale,\n        this.applicationConfigService.getSnapDimension()\n      )\n      .then((manipulatedImage) => {\n        if (this.debugImageManipulations()) {\n          this.drawDebugImage(manipulatedImage.blob);\n          throw 'Debug webcam image';\n        }\n        this.logger.info('Received webcam image', manipulatedImage);\n        return manipulatedImage;\n      });\n  }\n\n  /**\n   * If `autoSnap` is enabled then only the tv-frame is used as viewFinder, otherwise the whole visible are is used.\n   * @private\n   */\n  private getViewFinder(): HTMLElement {\n    return this.applicationConfigService.isAutoSnapEnabled()\n      ? this.viewFinder.nativeElement\n      : this.webcamComponentElement.nativeElement;\n  }\n\n  /**\n   * Converts a blob image into a dataUrl which can be rendered in the template\n   * @param blob\n   * @private\n   */\n  private drawDebugImage(blob: Blob): void {\n    const reader = new FileReader();\n    reader.onloadend = () => (this.imageAsDataUrl = reader.result);\n    reader.readAsDataURL(blob);\n  }\n\n  /**\n   * If the device can't be accessed, triggers the rendering of the according error page.\n   * @param error\n   */\n  handleInitError(error: WebcamInitError): void {\n    this.mediaDeviceStateStore.dispatch(MediaDeviceState.DEVICE_NO_PERMISSION);\n    this.appStateStore.dispatch(AppState.DEVICE_NO_PERMISSION);\n    this.logger.error('Failed to initialize webcam', error);\n  }\n\n  /**\n   * Toggles between available webcams\n   */\n  switchToNextWebcam(): void {\n    this.nextWebcam.next(true);\n  }\n\n  /**\n   * Callback which is executed when the video stream of a webcam is ready for further processing.\n   * @param deviceId: the webcams device id inside the browser\n   */\n  cameraSwitched(deviceId: string) {\n    this.mediaDeviceStateStore.dispatch(MediaDeviceState.DEVICE_CAMERA_READY);\n    this.logger.info('Camera device switched. DeviceId:', deviceId);\n  }\n\n  /**\n   * Used to determine if the debug output of the manipulated image should be shown or not\n   */\n  debugImageManipulations(): boolean {\n    return environment.debugImageManipulations;\n  }\n\n  /**\n   * Patches the ngx-pinch-zoom component by not taking the cursors offset into account when zooming into the video stream.\n   * @private\n   */\n  private centerContentOnZoom(): void {\n    Object.defineProperty(this.pinchZoomComponent.pinchZoom, 'moveX', {\n      get() {\n        return -Math.abs((this.element.offsetWidth * (1 - this.scale)) / 2);\n      },\n      set() {\n        return;\n      },\n    });\n\n    Object.defineProperty(this.pinchZoomComponent.pinchZoom, 'moveY', {\n      get() {\n        return -Math.abs((this.element.offsetHeight * (1 - this.scale)) / 2);\n      },\n      set() {\n        return;\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n    \n    \n  \n\n  Powered by SnapOdds\n\n\n\n  \n\n\n    \n\n    \n                \n                    ./webcam.component.scss\n                \n                @use 'tools';\n@use 'settings';\n@use 'sass:math';\n\n$viewfinder-stroke-width: 4px;\n$viewfinder-stand-offset: 7%;\n\n@mixin aspect-ratio {\n  aspect-ratio: 375/295;\n\n  @include tools.media-tiny--portrait {\n    aspect-ratio: 3/2.2;\n  }\n}\n\n:host {\n  background-color: #000;\n  display: block;\n\n  /* stylelint-disable-next-line selector-pseudo-element-no-unknown */\n  ::ng-deep {\n    .webcam-wrapper {\n      @include aspect-ratio;\n\n      align-items: center;\n      display: flex !important;\n      overflow: hidden;\n    }\n\n    video {\n      height: auto !important;\n      width: 100% !important;\n    }\n\n    pinch-zoom {\n      display: flex;\n    }\n  }\n\n  .c-camera {\n    &--container {\n      @include aspect-ratio;\n\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n      position: relative;\n    }\n\n    &--viewfinder {\n      left: 50%;\n      pointer-events: none;\n      position: absolute;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      width: 90%;\n      z-index: map-get(settings.$z-index, 'viewfinder');\n\n      &__tv-frame {\n        border: $viewfinder-stroke-width solid #fff;\n        box-shadow: 0 0 0 999px rgb(0 0 0 / 50%);\n        content: '';\n        display: block;\n        padding-top: math.div(9, 16) * 100%;\n        position: relative;\n      }\n\n      &__tv-stand {\n        border-bottom: $viewfinder-stroke-width solid #fff;\n        border-radius: 5px;\n        bottom: -$viewfinder-stand-offset;\n        left: 50%;\n        position: absolute;\n        transform: translate(-50%, $viewfinder-stand-offset);\n        width: 15%;\n      }\n\n      &__tv-connector {\n        border-left: $viewfinder-stroke-width solid #fff;\n        bottom: -$viewfinder-stand-offset;\n        content: '';\n        height: $viewfinder-stand-offset;\n        left: 50%;\n        position: absolute;\n        transform: translate(-50%, 0);\n      }\n    }\n\n    &--footer {\n      &__powered-by {\n        bottom: settings.$spacing-sm;\n        color: #fff;\n        font-size: settings.$font-xs;\n        font-weight: 200;\n        left: 0;\n        position: absolute;\n        right: 0;\n        text-align: center;\n        z-index: map-get(settings.$z-index, 'viewfinder') + 1;\n\n        /* stylelint-disable-next-line max-nesting-depth*/\n        @include tools.media-tiny--portrait {\n          bottom: settings.$spacing-xs;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Powered by SnapOdds  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'snapodds-sdk'},{'name': 'ContentComponent', 'selector': 'snapodds-content'},{'name': 'FooterComponent', 'selector': 'snapodds-footer'},{'name': 'HeaderComponent', 'selector': 'snapodds-header'},{'name': 'HelpComponent', 'selector': 'snapodds-help'},{'name': 'OddsComponent', 'selector': 'snapodds-odds'},{'name': 'OddsLineComponent', 'selector': 'snapodds-odds-line'},{'name': 'SnapComponent', 'selector': 'snapodds-snap'},{'name': 'SpinnerComponent', 'selector': 'snapodds-spinner'},{'name': 'SwitchSvgComponent', 'selector': 'snapodds-switch-svg'},{'name': 'TriggerComponent', 'selector': 'snapodds-trigger'},{'name': 'TriggerSvgComponent', 'selector': 'snapodds-trigger-svg'},{'name': 'UserFeedbackMessageComponent', 'selector': 'snapodds-user-feedback-message'},{'name': 'WebcamComponent', 'selector': 'snapodds-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WebcamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/snapodds/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                33 %\n                (6/18)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/content/content.component.ts\n            \n            component\n            ContentComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/help/help.component.ts\n            \n            component\n            HelpComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/odds-line/odds-line.component.ts\n            \n            component\n            OddsLineComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/odds/odds.component.ts\n            \n            component\n            OddsComponent\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/pipes/best-offer.pipe.ts\n            \n            pipe\n            BestOfferLinePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/pipes/number-format.pipe.ts\n            \n            pipe\n            NumberFormatPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/snap/snap.component.ts\n            \n            component\n            SnapComponent\n            \n                61 %\n                (11/18)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/spinner/spinner.component.ts\n            \n            component\n            SpinnerComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/svgs/switch.svg.component.ts\n            \n            component\n            SwitchSvgComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/svgs/trigger.svg.component.ts\n            \n            component\n            TriggerSvgComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/trigger/trigger.component.ts\n            \n            component\n            TriggerComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/user-feedback-message/user-feedback-message.component.ts\n            \n            component\n            UserFeedbackMessageComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/snapodds/src/app/webcam/webcam.component.ts\n            \n            component\n            WebcamComponent\n            \n                47 %\n                (10/21)\n            \n        \n        \n            \n                \n                apps/snapodds/src/config/application-config.ts\n            \n            interface\n            ApplicationConfig\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                apps/snapodds/src/models/best-offer-line-view-model.ts\n            \n            interface\n            BestOfferLineViewModel\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                apps/snapodds/src/models/best-offer-view-model.ts\n            \n            interface\n            BestOfferViewModel\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/snapodds/src/models/line-odds.ts\n            \n            interface\n            LineOdds\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                apps/snapodds/src/models/sports-book-line-view-model.ts\n            \n            interface\n            SportsBookLineViewModel\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                apps/snapodds/src/models/sports-book-view-model.ts\n            \n            interface\n            SportsBookViewModel\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/api/api-errors.ts\n            \n            class\n            TvSearchNoResultError\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/api/odds.service.ts\n            \n            injectable\n            OddsService\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/api/tv-search.service.ts\n            \n            injectable\n            TvSearchService\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/config/application-config.service.ts\n            \n            injectable\n            ApplicationConfigService\n            \n                66 %\n                (12/18)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/config/application-config.service.ts\n            \n            variable\n            DEFAULT_APPLICATION_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/i18n/file-translate-loader.ts\n            \n            class\n            FileTranslateLoader\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/i18n/translation-entries.ts\n            \n            interface\n            TranslationEntries\n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/image-manipulation/image-manipulation.service.ts\n            \n            injectable\n            ImageManipulationService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/logger/log-level.ts\n            \n            function\n            fromLogLevel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/logger/log-level.ts\n            \n            function\n            toLogLevel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/logger/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/notification/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/snap-odds/snap-odds-facade.service.ts\n            \n            injectable\n            SnapOddsFacade\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tokens/console-token.ts\n            \n            variable\n            CONSOLE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tokens/document-token.ts\n            \n            variable\n            DOCUMENT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tokens/location-token.ts\n            \n            variable\n            LOCATION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tokens/navigator-token.ts\n            \n            variable\n            NAVIGATOR\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tokens/storage-token.ts\n            \n            variable\n            STORAGE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tokens/window-token.ts\n            \n            variable\n            WINDOW\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tracking/google-analytics.service.ts\n            \n            injectable\n            GoogleAnalyticsService\n            \n                31 %\n                (5/16)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tracking/google-analytics.service.ts\n            \n            variable\n            ga\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/services/tracking/google-analytics.service.ts\n            \n            variable\n            gtag\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/snapodds/src/states/app-state.store.ts\n            \n            injectable\n            AppStateStore\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                apps/snapodds/src/states/media-device-state.store.ts\n            \n            injectable\n            MediaDeviceStateStore\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/auth/access-token.ts\n            \n            interface\n            AccessToken\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/link.ts\n            \n            interface\n            Link\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/odds/competitor.ts\n            \n            interface\n            Competitor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/odds/odds-best-offer.ts\n            \n            interface\n            OddsBestOffer\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/odds/odds-offer-outcome.ts\n            \n            interface\n            OddsOfferOutcome\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/odds/odds-offer.ts\n            \n            interface\n            OddsOffer\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/odds/odds-response.ts\n            \n            interface\n            OddsResponse\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/odds/outcome.ts\n            \n            interface\n            OddsBestOfferOutcome\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/odds/player.ts\n            \n            interface\n            Player\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/odds/sports-book.ts\n            \n            interface\n            SportsBook\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/tv-search/point2d.ts\n            \n            interface\n            Point2d\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/tv-search/quadrangle2d.ts\n            \n            interface\n            Quadrangle2d\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/tv-search/sport-event.ts\n            \n            interface\n            SportEvent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/tv-search/tv-channel.ts\n            \n            interface\n            TvChannel\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/tv-search/tv-search-result-entry.ts\n            \n            interface\n            TvSearchResultEntry\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                libs/response/src/lib/typings/tv-search/tv-search-result.ts\n            \n            interface\n            TvSearchResult\n            \n                100 %\n                (4/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 13.1.3\n        \n            @angular/common : 13.1.3\n        \n            @angular/compiler : 13.1.3\n        \n            @angular/core : 13.1.3\n        \n            @angular/elements : 13.1.3\n        \n            @angular/forms : 13.1.3\n        \n            @angular/platform-browser : 13.1.3\n        \n            @angular/platform-browser-dynamic : 13.1.3\n        \n            @angular/router : 13.1.3\n        \n            @ngx-translate/core : ^14.0.0\n        \n            @nrwl/angular : 13.4.6\n        \n            cors : ^2.8.5\n        \n            date-fns : ^2.28.0\n        \n            dotenv : ^10.0.0\n        \n            express : 4.17.1\n        \n            ngx-pinch-zoom : ^2.6.2\n        \n            ngx-webcam : ^0.4.1\n        \n            rxjs : ~7.4.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppState   (apps/.../app-state.store.ts)\n                        \n                        \n                            LogLevel   (apps/.../log-level.ts)\n                        \n                        \n                            MediaDeviceState   (apps/.../media-device-state.store.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/snapodds/src/states/app-state.store.ts\n    \n        \n            \n                \n                    \n                        \n                        AppState\n                    \n                \n                    \n                        \n                            The various AppStates which are used for determining which view to render\n\n                        \n                    \n                        \n                            \n                                 SHOW_HELP\n                            \n                        \n                        \n                            \n                                Value : SHOW_HELP\n                            \n                        \n                        \n                            \n                                 SHOW_ODDS\n                            \n                        \n                        \n                            \n                                Value : SHOW_ODDS\n                            \n                        \n                        \n                            \n                                 SNAP_READY\n                            \n                        \n                        \n                            \n                                Value : SNAP_READY\n                            \n                        \n                        \n                            \n                                 SNAP_IN_PROGRESS\n                            \n                        \n                        \n                            \n                                Value : SNAP_IN_PROGRESS\n                            \n                        \n                        \n                            \n                                 SNAP_FAILED\n                            \n                        \n                        \n                            \n                                Value : SNAP_FAILED\n                            \n                        \n                        \n                            \n                                 SNAP_NO_RESULTS\n                            \n                        \n                        \n                            \n                                Value : SNAP_NO_RESULTS\n                            \n                        \n                        \n                            \n                                 DEVICE_NO_CAMERA\n                            \n                        \n                        \n                            \n                                Value : DEVICE_NO_CAMERA\n                            \n                        \n                        \n                            \n                                 DEVICE_NO_PERMISSION\n                            \n                        \n                        \n                            \n                                Value : DEVICE_NO_PERMISSION\n                            \n                        \n            \n        \n\n    apps/snapodds/src/services/logger/log-level.ts\n    \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                    \n                        \n                            Possible LogLevels, ordered by severity\n\n                        \n                    \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 SILENT\n                            \n                        \n            \n        \n\n    apps/snapodds/src/states/media-device-state.store.ts\n    \n        \n            \n                \n                    \n                        \n                        MediaDeviceState\n                    \n                \n                    \n                        \n                            The various MediaDeviceState which are used rendering user feedback\n\n                        \n                    \n                        \n                            \n                                 DEVICE_INIT\n                            \n                        \n                        \n                            \n                                Value : DEVICE_INIT\n                            \n                        \n                        \n                            \n                                 DEVICE_CAMERA_READY\n                            \n                        \n                        \n                            \n                                Value : DEVICE_CAMERA_READY\n                            \n                        \n                        \n                            \n                                 DEVICE_NO_PERMISSION\n                            \n                        \n                        \n                            \n                                Value : DEVICE_NO_PERMISSION\n                            \n                        \n                        \n                            \n                                 DEVICE_NO_CAMERA\n                            \n                        \n                        \n                            \n                                Value : DEVICE_NO_CAMERA\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            fromLogLevel   (apps/.../log-level.ts)\n                        \n                        \n                            toLogLevel   (apps/.../log-level.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/snapodds/src/services/logger/log-level.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fromLogLevel\n                        \n                    \n                \n            \n            \n                \nfromLogLevel(logLevel: LogLevel)\n                \n            \n\n\n\n\n            \n                \n                    Convert LogLevel to string representation\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logLevel\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toLogLevel\n                        \n                    \n                \n            \n            \n                \ntoLogLevel(logLevel)\n                \n            \n\n\n\n\n            \n                \n                    Convert a string to a LogLevel\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logLevel\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LogLevel\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSnapOdds\nThis project was generated using Nx.\nDocumentation\nClient Documentation\nSource Code Documentation\nProjects\n\nSnapOdds\nSnapOdds is the main application and contains the angular element which is distributed as web component.\n\nSnapOdds Api\nSnapOdds API app is an express.js server which is used for development.\n\nSnapOdds Builder\nSnapOdds Builder is used to provide a wrapper for the initialization and configuration of the SnapOdds web component.\n\n\nLibraries\n\nResponses\nIt contains the typings for the REST endpoints of the SnapScreen API.\n\nDevelopment server\nRun ng serve snapodds for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nRun ng serve snapodds-api for a dev api server available on http://localhost:3333/\nCode scaffolding\nRun ng g component my-component --project=snapodds to generate a new component.\nBuild\nRun ng build snapodds to build the project. The build artifacts will be stored in the dist/snapodds directory. Use the --prod flag for a production build.\nRelease\nRun npm run build:elements to build the project and all its peer dependencies. The build artifacts will be stored in the dist/elements/ directory.\nRunning all unit tests\nRun npm run test to execute all unit tests via Jest.\nRun nx affected:test to execute only the unit tests affected by a change.\nUnderstand your workspace\nRun nx dep-graph to see a diagram of the dependencies of your projects.\nFurther help\nNx Documentation\n10-minute video showing all Nx features\nInteractive Tutorial\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBestOfferLinePipe\n\nBestOfferLinePipe\n\nAppModule -->\n\nBestOfferLinePipe->AppModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nAppModule -->\n\nContentComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHelpComponent\n\nHelpComponent\n\nAppModule -->\n\nHelpComponent->AppModule\n\n\n\n\n\nNumberFormatPipe\n\nNumberFormatPipe\n\nAppModule -->\n\nNumberFormatPipe->AppModule\n\n\n\n\n\nOddsComponent\n\nOddsComponent\n\nAppModule -->\n\nOddsComponent->AppModule\n\n\n\n\n\nOddsLineComponent\n\nOddsLineComponent\n\nAppModule -->\n\nOddsLineComponent->AppModule\n\n\n\n\n\nSnapComponent\n\nSnapComponent\n\nAppModule -->\n\nSnapComponent->AppModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nAppModule -->\n\nSpinnerComponent->AppModule\n\n\n\n\n\nSwitchSvgComponent\n\nSwitchSvgComponent\n\nAppModule -->\n\nSwitchSvgComponent->AppModule\n\n\n\n\n\nTriggerComponent\n\nTriggerComponent\n\nAppModule -->\n\nTriggerComponent->AppModule\n\n\n\n\n\nTriggerSvgComponent\n\nTriggerSvgComponent\n\nAppModule -->\n\nTriggerSvgComponent->AppModule\n\n\n\n\n\nUserFeedbackMessageComponent\n\nUserFeedbackMessageComponent\n\nAppModule -->\n\nUserFeedbackMessageComponent->AppModule\n\n\n\n\n\nWebcamComponent\n\nWebcamComponent\n\nAppModule -->\n\nWebcamComponent->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    23 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ManipulatedImage   (apps/.../manipulated-image.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/snapodds/src/services/image-manipulation/manipulated-image.ts\n    \n    \n        \n            \n                \n                    \n                    ManipulatedImage\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CONSOLE   (apps/.../console-token.ts)\n                        \n                        \n                            DEFAULT_APPLICATION_CONFIG   (apps/.../application-config.service.ts)\n                        \n                        \n                            DOCUMENT   (apps/.../document-token.ts)\n                        \n                        \n                            ga   (apps/.../google-analytics.service.ts)\n                        \n                        \n                            gtag   (apps/.../google-analytics.service.ts)\n                        \n                        \n                            LOCATION   (apps/.../location-token.ts)\n                        \n                        \n                            NAVIGATOR   (apps/.../navigator-token.ts)\n                        \n                        \n                            STORAGE   (apps/.../storage-token.ts)\n                        \n                        \n                            WINDOW   (apps/.../window-token.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/snapodds/src/services/tokens/console-token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CONSOLE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('browser console implementation', {\n  providedIn: 'root',\n  factory: () => console,\n})\n                    \n                \n\n            \n                \n                    InjectionToken for the browser console implementation\n\n                \n            \n\n        \n    \n\n    apps/snapodds/src/services/config/application-config.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_APPLICATION_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  apiUrl: 'https://api.us.snapscreen.com',\n  language: 'en',\n  autoSnap: false,\n  logLevel: LogLevel.SILENT,\n  vibrate: false,\n  logCallback: noop,\n  closeCallback: noop,\n  resultsCallback: noop,\n  accessTokenProvider: () => Promise.reject('No accessTokenProvider specified'),\n}\n                    \n                \n\n            \n                \n                    Default application configuration\n\n                \n            \n\n        \n    \n\n    apps/snapodds/src/services/tokens/document-token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DOCUMENT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('browser document implementation', {\n  providedIn: 'root',\n  factory: () => document,\n})\n                    \n                \n\n            \n                \n                    InjectionToken for the browser document implementation\n\n                \n            \n\n        \n    \n\n    apps/snapodds/src/services/tracking/google-analytics.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ga\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Function\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gtag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Function\n\n                    \n                \n\n\n        \n    \n\n    apps/snapodds/src/services/tokens/location-token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOCATION\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('browser location implementation', {\n  providedIn: 'root',\n  factory: () => location,\n})\n                    \n                \n\n            \n                \n                    InjectionToken for the browser location implementation\n\n                \n            \n\n        \n    \n\n    apps/snapodds/src/services/tokens/navigator-token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NAVIGATOR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('browser navigator implementation', {\n  providedIn: 'root',\n  factory: () => navigator,\n})\n                    \n                \n\n            \n                \n                    InjectionToken for the browser navigator implementation\n\n                \n            \n\n        \n    \n\n    apps/snapodds/src/services/tokens/storage-token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        STORAGE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('browser local storage implementation', {\n  providedIn: 'root',\n  factory: () => localStorage,\n})\n                    \n                \n\n            \n                \n                    InjectionToken for the browser local storage implementation\n\n                \n            \n\n        \n    \n\n    apps/snapodds/src/services/tokens/window-token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        WINDOW\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('browser window implementation', {\n  providedIn: 'root',\n  factory: () => window,\n})\n                    \n                \n\n            \n                \n                    InjectionToken for the browser window implementation\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
